<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>软件分享</title>
    <url>/2020/04/26/software/</url>
    <content><![CDATA[<font size=4>

<p>博客中的文件都是绿色软件，不用担心软件安装问题。<a id="more"></a><br>博主电脑为win10 64位操作系统，所以博文中软件都是基于这个环境中。所有软件均可使用，安装过程有任何问题都可以联系博主（<a href="mailto:i@langlo.top">i@langlo.top</a>)。后期会更新部分软件的使用教程，部分软件较大，请放心所有下载链接都经过阿里云加速，配合motrix下载更佳哟！</p>
<p>软件在一直更新，如有其他软件需要，仍可联系博主，若您有好用的软件也可以联系博主。</p>
<p>好东西希望大家好好分享，创造不易，网址服务器维护等费用较大，请各位老爷慷慨解囊，大家的支持就是我前进的动力，希望大家多多支持，如果您喜欢这个博文，请把它分享给你的朋友们！！！</p>
<h1 id="软件系列"><a href="#软件系列" class="headerlink" title="软件系列"></a>软件系列</h1><table>
<thead>
<tr>
<th>Adobe系列</th>
<th>下载地址</th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/Adobe/AcrobatXIPro04.zip" target="_blank" rel="noopener">AcrobatXIPro04.zip</a></td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/Adobe/AI%20%20cc2018%2064%E4%BD%8D.zip" target="_blank" rel="noopener">AI cc2018 64位.zip</a></td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/Adobe/CorelDRAW%20X8%20(64-Bit).rar" target="_blank" rel="noopener">CorelDRAW X8 (64-Bit).rar</a> 平面设计专用 矢量排版等专用</td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/Adobe/Lightroom%20Classic%209.0.rar" target="_blank" rel="noopener">Lightroom Classic 9.0.rar</a></td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/Adobe/Pr%20cc2018%2064%E4%BD%8D_2.zip" target="_blank" rel="noopener">Pr cc2018 64位_2.zip</a></td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/Adobe/PS%20cc2018%2064%E4%BD%8D.rar" target="_blank" rel="noopener">PS cc2018 64位.rar</a></td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/Adobe/Wondershare_PDFelementV6.3.1.2765.rar" target="_blank" rel="noopener">Wondershare_PDFelementV6.3.1.2765</a> pdf阅读器,与acrobat类似</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>上网系列</th>
<th>下载地址</th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/Google/ChromeSetup.exe" target="_blank" rel="noopener">ChromeSetup.exe</a></td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/Google/Clash-Windows.exe" target="_blank" rel="noopener">Clash-Windows.exe</a> win64版本</td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/Google/%E8%B0%B7%E6%AD%8C%E4%B8%8A%E7%BD%91%E5%8A%A9%E6%89%8B_v1.4.3.zip" target="_blank" rel="noopener">谷歌上网助手_v1.4.3.zip</a></td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>Microsoft Office</th>
<th>下载地址</th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/office/office%202010.iso" target="_blank" rel="noopener">office 2010.iso</a></td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/office/office%202016.iso" target="_blank" rel="noopener">office 2016.iso</a></td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/office/office%20365.zip" target="_blank" rel="noopener">office 365.zip</a></td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/office/office%20tool.zip" target="_blank" rel="noopener">office tool.zip</a></td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/office/Visio%202016%2064bit.zip" target="_blank" rel="noopener">Visio 2016 64bit.zip</a></td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/office/HEU_KMS_Activator_CH_v19.3.0.zip" target="_blank" rel="noopener">HEU_KMS_Activator_CH_v19.3.0.zip</a> 激活工具</td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/office/Office.Tab.Enterprise.v14.00.exe" target="_blank" rel="noopener">Office.Tab.Enterprise.v14.00.exe</a> office标签工具(已激活),</td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/office/office%E5%8D%B8%E8%BD%BD%E5%B7%A5%E5%85%B7.diagcab" target="_blank" rel="noopener">office卸载工具.diagcab</a></td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/office/OIIO%E6%95%88%E7%8E%87%E4%B8%93%E5%AE%B6%20excel%E6%8F%92%E4%BB%B6.zip" target="_blank" rel="noopener">OIIO效率专家 excel插件.zip</a></td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/office/OneKeyTools%20Lite%20for%20PowerPoint%20%E5%AE%89%E8%A3%85%E5%8C%85.exe" target="_blank" rel="noopener">OneKeyTools Lite for PowerPoint 安装包.exe</a></td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/office/QuickLook%203.6.5%EF%BC%88%E9%99%84%E5%B8%A6office%E6%8F%92%E4%BB%B6%EF%BC%89.rar" target="_blank" rel="noopener">QuickLook 3.6.5（附带office插件）.rar</a></td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>科研软件</th>
<th>下载地址</th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/%E7%A7%91%E7%A0%94%E8%BD%AF%E4%BB%B6/CAD_2014_64bit.zip" target="_blank" rel="noopener">CAD_2014_64bit.zip</a></td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/%E7%A7%91%E7%A0%94%E8%BD%AF%E4%BB%B6/Citavi6Setup.exe" target="_blank" rel="noopener">Citavi6Setup.exe</a> 博主一直在用的文献管理工具</td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/%E7%A7%91%E7%A0%94%E8%BD%AF%E4%BB%B6/Design%2BExpert%2B10.zip" target="_blank" rel="noopener">Design+Expert+10.zip</a> 实验设计软件</td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/%E7%A7%91%E7%A0%94%E8%BD%AF%E4%BB%B6/Design-Expert%208.0.6%2064bit.zip" target="_blank" rel="noopener">Design-Expert 8.0.6 64bit.zip</a></td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/%E7%A7%91%E7%A0%94%E8%BD%AF%E4%BB%B6/ENX9%E5%AE%89%E8%A3%85%E5%8C%85.rar" target="_blank" rel="noopener">ENX9安装包.rar</a></td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/%E7%A7%91%E7%A0%94%E8%BD%AF%E4%BB%B6/Fish-v324-0712.zip" target="_blank" rel="noopener">Fish-v324-0712.zip</a> 下载文库等文档</td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/%E7%A7%91%E7%A0%94%E8%BD%AF%E4%BB%B6/ImageJ%2BWindow%E7%89%88.exe" target="_blank" rel="noopener">ImageJ+Window版.exe</a> 图片标注</td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/%E7%A7%91%E7%A0%94%E8%BD%AF%E4%BB%B6/Lingo12.zip" target="_blank" rel="noopener">Lingo12.zip</a></td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/%E7%A7%91%E7%A0%94%E8%BD%AF%E4%BB%B6/Mathematica_9.0.rar" target="_blank" rel="noopener">Mathematica_9.0.rar</a></td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/%E7%A7%91%E7%A0%94%E8%BD%AF%E4%BB%B6/Mathematics%20%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%E7%89%88.rar" target="_blank" rel="noopener">Mathematics 简体中文版.rar</a></td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/%E7%A7%91%E7%A0%94%E8%BD%AF%E4%BB%B6/mathtype.zip" target="_blank" rel="noopener">mathtype.zip</a></td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/%E7%A7%91%E7%A0%94%E8%BD%AF%E4%BB%B6/matlab%202014a.rar" target="_blank" rel="noopener">Matlab_R2014a_Windows.iso</a></td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/%E7%A7%91%E7%A0%94%E8%BD%AF%E4%BB%B6/Minitab%2B19.1%2Bx64.zip" target="_blank" rel="noopener">Minitab+19.1+x64.zip</a> 与dedsign xpert类似,实验设计软件</td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/%E7%A7%91%E7%A0%94%E8%BD%AF%E4%BB%B6/Motrix-Setup-1.4.1.exe" target="_blank" rel="noopener">Motrix-Setup-1.4.1.exe </a> 开源下载工具</td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/%E7%A7%91%E7%A0%94%E8%BD%AF%E4%BB%B6/Nano%20measure%E5%AE%89%E8%A3%85%E5%8C%85.zip" target="_blank" rel="noopener">Nano measure安装包.zip</a></td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/%E7%A7%91%E7%A0%94%E8%BD%AF%E4%BB%B6/NoteExpress_Vol_QingHua_3.2.0.7276_zh.exe" target="_blank" rel="noopener">NoteExpress_Vol_QingHua_3.2.0.7276_zh.exe</a> 支持中文的文献管理工具</td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/%E7%A7%91%E7%A0%94%E8%BD%AF%E4%BB%B6/Origin%208.0.rar" target="_blank" rel="noopener">Origin 8.0.rar</a></td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/%E7%A7%91%E7%A0%94%E8%BD%AF%E4%BB%B6/OrignPro_2017_2.zip" target="_blank" rel="noopener">OrignPro_2017_2(english).zip</a> 建议使用origin英文版,不同版本变化较大</td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/%E7%A7%91%E7%A0%94%E8%BD%AF%E4%BB%B6/prettyplotlib-master.zip" target="_blank" rel="noopener">prettyplotlib-master.zip</a></td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/%E7%A7%91%E7%A0%94%E8%BD%AF%E4%BB%B6/sigmaplot%2010.0%20%E7%A0%B4%E8%A7%A3%E7%89%88.zip" target="_blank" rel="noopener">sigmaplot 10.0 破解版.zip</a></td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/%E7%A7%91%E7%A0%94%E8%BD%AF%E4%BB%B6/SPSS_21.0_3987.rar" target="_blank" rel="noopener">SPSS_21.0_3987.rar</a></td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/%E7%A7%91%E7%A0%94%E8%BD%AF%E4%BB%B6/sublime%20text%E5%AE%89%E8%A3%85%E5%8C%85.part1.rar" target="_blank" rel="noopener">sublime text安装包.part1.rar</a> 文本编辑器,也可以使用VS Code 开源</td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/%E7%A7%91%E7%A0%94%E8%BD%AF%E4%BB%B6/%E8%8D%89%E5%9B%BE%E5%A4%A7%E5%B8%882016%E4%B8%AD%E6%96%87%E7%89%8864%E4%BD%8D.rar" target="_blank" rel="noopener">草图大师2016中文版64位.rar</a></td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>系统相关</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td><a href="https://www.huorong.cn/" target="_blank" rel="noopener">火绒电脑管家</a> 最好用的电脑管家 强制删除 清理弹窗等等 秒杀一切电脑管家!!!</td>
</tr>
<tr>
<td></td>
<td><a href="https://www.dogedoge.com/" target="_blank" rel="noopener">多吉搜索</a>  谷歌搜索固然好用,但中文搜索做的不是很好,推荐这个,不追踪用户信息.</td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/%E7%B3%BB%E7%BB%9F%E7%9B%B8%E5%85%B3/Bandicam.zip" target="_blank" rel="noopener">Bandicam.zip</a> 录屏大师</td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/%E7%B3%BB%E7%BB%9F%E7%9B%B8%E5%85%B3/bandzip.zip" target="_blank" rel="noopener">bandzip.zip</a> 解压缩大师</td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/%E7%B3%BB%E7%BB%9F%E7%9B%B8%E5%85%B3/Dism%2B%2B10.1.1000.100_2d2bf466baca088c4b35248f5a7316f4e00cac0b.zip" target="_blank" rel="noopener">Dism++.zip</a> 电脑清理大师</td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/%E7%B3%BB%E7%BB%9F%E7%9B%B8%E5%85%B3/Everything-1.4.1.935.x64.zip" target="_blank" rel="noopener">Everything-1.4.1.935.x64.zip</a> 电脑搜索文件神器</td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/%E7%B3%BB%E7%BB%9F%E7%9B%B8%E5%85%B3/geek.exe" target="_blank" rel="noopener">geek.exe</a> 卸载小工具 可卸载注册表等 较为干净</td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/%E7%B3%BB%E7%BB%9F%E7%9B%B8%E5%85%B3/Internet%20Download%20Manager%20v6.36%20Build%207.zip" target="_blank" rel="noopener">Internet Download Manager v6.36 Build 7.zip </a> IDM下载神器</td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/%E7%B3%BB%E7%BB%9F%E7%9B%B8%E5%85%B3/PE%E7%B3%BB%E7%BB%9F.rar" target="_blank" rel="noopener">PE系统.rar</a></td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/%E7%B3%BB%E7%BB%9F%E7%9B%B8%E5%85%B3/Snipaste-2.2.1-Beta2-x64.zip" target="_blank" rel="noopener">Snipaste-2.2.1-Beta2-x64.zip</a> 截屏利器</td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/%E7%B3%BB%E7%BB%9F%E7%9B%B8%E5%85%B3/TeamViewer-v15.0.8397_%E7%BB%BF%E8%89%B2%E7%89%B9%E5%88%AB%E7%89%88.rar" target="_blank" rel="noopener">TeamViewer-v15.0.8397_绿色特别版.rar</a> 远程办公 国内可用向日葵</td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/%E7%B3%BB%E7%BB%9F%E7%9B%B8%E5%85%B3/vwmare.zip" target="_blank" rel="noopener">vwmare.zip</a> 虚拟机工具</td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/%E7%B3%BB%E7%BB%9F%E7%9B%B8%E5%85%B3/win%20pro%2010.iso" target="_blank" rel="noopener">win pro 10.iso</a></td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/%E7%B3%BB%E7%BB%9F%E7%9B%B8%E5%85%B3/xshell6.zip" target="_blank" rel="noopener">xshell6.zip </a> 远程服务器链接</td>
</tr>
<tr>
<td></td>
<td><a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E8%BD%AF%E4%BB%B6/%E7%B3%BB%E7%BB%9F%E7%9B%B8%E5%85%B3/%E5%A4%A9%E8%8B%A5OCR%E6%96%87%E5%AD%97%E8%AF%86%E5%88%ABV4.48.zip" target="_blank" rel="noopener">天若OCR文字识别V4.48.zip </a>  个人认为最好用的OCR文件(文字识别)</td>
</tr>
</tbody></table>
<h2 id="在线小工具展开目录"><a href="#在线小工具展开目录" class="headerlink" title="在线小工具展开目录"></a>在线小工具展开目录</h2><table>
<thead>
<tr>
<th><a href="https://dalao.ru/" target="_blank" rel="noopener">大佬搜索</a></th>
<th>好用的搜索引擎</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://ps.gaoding.com/" target="_blank" rel="noopener">在线 ps</a>、<a href="http://www.polaxiong.com/editor" target="_blank" rel="noopener">泼辣修图</a></td>
<td>在线图片编辑工具</td>
</tr>
<tr>
<td><a href="https://tableconvert.com/" target="_blank" rel="noopener">在线表格转换</a></td>
<td>在线表格转换工具</td>
</tr>
<tr>
<td><a href="https://www.apowersoft.cn/compress-file-online" target="_blank" rel="noopener">在线视频压缩</a></td>
<td>免费优质压缩视频、图片及 PDF 文件</td>
</tr>
<tr>
<td><a href="https://docsmall.com/" target="_blank" rel="noopener">docsmall</a></td>
<td>在线图片压缩处理，在线 pdf 处理</td>
</tr>
<tr>
<td><a href="http://x.bensee.com.cn/parse" target="_blank" rel="noopener">短视频解析</a></td>
<td>抖音快手短视频无水印下载</td>
</tr>
<tr>
<td><a href="https://www.xbeibeix.com/api/bilibili/?hao.su" target="_blank" rel="noopener">哔哩哔哩解析</a></td>
<td>哔哩哔哩视频在线下载</td>
</tr>
<tr>
<td><a href="http://mp3cut.net/cn/" target="_blank" rel="noopener">Audio Cutter</a>、<a href="http://ringer.org/zh/" target="_blank" rel="noopener">ringer</a></td>
<td>在线铃声剪辑工具</td>
</tr>
<tr>
<td><a href="https://duguang.aliyun.com/experience?type=doc&midtype=fulldoc&subtype=general" target="_blank" rel="noopener">阿里读光</a>、<a href="https://pdf.shinescan.tech/?hao.su" target="_blank" rel="noopener">白描 OCR</a></td>
<td>在线图片 OCR 识别应用</td>
</tr>
<tr>
<td><a href="https://convertio.co/zh/" target="_blank" rel="noopener">convertio</a></td>
<td>在线格式转换工具</td>
</tr>
<tr>
<td><a href="https://hao.su/47/" target="_blank" rel="noopener">临时邮箱</a></td>
<td>保护隐私，随机生成临时邮箱地址</td>
</tr>
<tr>
<td><a href="https://hao.su/2495/" target="_blank" rel="noopener">在线接码</a></td>
<td>保护隐私，免费的电话短信接受</td>
</tr>
<tr>
<td><a href="https://hao.su/48/" target="_blank" rel="noopener">图片压缩</a></td>
<td>图片压缩一般在线服务足以满足需求</td>
</tr>
<tr>
<td><a href="https://hao.su/2225/" target="_blank" rel="noopener">二维码生成</a></td>
<td>添加文字或网址，动态生成二维码</td>
</tr>
<tr>
<td><a href="https://hao.su/pic.html" target="_blank" rel="noopener">在线图床</a></td>
<td>快速获取图片链接，方便分享</td>
</tr>
<tr>
<td><a href="https://hao.su/1420/" target="_blank" rel="noopener">短地址汇总</a></td>
<td>缩短网址链接，方便分享</td>
</tr>
</tbody></table>
<h2 id="在线办公展开目录"><a href="#在线办公展开目录" class="headerlink" title="在线办公展开目录"></a>在线办公展开目录</h2><table>
<thead>
<tr>
<th>「推荐」可视化团队协作工具</th>
<th><a href="https://www.huiyizhuo.com/" target="_blank" rel="noopener">会议桌</a></th>
</tr>
</thead>
<tbody><tr>
<td>阿里巴巴团队出品在线办公利器</td>
<td><a href="https://yuque.com/" target="_blank" rel="noopener">语雀</a></td>
</tr>
<tr>
<td>腾讯系产品无缝联动</td>
<td><a href="https://docs.qq.com/" target="_blank" rel="noopener">腾讯文档</a></td>
</tr>
<tr>
<td>国内知名在线文档</td>
<td><a href="https://shimo.im/" target="_blank" rel="noopener">石墨文档</a></td>
</tr>
<tr>
<td>国外知名在线协作平台</td>
<td><a href="https://notion.so/" target="_blank" rel="noopener">notion</a></td>
</tr>
</tbody></table>
<h2 id="图片处理展开目录"><a href="#图片处理展开目录" class="headerlink" title="图片处理展开目录"></a>图片处理展开目录</h2><p><a href="https://imglarger.com/Tw" target="_blank" rel="noopener">在线抠图</a>，图片 ai 放大</p>
<p>更多的在线抠图、图片无损放大网站，可以看更多：<a href="https://hao.su/3095/" target="_blank" rel="noopener">图片放大</a>、<a href="https://hao.su/2968/" target="_blank" rel="noopener">在线抠图</a>网站</p>
<p><a href="https://squoosh.app/" target="_blank" rel="noopener">Squoosh</a> 谷歌出品的图片压缩网站</p>
<p><a href="https://tool.tanpok.com/" target="_blank" rel="noopener">tanpok 图片压缩</a>基于浏览器提供的压缩功能</p>
<p><a href="https://tiomg.org/compress-image" target="_blank" rel="noopener">太美工具箱图片压缩工具</a> 智能化的图片压缩，支持 PNG/GIF/JPG 图片压缩。</p>
<p><a href="https://www.tutieshi.com/" target="_blank" rel="noopener">图贴士</a> GIF 图片工具箱 / GIF 压缩 / 视频转 GIF</p>
<h2 id="在线接码展开目录"><a href="#在线接码展开目录" class="headerlink" title="在线接码展开目录"></a>在线接码展开目录</h2><ul>
<li><a href="https://www.pdflibr.com/" target="_blank" rel="noopener">https://www.pdflibr.com</a></li>
<li><a href="https://www.visitorsms.com/cn" target="_blank" rel="noopener">https://www.visitorsms.com/cn</a></li>
<li><a href="https://www.becmd.com/" target="_blank" rel="noopener">https://www.becmd.com</a></li>
</ul>
<h2 id="IP-查询展开目录"><a href="#IP-查询展开目录" class="headerlink" title="IP 查询展开目录"></a>IP 查询展开目录</h2><ul>
<li><a href="https://ip.sb/" target="_blank" rel="noopener">https://ip.sb</a></li>
<li><a href="https://www.ipip.net/" target="_blank" rel="noopener">https://www.ipip.net</a></li>
<li><a href="https://ip.cn/" target="_blank" rel="noopener">https://ip.cn</a></li>
</ul>
<h2 id="临时邮箱展开目录"><a href="#临时邮箱展开目录" class="headerlink" title="临时邮箱展开目录"></a>临时邮箱展开目录</h2><ul>
<li><a href="https://9em.org/" target="_blank" rel="noopener">https://9em.org</a></li>
</ul>
<p>9em.org 来自不死鸟微信群内大佬，这是一个 10 分钟邮箱服务，邮箱后缀为 <code>@9em.org</code> 9em 取自 九条命 Email</p>
<p>在屏幕右上角输入一个你想要的邮箱前缀，就能收取邮件需要注意的是这个邮箱对所有人都是公开的，并且邮件仅在服务器保存十分钟，十分钟后会自动删除</p>
<ul>
<li><a href="http://bccto.me/" target="_blank" rel="noopener">http://bccto.me</a></li>
</ul>
<p>10 分钟邮箱，可以自定义也可以随机申请的 10 分钟临时邮箱，支持自定义域名，可以将自己的域名绑定 bccto 服务。</p>
<ul>
<li><a href="https://10minutemail.net/" target="_blank" rel="noopener">https://10minutemail.net</a></li>
</ul>
</font>
]]></content>
      <categories>
        <category>分享</category>
      </categories>
      <tags>
        <tag>软件下载</tag>
      </tags>
  </entry>
  <entry>
    <title>windows备份文件到Github</title>
    <url>/2020/05/05/backup-blog/</url>
    <content><![CDATA[<p>博客的源码通常保存在本地，为了防止意外情况发生，还是很有必要备份的。GitHub作为一个代码托管网站，Github 已经允许免费用户创建无限量的私有 repo，是一个很不错的选择。前几天折腾了一下，感觉还是很好玩的，下面给大家分享一下过程。</p>
<h2 id="1-一点微小的事先准备"><a href="#1-一点微小的事先准备" class="headerlink" title="1. 一点微小的事先准备"></a>1. 一点微小的事先准备</h2><p>首先，你需要一个 Github 账户</p>
<p>进入一个你喜欢的安全的目录，此处直接以<code>/root</code>为例，右键打开<code>git bash</code>，创建一个 RSA 密匙</p>
<pre><code>ssh-keygen -t rsa</code></pre><p>然后根据提示输入生成密匙的文件名，此处举例输入<code>github</code>，其余的回车就行</p>
<p>完成后会有类似这样的显示，并且你会在C:\Users\用户名\ <code>.ssh</code>得到github<code>和</code>github.pub`这两个文件</p>
<p><a href="https://search.pstatic.net/common?type=origin&src=https://moe.best/usr/uploads/2018/03/1121566125.png" target="_blank" rel="noopener"><img src="https://search.pstatic.net/common?type=origin&src=https://moe.best/usr/uploads/2018/03/1121566125.png" alt="img"></a></p>
<p>接着用<code>cat</code>命令查看<code>github.pub</code>文件的内容，并复制下来</p>
<pre><code>cat github.pub</code></pre><p>回到你的 Github 页面，点右上角头像，Settings，</p>
<p>左边“SSH and GPG keys”，右上角“New SSH key”</p>
<p>然后将刚才复制的内容粘贴到“Key”输入框中，上方的“Tittle”自己随意输入，然后“Add SSH key”</p>
<p><a href="https://search.pstatic.net/common?type=origin&src=https://moe.best/usr/uploads/2018/03/1922402762.png" target="_blank" rel="noopener"><img src="https://search.pstatic.net/common?type=origin&src=https://moe.best/usr/uploads/2018/03/1922402762.png" alt="img"></a></p>
<p>这样事前准备就完成了，嗯，其实就是加一个 SSH 密匙到 Github，这样可以方便后续 Github 项目的同步</p>
<h2 id="2-创建一个私密-Github-项目"><a href="#2-创建一个私密-Github-项目" class="headerlink" title="2. 创建一个私密 Github 项目"></a>2. 创建一个私密 Github 项目</h2><p>直接右上角新建项目</p>
<p><a href="https://search.pstatic.net/common?type=origin&src=https://moe.best/usr/uploads/2018/03/137357443.png" target="_blank" rel="noopener"><img src="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E4%BA%91%E6%96%87%E4%BB%B6/backup-blog/new%20repository.jpg" alt="img"></a></p>
<p>记得选成私密（Private）就行，不然你整个网站就被别人盗走了……</p>
<h2 id="3-在你的站点目录下初始化你的-Github-项目"><a href="#3-在你的站点目录下初始化你的-Github-项目" class="headerlink" title="3. 在你的站点目录下初始化你的 Github 项目"></a>3. 在你的站点目录下初始化你的 Github 项目</h2><p>进入你的站点所在目录，并执行一系列 git 初始化命令，参考以下代码</p>
<p>进入你的博客根目录，Github 项目为<code>wghuui/test</code></p>
<pre><code>git init
git remote add origin git@github.com:wghuui/test.git</code></pre><h3 id="为什么用-SSH-方式而不用-HTTPS-方式？"><a href="#为什么用-SSH-方式而不用-HTTPS-方式？" class="headerlink" title="为什么用 SSH 方式而不用 HTTPS 方式？"></a>为什么用 SSH 方式而不用 HTTPS 方式？</h3><p>HTTPS 方式是要你输入用户名密码的，虽然你可以直接将用户名密码输入到链接中，像这样<code>https://yourname:password@github.com/name/project.git</code>，但是在链接中明文输入用户名密码是极不安全的，容易被监听窃取</p>
<p>另外还有一种办法是使用<code>git config --global credential.helper store</code>，这样会在<code>.git</code>中生成一个配置文件来储存你的用户名密码，但是你要意识到你现在所处的目录是一个网站，如果你忘了在网站配置中禁止对<code>.git</code>的访问，那么你的用户名密码也会很容易泄露</p>
<p>所以，SSH 还是最为稳妥的一种方式</p>
<h2 id="4-尝试同步当前站点到-Github-项目"><a href="#4-尝试同步当前站点到-Github-项目" class="headerlink" title="4. 尝试同步当前站点到 Github 项目"></a>4. 尝试同步当前站点到 Github 项目</h2><pre><code>cd d:blog
git add -A
git commit -m &quot;backup&quot;
ssh-agent bash
ssh-add /root/github
git push -u origin master</code></pre><h3 id="命令解释"><a href="#命令解释" class="headerlink" title="命令解释"></a>命令解释</h3><ol>
<li>进入网站目录</li>
<li>把目录下所有文件变化（增、删、改）提交到暂存区<br>如果你想只增、改而不删，那么可以用<code>git add .</code>命令代替</li>
<li>提交所有更改，这个<code>&quot;backup&quot;</code>可以随意填写，没有影响，其实就是你提交改动的时候的说明，但是 commit 的时候必须要有这个说明</li>
<li>启动 SSH 密钥管理器</li>
<li>将之前我们创建的<code>github</code>密匙文件添加到密匙管理器中</li>
<li>推送所有更改到 Github 项目</li>
</ol>
<p>执行完后你应该能看到文件上传进度等回显，等待执行完毕，然后去自己的私密项目刷新一下</p>
<p>你的网站是不是整个被上传上去了？</p>
<p><a href="https://search.pstatic.net/common?type=origin&src=https://moe.best/usr/uploads/2018/03/963492736.png" target="_blank" rel="noopener"><img src="https://search.pstatic.net/common?type=origin&src=https://moe.best/usr/uploads/2018/03/963492736.png" alt="img"></a></p>
<h2 id="5-一键备份脚本"><a href="#5-一键备份脚本" class="headerlink" title="5.一键备份脚本"></a>5.一键备份脚本</h2><p>shell命令后缀为<code>.sh</code>，例如建立一个<code>backup.sh</code>文件。在文件中输入：</p>
<pre class=" language-shell"><code class="language-shell">cd d:/blog
git add .
git commit -m "备份"
git remote add origin git@github.com:用户名/backup-blog.git
git pull --rebase origin master
git push -u origin master</code></pre>
<p>在<code>git bash</code>中执行<code>sh backup.sh</code>即可</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>博客 备份</tag>
      </tags>
  </entry>
  <entry>
    <title>python的一些学习资源</title>
    <url>/2020/05/03/pythonfuli/</url>
    <content><![CDATA[<h1 id="几个学习python的好资源"><a href="#几个学习python的好资源" class="headerlink" title="几个学习python的好资源."></a>几个学习python的好资源.</h1><p><img src="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E4%BA%91%E6%96%87%E4%BB%B6/pythonfuli/wiki-python.jpg" alt=""></p>
<p><font size =4>各大公众号、抖音机构号都在吹嘘python有多么神奇，简化计算，五分钟可以干完两个小时的工作，还有9.9python速成班。在这个时代，不会python，貌似都没有机会。不可否认，python在我们日常生活中确实有很重要的作用。入门门槛也不高，很容易学习，并且学习资源在网络上铺天盖地。各个行业，都或多或少与数据处理、数据计算等等有联系。计算机行业更不用说，python连续多年成为程序员使用人数最多的语言。</p>
<p>通过下面这张图可以很容易地了解python的具体作用。</p>
<p><img src="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E4%BA%91%E6%96%87%E4%BB%B6/pythonfuli/kandong-python-useing%20a%20picture.jpg" alt=""></p>
<p>根据我个人的经历，给大家推荐了几个个人认为比较好的课程。</p>
<h2 id="推荐"><a href="#推荐" class="headerlink" title="推荐"></a>推荐</h2><h3 id="1，极客时间官网"><a href="#1，极客时间官网" class="headerlink" title="1，极客时间官网"></a>1，<a href="https://time.geekbang.org/" target="_blank" rel="noopener">极客时间</a>官网</h3><p>推出的python教程，因为疫情影响，给认证公司的福利。可以免费领三节课。</p>
<p><img src="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E4%BA%91%E6%96%87%E4%BB%B6/111.png" alt=""></p>
<p>这是<a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E4%BA%91%E6%96%87%E4%BB%B6/geekbangpython-master.zip" target="_blank" rel="noopener">下载链接</a>，老规矩同样放阿里云oss里面了。源码：<a href="https://github.com/wilsonyin123/geekbangpython" target="_blank" rel="noopener">地址</a></p>
<p><img src="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E4%BA%91%E6%96%87%E4%BB%B6/wilsonyin123_geekbangpython.png" alt=""></p>
<h3 id="2，Github"><a href="#2，Github" class="headerlink" title="2，Github"></a>2，Github</h3><p>点赞数很高的python项目，这是<a href="https://github.com/jackfrued/Python-100-Days" target="_blank" rel="noopener">源码地址</a>，<a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E4%BA%91%E6%96%87%E4%BB%B6/Python-100-Days-master.zip" target="_blank" rel="noopener">下载地址</a>。</p>
<p><img src="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E4%BA%91%E6%96%87%E4%BB%B6/python-100-days-to-master.jpg" alt=""></p>
<h3 id="3，bilibili课程推荐。"><a href="#3，bilibili课程推荐。" class="headerlink" title="3，bilibili课程推荐。"></a>3，bilibili课程推荐。</h3><ul>
<li>【中英字幕】Python for everybody-五星推荐！<br><a href="https://www.bilibili.com/video/BV16b411n7U4" target="_blank" rel="noopener">https://www.bilibili.com/video/BV16b411n7U4</a></li>
<li>python教程2019版 6小时完全入门 能开发网站<br><a href="https://www.bilibili.com/video/BV14J411U7hj" target="_blank" rel="noopener">https://www.bilibili.com/video/BV14J411U7hj</a></li>
<li>Python 数据分析与展示(北京理工大学 )-bilibili<br><a href="https://www.bilibili.com/video/BV1Sx411U7R9" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1Sx411U7R9</a></li>
</ul>
<h3 id="4、博客性质"><a href="#4、博客性质" class="headerlink" title="4、博客性质"></a>4、博客性质</h3><ul>
<li><p><strong>Python快速教程 - Vamei - 博客园</strong><br><a href="https://www.cnblogs.com/vamei/archive/2012/09/13/2682778.html" target="_blank" rel="noopener">https://www.cnblogs.com/vamei/archive/2012/09/13/2682778.html</a></p>
</li>
<li><p>Python教程 - <strong>廖雪峰的官方网站</strong><br><a href="https://www.liaoxuefeng.com/wiki/1016959663602400" target="_blank" rel="noopener">https://www.liaoxuefeng.com/wiki/1016959663602400</a></p>
</li>
<li><p><strong>官网</strong>：不会的都可以找到答案 Welcome to Python.org<br><a href="https://www.python.org/" target="_blank" rel="noopener">https://www.python.org/</a> </p>
</li>
<li><p><strong>Python 社区官方出品的教程</strong>，适合新手入门，权威性有保障。<br>链接：<a href="https://docs.python.org/3/tutorial/index.html" target="_blank" rel="noopener">docs.python.org/3/tutorial/…</a><br>中文翻译：<a href="http://docspy3zh.readthedocs.io/en/latest/tutorial/index.html" target="_blank" rel="noopener">docspy3zh.readthedocs.io/en/latest/t…</a></p>
</li>
<li><p><strong>Dive Into Python3</strong><br>相对进阶一些的教程。<br>链接：<a href="http://www.diveintopython3.net/" target="_blank" rel="noopener">www.diveintopython3.net/</a><br>中文翻译：<a href="https://dipyzh.bitbucket.io/" target="_blank" rel="noopener">dipyzh.bitbucket.io/</a></p>
</li>
<li><p><strong>《Python Cookbook 第三版》</strong><br>字典书，适合遇到问题时现场查阅，或者直接放在厕所里。<br>中文版豆瓣链接：<a href="https://book.douban.com/subject/26381341/" target="_blank" rel="noopener">book.douban.com/subject/263…</a></p>
</li>
<li><p><strong>PyCoder’s Weekly</strong><br>每周分享 Python 相关的文章、项目、新闻，可以了解 Python 社区最新动态。<br>链接：<a href="http://pycoders.com/" target="_blank" rel="noopener">pycoders.com/</a><br>中文翻译：<a href="http://pycoders-weekly-chinese.readthedocs.io/en/latest/" target="_blank" rel="noopener">pycoders-weekly-chinese.readthedocs.io/en/latest/</a></p>
</li>
<li><p><strong>Django Book</strong><br>关于 Django 框架的详细教程，除了 Python 之外还能学到和 Web 开发相关的很多技能。<br>链接：<a href="http://djangobook.com/" target="_blank" rel="noopener">djangobook.com/</a><br>中文翻译：<a href="http://djangobook.py3k.cn/2.0/" target="_blank" rel="noopener">djangobook.py3k.cn/2.0/</a></p>
</li>
</ul>
<h2 id="常用库推荐"><a href="#常用库推荐" class="headerlink" title="常用库推荐"></a>常用库推荐</h2><p><strong>Flask</strong><br>除了上面提到的 Django 之外，Flask 也是一个很好的选项。</p>
<p>设计思路与 Django 完全相反，轻量级，不与数据库强耦合。</p>
<p>官网：<a href="http://flask.pocoo.org/" target="_blank" rel="noopener">flask.pocoo.org/</a><br>中文翻译：<a href="http://www.pythondoc.com/flask/index.html" target="_blank" rel="noopener">www.pythondoc.com/flask/index…</a></p>
<p><strong>Requests</strong><br>如果你要编写简单的爬虫，来爬去互联网上的信息，或者调用一些外部的机遇 HTTP 的接口，</p>
<p>使用这个库再也合适不过了。<br>官网：<a href="http://cn.python-requests.org/zh_CN/latest/" target="_blank" rel="noopener">cn.python-requests.org/zh_CN/lates…</a></p>
<h2 id="编码规范"><a href="#编码规范" class="headerlink" title="编码规范"></a>编码规范</h2><p>关于 Python 代码的编码规范，请遵守PEP8：</p>
<p>链接：<a href="https://www.python.org/dev/peps/pep-0008/" target="_blank" rel="noopener">www.python.org/dev/peps/pe…</a><br>中文翻译：<a href="https://my.oschina.net/u/1433482/blog/464444" target="_blank" rel="noopener">my.oschina.net/u/1433482/b…</a></p>
<h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><p>awesome-python<br>链接：<a href="https://awesome-python.com/" target="_blank" rel="noopener">awesome-python.com/</a>    </p>
<br>

<p><strong><font size=5>关于python安装以及python编辑器的选择，之前的博客都有涉及.  </font></strong></p>
<blockquote>
<p>纸上谈来终觉浅，绝知此事要躬行。</p>
</blockquote>
<p><strong><font size=5>一定要动手敲代码</font></strong></p>
<ul>
<li>可以锻炼你动手的能力，以及操作编辑器的能力</li>
<li>不敲代码，你永远不知道会出现什么bug</li>
<li>遇到不懂的地方，善用搜索引擎</li>
<li>多犯错，多成长。</li>
</ul>
<p><img src="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E4%BA%91%E6%96%87%E4%BB%B6/pythonfuli/python.png" alt=""></p>
</font>]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>python文本编辑器+ VS Code配置python环境</title>
    <url>/2020/05/02/wenbenbianjiqi/</url>
    <content><![CDATA[<p><font size=4>python有很多编辑器，我在用的是VS code。<a id="more"></a></p>
<ul>
<li>Python的10大集成开发环境和代码编辑器（指南） - 后端 - 掘金<br><a href="https://juejin.im/entry/5add45df518825673277d344" target="_blank" rel="noopener">https://juejin.im/entry/5add45df518825673277d344</a></li>
<li>好用的Python编辑器有哪些？推荐这12款 - 知乎<br><a href="https://zhuanlan.zhihu.com/p/84314729" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/84314729</a></li>
<li>什么样的 Python 编辑器比较适合新手？ - 知乎<br><a href="https://www.zhihu.com/question/19745701" target="_blank" rel="noopener">https://www.zhihu.com/question/19745701</a></li>
</ul>
<p>适合自己的才是最好的，IDE适合开发大型项目，个人认为用不到。</p>
<p>VS code还是开源免费的，海量插件，支持各种语言，个人感觉挺好的。</p>
<h1 id="VS-Code-配置-Python-开发环境"><a href="#VS-Code-配置-Python-开发环境" class="headerlink" title="VS Code 配置 Python 开发环境"></a>VS Code 配置 Python 开发环境</h1><blockquote>
<p>本文基于 VS Code 1.36.1</p>
</blockquote>
<p>VS Code 里是不包括 Python 的，所以你首先得安装一个 Python。</p>
<h3 id="1、终端运行-Python"><a href="#1、终端运行-Python" class="headerlink" title="1、终端运行 Python"></a>1、终端运行 Python</h3><p>安装完 python 之后，我们可以用任何一个文本编辑工具开始写 python 代码，然后在 cmd 中运行代码。</p>
<p>在 VS Code 中，在不安装任何插件的情况下，也可以运行 python 代码。</p>
<p>新建一个 test.py 文件，输入 <code>print(&#39;Hello World!&#39;)</code>。</p>
<p>点击 查看 -&gt; 终端（快捷键 Ctrl + <code>）打开终端，输入</code>python test.py` 即可运行，跟在 cmd 中运行 python 代码是一样的。</p>
<p><img src="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E4%BA%91%E6%96%87%E4%BB%B6/python_vs%20code/1.jpg" alt="VS Code 配置 Python 环境（1）.png"></p>
<h3 id="2、安装-Python-插件"><a href="#2、安装-Python-插件" class="headerlink" title="2、安装 Python 插件"></a>2、安装 Python 插件</h3><p>在不安装插件的情况下，点击 调试 -&gt; 启动调试（快捷键 F5）是没办法运行代码的。会让你选择环境，而你根本就没有环境可选。</p>
<p>在 VS Code 的应用商店（快捷键：Ctrl + Shift + X）里搜索 Python 插件，并安装。如下图：</p>
<p><img src="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E4%BA%91%E6%96%87%E4%BB%B6/python_vs%20code/2.jpg" alt="VS Code 配置 Python 环境（2）.png"></p>
<p>按 Ctrl + Shift + P（或F1），在打开的输入框中输入 <code>Python: Select Interpreter</code> 搜索，选择 Python 解析器。</p>
<p><img src="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E4%BA%91%E6%96%87%E4%BB%B6/python_vs%20code/3.jpg" alt="VS Code 配置 Python 环境（3）.png"></p>
<p><img src="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E4%BA%91%E6%96%87%E4%BB%B6/python_vs%20code/4.png" alt="VS Code 配置 Python 环境（4）.png"></p>
<p>选择好解析器之后，我们就可以直接在 VS Code 里运行（快捷键 Ctrl + F5）或调试（快捷键 F5）Python 代码了。</p>
<h3 id="3、查看、安装外部库"><a href="#3、查看、安装外部库" class="headerlink" title="3、查看、安装外部库"></a>3、查看、安装外部库</h3><p>Python 最强大的就是外部库了，在 PyCharm 中，可以在 Settings 中查看、搜索、安装。那么在 VS Code 中如何安装呢？</p>
<p>上文中提到，可以在终端直接运行 .py 文件，其实，终端就相当于命令提示符（cmd），所以直接在终端输入相应命令就可以了。</p>
<p><strong>查看已安装包列表：</strong></p>
<pre><code>pip list
复制代码</code></pre><p><strong>安装外部库：</strong></p>
<pre><code>pip install xxx
复制代码</code></pre><blockquote>
<p>注意：当本机安装了多个 Python 解析器的时候，pip 可能并不会安装到当前解析器目录下。这个我测试多次后发现，应该是跟环境变量中的顺序有关，会安装到环境变量中最靠前的解析器的目录下。</p>
</blockquote>
<h3 id="4、代码补全工具"><a href="#4、代码补全工具" class="headerlink" title="4、代码补全工具"></a>4、代码补全工具</h3><p>VS Code 中的代码补全插件是 Visual Studio IntelliCode。同样通过应用商店安装。</p>
<p>Visual Studio IntelliCode 是一套 AI 辅助功能，可通过上下文智能感知，代码样式的推理和执行等功能提高开发人员的工作效率。</p>
<p>IntelliCode 通过使用经过数千个公共代码库培训的机器学习模型生成建议，而且会随着你编写代码的增长，从而变得更加准确。它会根据上下文给出编程建议，而不是简单根据字母排序推荐 API。</p>
<p>最重要的 IntelliCode 已经支持 Python。安装以后，可以有智能提示了。</p>
<p><img src="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E4%BA%91%E6%96%87%E4%BB%B6/python_vs%20code/5.png" alt="VS Code 配置 Python 环境（5）.png"></p>
<h3 id="5、代码检查工具"><a href="#5、代码检查工具" class="headerlink" title="5、代码检查工具"></a>5、代码检查工具</h3><p>PyCharm 自带代码检查工具，而 VS Code 中是没有的。</p>
<h4 id="5-1、pylint"><a href="#5-1、pylint" class="headerlink" title="5.1、pylint"></a>5.1、pylint</h4><p>当你新建 .py 文件，开始写代码的时候，右下角可能会跳出个这个（老版本会，新版本不会了）：</p>
<p><img src="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E4%BA%91%E6%96%87%E4%BB%B6/python_vs%20code/6.png" alt="VS Code 配置 Python 环境（6）.png"></p>
<p>Pylint 是一个 Python 代码检查工具。需要通过 pip 安装。</p>
<p>打开设置，添加如下设置：</p>
<pre><code>&quot;python.linting.enabled&quot;: true,
&quot;python.linting.pylintEnabled&quot;: true,
复制代码</code></pre><p>然后对于不符合规范的代码，就会有波浪线提示了。</p>
<blockquote>
<p>在 VS Code 1.36.1 版本，貌似不设计 <code>python.linting.enabled&quot;: true</code> 也可以。</p>
</blockquote>
<h4 id="5-2、flake8-和-yapf"><a href="#5-2、flake8-和-yapf" class="headerlink" title="5.2、flake8 和 yapf"></a>5.2、flake8 和 yapf</h4><p>flake8 是由 Python 官方发布的一款辅助检测 Python 代码是否规范的工具，相对于目前热度比较高的 Pylint 来说，Flake8 检查规则灵活，支持集成额外插件，扩展性强。Flake8 是对下面三个工具的封装：</p>
<ul>
<li>PyFlakes：静态检查 Python 代码逻辑错误的工具。</li>
<li>Pep8：静态检查 PEP8 编码风格的工具。</li>
<li>NedBatchelder’s McCabe：静态分析 Python 代码复杂度的工具。</li>
</ul>
<p>官方文档地址：<a href="https://pypi.python.org/pypi/flake8/" target="_blank" rel="noopener">pypi.python.org/pypi/flake8…</a></p>
<p>yapf 是一个代码格式化的工具。</p>
<p>通过 pip 安装好 Flake8 和 Yapf 后，进行如下配置。</p>
<pre><code>&quot;python.linting.enabled&quot;: true,
&quot;python.linting.pylintEnabled&quot;: false,
&quot;python.linting.flake8Enabled&quot;: true,
&quot;python.formatting.provider&quot;: &quot;yapf&quot;,
复制代码</code></pre><blockquote>
<p>如果装了 pylint 的话，要设置其 <code>Enabled = false</code>，否则不用。</p>
</blockquote>
<p>安装好之后，我们在代码文件中（.py）中右键，选择格式化文档，就可以自动的进行代码格式化了。</p>
<p><img src="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E4%BA%91%E6%96%87%E4%BB%B6/python_vs%20code/7.png" alt="VS Code 配置 Python 环境（7）.png"></p>
<p>代码检查工具虽好，但有些严格的检查并不符合我们的习惯，例如 flake8 默认一行的最大字符数是 79 个，超过就会显示波浪线提示你代码太长了。</p>
<p><img src="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E4%BA%91%E6%96%87%E4%BB%B6/python_vs%20code/8.png" alt="VS Code 配置 Python 环境（8）.png"></p>
<p>79 个字符实在是太短了，我们可以把它改长一点，增加如下配置，把最大长度设为 128 个字符。</p>
<pre><code>&quot;python.linting.flake8Args&quot;: [&quot;--max-line-length=128&quot;],</code></pre></font>]]></content>
      <categories>
        <category>分享</category>
      </categories>
      <tags>
        <tag>python vscode</tag>
      </tags>
  </entry>
  <entry>
    <title>python制作词云</title>
    <url>/2020/05/02/wordcloud/</url>
    <content><![CDATA[<h1 id="安装python"><a href="#安装python" class="headerlink" title="安装python"></a><font size=4>安装python</h1><p>首先你需要安装python，或者是anaconda。<a id="more"></a></p>
<p>anaconda有很多镜像，在国内下载速度较快，比如</p>
<pre><code>清华：https://pypi.tuna.tsinghua.edu.cn/simple
阿里云：http://mirrors.aliyun.com/pypi/simple/
中国科技大学 https://pypi.mirrors.ustc.edu.cn/simple/
豆瓣：http://pypi.douban.com/simple/</code></pre><p>关于anaconda、conda、python的区别，</p>
<ol>
<li><p>conda是一种通用包管理系统，旨在构建和管理任何语言和任何类型的软件。举个例子：包管理与pip的使用类似，环境管理则允许用户方便地安装不同版本的python并可以快速切换。</p>
</li>
<li><p>Anaconda则是一个打包的集合，里面预装好了conda、某个版本的python、众多packages、科学计算工具等等，就是把很多常用的不常用的库都给你装好了。</p>
</li>
<li><p>Miniconda，顾名思义，它只包含最基本的内容——python与conda，以及相关的必须依赖项，对于空间要求严格的用户，Miniconda是一种选择。就只包含最基本的东西，其他的库得自己装。</p>
</li>
</ol>
<p>对conda的基本掌握：</p>
<p>1：基本操作：<br>升级全部库：  conda upgrade –all</p>
<ul>
<li>升级一个包  conda update packagename</li>
<li>安装包：conda install packagename</li>
<li>也可以安装多个包：   conda installl numpy pandas scipy</li>
<li>安装固定版本的包：conda install numpy =1.10</li>
<li>移除一个包：conda remove packagename </li>
<li>查看所有包：conda list </li>
</ul>
<p>2：管理python环境：</p>
<ul>
<li>创建虚拟环境：conda create -n env_name list of packagenaem</li>
<li>eg:  conda create -n env_name pandas </li>
<li>指定python版本：conda create -n env_name python2 = 2.7 pandas </li>
<li>激活环境： activate env_name</li>
<li>退出环境 :  deactivate  env_name</li>
<li>删除虚拟环境：conda env remove -n env_name</li>
<li>显示所有虚拟环境：conda env list  </li>
</ul>
<p>安装anaconda的教程很多，比如这个 <a href="https://blog.csdn.net/u012318074/article/details/77075209" target="_blank" rel="noopener">https://blog.csdn.net/u012318074/article/details/77075209</a></p>
<h2 id="安装Python第三方模块"><a href="#安装Python第三方模块" class="headerlink" title="安装Python第三方模块"></a>安装Python第三方模块</h2><p>打开命令行，输入下面这行命令，回车执行即可。</p>
<pre><code>pip install numpy matplotlib pillow wordcloud imageio jieba snownlp itchat -i https://pypi.tuna.tsinghua.edu.cn/simple</code></pre><p>如果安装过程中报错，<br>如果报错：Microsoft Visual C++ 14.0 is required.</p>
<p>解决方法：</p>
<blockquote>
<p>到 <a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#wordcloud" target="_blank" rel="noopener">http://www.lfd.uci.edu/~gohlke/pythonlibs/#wordcloud</a> 页面</p>
<p>下载所需的wordcloud模块的.whl文件，再用pip安装下载的文件。</p>
<p>比如，对于64位windows操作系统，python版本为3.6的电脑，就应该下载</p>
<p>wordcloud-1.4.1-cp36-cp36m-win_amd64.whl这个文件</p>
<p>下载后打开命令行，使用cd命令切换到该文件的路径，</p>
<p>执行pip install wordcloud-1.4.1-cp36-cp36m-win_amd64.whl命令，即可安装成功。</p>
</blockquote>
<h1 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h1><h2 id="基础版"><a href="#基础版" class="headerlink" title="基础版"></a>基础版</h2><p>python程序的运行，可以使用命令行，可以使用IDE，也可以使用某些文本编辑器。</p>
<p>在这里以windows命令行为例。在桌面新建<code>test.py</code>(python文件后缀名为py)</p>
<p>打开，编辑<code>test.py</code>，输入下列命令。</p>
<pre class=" language-python"><code class="language-python">
<span class="token keyword">import</span> wordcloud <span class="token comment" spellcheck="true">#导入词云</span>

<span class="token comment" spellcheck="true"># 构建词云对象w，设置词云图片宽、高、字体、背景颜色等参数</span>
w <span class="token operator">=</span> wordcloud<span class="token punctuation">.</span>WordCloud<span class="token punctuation">(</span>width<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">,</span>height<span class="token operator">=</span><span class="token number">700</span><span class="token punctuation">,</span>background_color<span class="token operator">=</span><span class="token string">'white'</span><span class="token punctuation">,</span>font_path<span class="token operator">=</span><span class="token string">'msyh.ttc'</span><span class="token punctuation">)</span>

<span class="token comment" spellcheck="true"># 调用词云对象的generate方法，将文本传入</span>
w<span class="token punctuation">.</span>generate<span class="token punctuation">(</span><span class="token string">'本报北京5月1日电 （记者王珂）记者从文化和旅游部获悉：“五一”假期首日全国旅游市场总体运行平稳，全国A级旅游景区开放8498家，约占总数的70%；全国接待国内游客总人数2319.7万人次，实现国内旅游收入约97.7亿元。各地景区严格落实游客流量不超过最大承载量30%的要求，未发现大规模人员聚集情况，基本做到限量、错峰、安全、有序开放'</span><span class="token punctuation">)</span>

<span class="token comment" spellcheck="true"># 将生成的词云保存为output2.png图片文件，保存到当前文件夹中</span>
w<span class="token punctuation">.</span>to_file<span class="token punctuation">(</span><span class="token string">'output2.png'</span><span class="token punctuation">)</span></code></pre>
<p>在命令行中，当前文件夹下，执行<code>python test.py</code>，即可生成一个简单的词云。</p>
<img src="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E4%BA%91%E6%96%87%E4%BB%B6/output2.png" style="zoom:50%;" />

<h2 id="进阶版（生成特定图形的词云）"><a href="#进阶版（生成特定图形的词云）" class="headerlink" title="进阶版（生成特定图形的词云）"></a>进阶版（生成特定图形的词云）</h2><p>在当前目录上，有一个<a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E4%BA%91%E6%96%87%E4%BB%B6/test.png" target="_blank" rel="noopener">图形</a>，和一个<a href="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E4%BA%91%E6%96%87%E4%BB%B6/test.txt" target="_blank" rel="noopener">文本</a>。</p>
<pre class=" language-python"><code class="language-python">
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
<span class="token keyword">import</span> wordcloud
<span class="token keyword">import</span> jieba
<span class="token keyword">from</span> wordcloud <span class="token keyword">import</span> WordCloud<span class="token punctuation">,</span>ImageColorGenerator


<span class="token comment" spellcheck="true"># 导入imageio库中的imread函数，并用这个函数读取本地图片，作为词云形状图片</span>
<span class="token keyword">import</span> imageio
mk <span class="token operator">=</span> imageio<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">"test.png"</span><span class="token punctuation">)</span>


<span class="token comment" spellcheck="true">#对外部文件文本进行中文分词 得到string</span>
<span class="token comment" spellcheck="true"># string = open('hamlet.txt').read() 这样写一样的</span>
f <span class="token operator">=</span> open<span class="token punctuation">(</span><span class="token string">'test.txt'</span><span class="token punctuation">,</span> encoding <span class="token operator">=</span> <span class="token string">'utf-8'</span><span class="token punctuation">)</span>
txt <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
txtlist <span class="token operator">=</span> jieba<span class="token punctuation">.</span>lcut<span class="token punctuation">(</span>txt<span class="token punctuation">)</span>
string <span class="token operator">=</span> <span class="token string">" "</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>txtlist<span class="token punctuation">)</span>


<span class="token comment" spellcheck="true"># 构建词云对象w，设置词云图片宽、高、字体、背景颜色等参数 contour 图形轮廓线</span>
w <span class="token operator">=</span> wordcloud<span class="token punctuation">.</span>WordCloud<span class="token punctuation">(</span>width<span class="token operator">=</span><span class="token number">500</span><span class="token punctuation">,</span>height<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">,</span>
background_color<span class="token operator">=</span><span class="token string">'white'</span><span class="token punctuation">,</span>font_path<span class="token operator">=</span><span class="token string">'msyh.ttc'</span><span class="token punctuation">,</span>scale<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">,</span>
mask<span class="token operator">=</span>mk<span class="token punctuation">,</span>stopwords<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">'这个'</span><span class="token punctuation">,</span><span class="token string">'大家'</span><span class="token punctuation">,</span><span class="token string">'手机'</span><span class="token punctuation">,</span><span class="token string">'原图'</span><span class="token punctuation">,</span><span class="token string">'微博'</span><span class="token punctuation">,</span><span class="token string">'视频'</span><span class="token punctuation">,</span><span class="token string">'组图'</span><span class="token punctuation">,</span><span class="token string">'一个'</span><span class="token punctuation">,</span><span class="token string">'今天'</span><span class="token punctuation">,</span><span class="token string">'可以'</span><span class="token punctuation">,</span><span class="token string">'钟文泽'</span><span class="token punctuation">,</span><span class="token string">'还是'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>contour_width<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>contour_color<span class="token operator">=</span><span class="token string">'steelblue'</span><span class="token punctuation">)</span>


<span class="token comment" spellcheck="true"># 调用词云对象的generate方法，将文本传入</span>
w<span class="token punctuation">.</span>generate<span class="token punctuation">(</span>string<span class="token punctuation">)</span>

<span class="token comment" spellcheck="true"># 调用wordcloud库中的ImageColorGenerator()函数，提取模板图片各部分的颜色</span>
image_colors <span class="token operator">=</span> ImageColorGenerator<span class="token punctuation">(</span>mk<span class="token punctuation">)</span>


plt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'figure.figsize'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">8.0</span><span class="token punctuation">,</span> <span class="token number">4.0</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 设置figure_size尺寸</span>
plt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'image.interpolation'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'nearest'</span> <span class="token comment" spellcheck="true"># 设置 interpolation style</span>
plt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'image.cmap'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'gray'</span> <span class="token comment" spellcheck="true"># 设置 颜色 style</span>
plt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'savefig.dpi'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">300</span> <span class="token comment" spellcheck="true">#图片像素</span>
plt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'figure.dpi'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">300</span> <span class="token comment" spellcheck="true">#分辨率</span>

<span class="token comment" spellcheck="true"># 默认的像素：[6.0,4.0]，分辨率为100，图片尺寸为 600&amp;400</span>
<span class="token comment" spellcheck="true"># 指定dpi=200，图片尺寸为 1200*800</span>
<span class="token comment" spellcheck="true"># 指定dpi=300，图片尺寸为 1800*1200</span>
<span class="token comment" spellcheck="true"># 设置figsize可以在不改变分辨率情况下改变比例</span>

<span class="token comment" spellcheck="true">#plt.imshow(w)</span>
<span class="token comment" spellcheck="true">#plt.axis("off")</span>
<span class="token comment" spellcheck="true">#plt.show()</span>
<span class="token comment" spellcheck="true">#生成图片，不保存，后自行设置参数。</span>

<span class="token comment" spellcheck="true"># 将生成的词云保存为output2-poem.png图片文件，保存到当前文件夹中</span>
w<span class="token punctuation">.</span>to_file<span class="token punctuation">(</span><span class="token string">'output.png'</span><span class="token punctuation">)</span>
</code></pre>
<p>同样的操作，输入上面的代码，同样执行<code>python test.py</code>。</p>
<img src="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E4%BA%91%E6%96%87%E4%BB%B6/Figure_1.png" style="zoom:500%;" />

<p>更多，更好玩的教程请在搜索引擎上自行搜索。</p>
</font>]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>词云 python</tag>
      </tags>
  </entry>
  <entry>
    <title>今天聊聊邮箱（自定义域名邮箱教程）</title>
    <url>/2020/05/02/mail/</url>
    <content><![CDATA[<p> <font size=4>国内的邮箱众多，以网易为代表的126、163、yeah等，以QQ系为代表的国民邮箱和微信衍生的foxmail，国外有gmail、outlook、Yahoo等。 <a id="more"></a>使用人数最多的是gmail，Gmail同时也是最好用的邮箱，安全性也有保证，但是由于某些原因，Gmail在国内“不能”使用，但是QQ邮箱和网易邮箱App均支持gmail登录。</p>
<h1 id="自己对于邮箱的看法"><a href="#自己对于邮箱的看法" class="headerlink" title="自己对于邮箱的看法"></a>自己对于邮箱的看法</h1><p>国内的邮箱众多，以网易为代表的126、163、yeah等，以QQ系为代表的国民邮箱和微信衍生的foxmail，国外有gmail、outlook、Yahoo等。 使用人数最多的是gmail，Gmail同时也是最好用的邮箱，安全性也有保证，但是由于某些原因，Gmail在国内“不能”使用，但是QQ邮箱和网易邮箱App均支持gmail登录。</p>
<p> 个人在用的是QQ邮箱和阿里云邮箱，QQ邮箱用来注册，收取垃圾邮件等等。阿里云邮箱用来工作，阿里云邮箱在官网申请即可，非常方便，有网页版、客户端、App。我对于邮箱的要求很简单，能正常在电脑端和手机端打开，可以自定义发件人昵称（貌似这个都满足），简洁有辨识度。 很重要的一个标准就是，不要被对方当成垃圾邮件。之前使用foxmail，老是被老师的edu邮箱当初垃圾邮件，导致自己的邮件老师无法接收。还有就是一定可以正常使用，之前使用foxmail，绑定ORCID，foxmail接不到邮件。所以现在自己彻底放弃foxmail了。</p>
<p>下面说说我为什么放弃其他邮箱。 首先，不使用网易邮箱，是因为太大众化了，我非常不喜欢数字邮箱，手机号邮箱对我来说没有需求。再者，网易邮箱网页版广告多，直接毙。 按理说，Gmail应该最理想的邮箱，网页端手机端可以正常打开，但是在国内使用gmail总有种怪怪的感觉。不使用Outlook的原因是因为微软服务器在国外，每次打开outlook慢的啊，虽然在手机端可以正常使用。但是我云盘使用的是onedrive，所以我也用outlook。</p>
<h1 id="Protonmail邮箱"><a href="#Protonmail邮箱" class="headerlink" title="Protonmail邮箱"></a>Protonmail邮箱</h1><p> 前几天Apple自带邮件应用曝出漏洞，人们开始关注安全问题，就邮箱安全而言，我推荐Protonmail，虽然名字较长，但是人家安全啊！  </p>
<img src="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E4%BA%91%E6%96%87%E4%BB%B6/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20200502100835.jpg" style="zoom:30%;" />

<p>加密邮件服务商 ProtonMail 宣布开源 Android 版应用，源代码托管在 GitHub 上，采用 GNU GPLv3 许可证。ProtonMail 称，选择开源是因为安全是它最优先考虑的事情，有很多活动人士和异议人士使用它的服务，而要确保安全，它必须让所有软件通过独立严格的第三方检查。 ProtonMail（质子邮箱）是一个加密的 Webmail 服务，2013 年斯诺登事件持续发酵，为应对美国国家安全局的全球监测和拦截电子邮件，欧洲核子研究组成员 Jason Stockman、Andy Yen 和 Wei Sun 创建了该服务。 在谷歌停止了对海外华为手机的 Google 套件支持之后，华为一度计划选择将 ProtonmMail 作为其手机的默认邮件应用。 对于诸多使用海外服务的国内用户，除了 Gmail 之外，也建议选择 ProtonMail 的服务。 </p>
<img src="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E4%BA%91%E6%96%87%E4%BB%B6/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_202005021008351.jpg" style="zoom:53%;" />

<p>ProtonMail 账户有 protonmail.ch、protonmail.com、pm.me 三个后缀，用户可在设置中自行选择默认后缀。ProtonMail 帐户使用登录密码和邮箱密码两个用户密码。第一认证该用户进入 ProtonMail 系统，而第二解密该用户的电子邮箱。第二密码是已知的仅给用户。ProtonMail 的服务器抱以加密的形式和密码恢复用户的数据是不可能的。钉钉、Snapchat 和 Telegram 也具有类似的服务。ProtonMail 还包括一个消息过期功能，允许加密的电子邮件经过一段时间后自行销毁。 ProtonMail 的数据中心的服务器架构由其专职管理员维护，以避免信任第三方而使用自己的服务器硬件和网络。</p>
<img src="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E4%BA%91%E6%96%87%E4%BB%B6/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_202005021008352.jpg" style="zoom:70%;" />

<p> ◎ ProtonMail 数据中心架构 数据中心位于 1000 米厚的花岗岩岩石内，一个严密守卫的地堡，可以承受核攻击，这提供了额外的保护层确保您的加密电子邮件不容易被任何第三方访问。 它可能是目前最安全的邮件服务了，比 Gmail 还安全，理论上是这样的.</p>
<p>转载来自于:<a href="https://mp.weixin.qq.com/s/EQVc2X0O8CuU4bLAnrWtFA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/EQVc2X0O8CuU4bLAnrWtFA</a></p>
<h1 id="自定义域名邮箱教程"><a href="#自定义域名邮箱教程" class="headerlink" title="自定义域名邮箱教程"></a>自定义域名邮箱教程</h1><p>如果自己买个域名，有自己的专属邮箱，是不是很厉害👍。</p>
<h2 id="买域名"><a href="#买域名" class="headerlink" title="买域名"></a>买域名</h2><p>首先注册一个阿里云账户，登录，域名购买地址：国际域名-万网-阿里云旗下品牌<br><a href="https://wanwang.aliyun.com/。" target="_blank" rel="noopener">https://wanwang.aliyun.com/。</a> 可以买个.top域名，第一年9块，续费也不是很贵，其余的看自己喜好。<img src="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E4%BA%91%E6%96%87%E4%BB%B6/10-27-00.jpg" style="zoom:50%;" /></p>
<p>第一次购买，可能会让你新建信息模板，这没什么说的，自己建立填信息就好了，审核好快的。</p>
<p><img src="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E4%BA%91%E6%96%87%E4%BB%B6/%E5%AE%9E%E5%90%8D%E8%AE%A4%E8%AF%81.jpg" alt=""></p>
<h2 id="注册阿里云企业邮箱"><a href="#注册阿里云企业邮箱" class="headerlink" title="注册阿里云企业邮箱"></a>注册阿里云企业邮箱</h2><p>免费云邮箱_公司邮箱购买价格 - 万网 - 阿里云<br><a href="https://wanwang.aliyun.com/mail/freemail/" target="_blank" rel="noopener">https://wanwang.aliyun.com/mail/freemail/</a></p>
<p>点击立即开通</p>
<p><img src="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E4%BA%91%E6%96%87%E4%BB%B6/%E4%BC%81%E4%B8%9A%E9%82%AE%E7%AE%B1%E5%B0%81%E9%9D%A2.jpg" alt="">       输入你刚刚买的域名，这个时候你应该还需要实名认证，提交材料就好了（支持支付宝认证）</p>
<p><img src="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E4%BA%91%E6%96%87%E4%BB%B6/5%E5%B9%B4%E5%85%8D%E8%B4%B9%E9%82%AE%E7%AE%B1.jpg" alt=""></p>
<p>立即购买，然后进入管理控制台。</p>
<p><img src="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E4%BA%91%E6%96%87%E4%BB%B6/%E7%AE%A1%E7%90%86%E6%8E%A7%E5%88%B6%E5%8F%B0.jpg" alt=""></p>
<p>设置mx解析，就可以了。</p>
<p><img src="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E4%BA%91%E6%96%87%E4%BB%B6/mx%E8%AE%BE%E7%BD%AE.jpg" alt=""></p>
<p>完成解析后，应该是这个样子。</p>
<p><img src="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E4%BA%91%E6%96%87%E4%BB%B6/%E8%A7%A3%E6%9E%90%E8%BF%87%E7%A8%8B.jpg" alt=""></p>
<p><img src="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E4%BA%91%E6%96%87%E4%BB%B6/%E5%AE%8C%E6%88%90%E8%A7%A3%E6%9E%902.jpg" alt=""></p>
<p>管理员账户很好记，就是postmaster@域名，可以重置一下密码，重置下安全问题等。</p>
<p>也可以在<code>分配账号</code>选项卡，设置账户，50个呢，可劲造。</p>
<p><a href="qiye.aliyun.com">qiye.aliyun.com</a>这个是企业邮箱的登录地址，类似于QQ邮箱的<a href="mail.qq.com">mail.qq.com</a></p>
<p><img src="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E4%BA%91%E6%96%87%E4%BB%B6/%E6%96%B0%E5%BB%BA%E8%B4%A6%E6%88%B7.jpg" alt=""></p>
<p>可以在这里自定义账户，很简单的。（科技创新部，是我之前起的名字，随便起的哈哈哈哈哈）</p>
<p>==阿里云企业邮箱==很方便的，在qq邮箱app上直接登录就可以使用。</p>
<p><img src="http://wghuui.oss-cn-hangzhou.aliyuncs.com/%E4%BA%91%E6%96%87%E4%BB%B6/%E4%BC%81%E4%B8%9A%E9%82%AE%E7%AE%B1%E7%9A%84pop%E5%9C%B0%E5%9D%80.jpg" alt=""></p>
<p>如果是aliyun.com，使用第三方邮箱，或者iPhone邮箱，下面是==阿里云邮箱==协议。</p>
<pre><code>1）收件服务器:默认为imap，可自主选择imap或者pop3收信，对应服务器分别为

imap.aliyun.com \  pop3.aliyun.com

2）发件服务器：smtp.aliyun.com</code></pre> </font>]]></content>
      <categories>
        <category>分享</category>
      </categories>
      <tags>
        <tag>邮箱</tag>
      </tags>
  </entry>
  <entry>
    <title>临时邮箱</title>
    <url>/2020/04/29/linshiyouxiang/</url>
    <content><![CDATA[<p><font size =4>生活中由于各种需要,主要邮箱注册,但是出于安全的权衡,又不愿透露自己真实的邮箱.</p>
<p>在这种情况下,临时邮箱就显得尤为重要了.<a id="more"></a></p>
<blockquote>
<p>9em</p>
</blockquote>
<p><a href="https://9em.org/" target="_blank" rel="noopener">https://9em.org</a></p>
<p>在屏幕右上角输入一个你想要的邮箱前缀，就能收取邮件需要注意的是这个邮箱对所有人都是公开的，并且邮件仅在服务器保存十分钟，十分钟后会自动删除</p>
<blockquote>
<p>maildrop</p>
</blockquote>
<p><a href="https://maildrop.cc/" target="_blank" rel="noopener">https://maildrop.cc</a></p>
<p>打开 maildrop 会自动生成一个临时的邮箱，如果你不想更改地址，可以直接点右上角的 Go 进入收件箱页面，也可以在右上角修改邮箱前缀地址，在进入临时收件箱页面。</p>
<blockquote>
<p>bccto</p>
</blockquote>
<p><a href="http://bccto.me/" target="_blank" rel="noopener">http://bccto.me</a></p>
<p>10 分钟邮箱，可以自定义也可以随机申请的 10 分钟临时邮箱，支持自定义域名，可以将自己的域名绑定 bccto 服务。</p>
<blockquote>
<p>10minutemail</p>
</blockquote>
<p><a href="https://10minutemail.net/" target="_blank" rel="noopener">https://10minutemail.net</a></p>
<p>一个 10 分钟邮箱</p>
<blockquote>
<p>10minutemail</p>
</blockquote>
<p><a href="https://10minutemail.com/" target="_blank" rel="noopener">https://10minutemail.com</a></p>
<p>10 分钟邮箱，老牌网站 07 年稳定至今。 小部分网站网站封锁了 10minutemail 的域名，可能无法接收，可以当作备用。</p>
<blockquote>
<p>临时邮箱</p>
</blockquote>
<p><a href="https://linshiyou.com/" target="_blank" rel="noopener">https://linshiyou.com</a><br><a href="https://linshiyouxiang.net/" target="_blank" rel="noopener">https://linshiyouxiang.net</a><br><a href="https://t.odmail.cn/" target="_blank" rel="noopener">https://t.odmail.cn</a></p>
<p>UI 很简洁，可以自定义也可以随机生成。</p>
<blockquote>
<p>anyalias</p>
</blockquote>
<p><a href="https://anyalias.com/" target="_blank" rel="noopener">https://anyalias.com</a></p>
<p>anyalias 是一个可以保护隐私的邮箱服务，可以生成一个自定义的邮箱然后转发给你的真实邮箱，从而达到保护隐私的效果，更多介绍查看 [anyalias.com：无限制的免费电子邮件地址</p>
<blockquote>
<p>eskiimo</p>
</blockquote>
<p><a href="https://eskiimo.com/" target="_blank" rel="noopener">https://eskiimo.com</a></p>
<p>匿名发送邮件给任何人。</p>
<h1 id="谷歌邮箱小号生成方法"><a href="#谷歌邮箱小号生成方法" class="headerlink" title="谷歌邮箱小号生成方法"></a>谷歌邮箱小号生成方法</h1><p>如果你使用的是 Gmail 邮箱的话，这里有一个制造 Gmail 小号的办法。可以制造出许多地址不同，但指向同一个电子邮箱的办法。</p>
<p>用这个方法，就可以在不注册新的邮箱地址的情况下，制造很多个「小号」。一来在其他地方可以用不同邮箱地址注册多个帐号，二来方便管理透过不同地址发给自己的邮件。</p>
<p>Gmail 跟其他常见的邮箱地址最不同的地方，就是不支持底线 _ ，相反却支持点 . 和加号 +。而这个制造小号的方法，就是有效利用 . 和 + 。</p>
<p>我们以 <a href="mailto:abc123@gmail.com">abc123@gmail.com</a> 举例，后文中的 @ 使用符号 # 代替。</p>
<p>法则一：</p>
<p>@ 前面的部分，可以在任意位置加个 . </p>
<p>对于 Gmail 而言有没有这个点都是一样的。</p>
<p>例如 abc123 # gmail.com，可以改为以下任何一个：</p>
<ul>
<li><p>abc.123 # gmail.com </p>
</li>
<li><p>abc…123 # gmail.com </p>
</li>
<li><p>.abc1.2.3. # gmail.com </p>
</li>
<li><p>…abc…123… # gmail.com</p>
</li>
</ul>
<p>法则二：</p>
<p>用户名和 @ 之间，可以用 + 插入任何字串，而且可以加插任意多个 + </p>
<p>例如abc123 # gmail.com，可以改为以下任何一个：</p>
<ul>
<li>abc123+def456 # gmail.com </li>
<li>abc123+a+b+c+1+2+3 # gmail.com </li>
<li>abc123+Ax+By+C # gmail.com</li>
</ul>
<p>真正的粉丝，还可以用这个 ：</p>
<ul>
<li>abc123+1s # gmail.com</li>
<li>abc123+2s # gmail.com</li>
<li>abc123+3s # gmail.com</li>
<li>…</li>
</ul>
<p>用这个方法，可以让自己在不同网站的注册名称不同，例如</p>
<ul>
<li>abc123+Apple # gmail.com </li>
<li>abc123+Facebook # gmail.comabc</li>
<li>123+Twitter # gmail.com</li>
</ul>
<p>甚至可以作为临时邮箱地址，例如</p>
<ul>
<li>abc123+temp+1 # gmail.com </li>
<li>abc123+temp+2 # gmail.com</li>
</ul>
<p>这样子，只要开始收到垃圾邮件，看看收件人就可以知道是那个网站出卖了你的个人资料了。不过需要注意，不是所有服务也支持带有 + 的邮箱地址。</p>
<p>法则三：</p>
<p>上面两个法则可以任意搭配。例如，abc123 # gmail.com 可以改为以下任何一个：</p>
<ul>
<li>abc…123+Ma.ki+Ni.co # gmail.com </li>
<li>abc123.+.Nico.Nico.Ni. # gmail.com </li>
<li>abc.1.2.3+Yosoro.+.Zura # gmail.com</li>
</ul>
<p>这样，就可以创造多元化无限创意的小号了。</p>
 </font>]]></content>
      <categories>
        <category>分享</category>
      </categories>
      <tags>
        <tag>邮箱</tag>
      </tags>
  </entry>
  <entry>
    <title>今天聊聊图床</title>
    <url>/2020/04/29/picturebed/</url>
    <content><![CDATA[<p><font size=4>图片作为互联网服务中最基础的资源之一，随着互联网基础服务越来越专业化，图片的存储、处理、分发也发展成了一项独立的基础服务。<a id="more"></a><br>试想一下，如果每家互联网公司都要花费大量人力物力去做图片相关的技术研发，哪还有时间去做自己的业务。专业的事情还是要交给专业的人来做。</p>
<p>图床，也就是专门提供存储图片的地方，我们只要通过图床提供的 API 接口，把图片上传上去，就可以通过外链访问了，根本不用操心图片是怎么存的，硬盘空间不够了，硬盘坏了，访问速度比较慢等等问题，这些图床都会帮我们搞定，他们会用各种技术帮我们做图片相关的优化和服务，比如多机互备、CDN 加速、图片处理、图片鉴黄、文本识别等等。</p>
<p>当然，图床也是有缺点的，当所有人都把图片存在同一个图床上，万一有一天图床真挂了，那所有图片就都无法访问了，虽然这种情况的概率很低，但并不等于不会发生。我就经历过云服务商机房被雷劈，网站都挂掉的情况。支付宝光缆不也被挖断过吗？不过，对于我们个人用户来说，要求也没那么高，图床已经完全能满足我们的需求了。</p>
<hr>
<p>目前图床可以分为两种，一种是公共图床，一种是自建图床。公共图床也就是利用公共服务的图片上传接口，来提供图片外链的服务，比如新浪微博。自建图床，也就是利用各大云服务商提供的存储空间或者自己在 VPS 上使用开源软件来搭建图床，存储图片，生成外链提供访问，比如七牛、Lychee 开源自建图床方案。</p>
<h2 id="公共图床"><a href="#公共图床" class="headerlink" title="公共图床"></a>公共图床</h2><h3 id="微博图床"><a href="#微博图床" class="headerlink" title="微博图床"></a>微博图床</h3><p>由于微博本身就是面向公众提供服务，每个人发微博基本都得带上几张图片，以微博的体量，每天的新增图片数也不是个小数字。但是微博对于图片上传服务也没有接口说明文档，上传的接口还是在开发者们从微博产品里找出来的，可能微博只希望上传的图片仅仅用于微博产品本身吧。</p>
<p>微博图床的特点是免费，没有容量限制，全网 CDN 加速，支持 HTTPS，到哪里都很快。但是免费的服务也有不足的地方，上传的图片会被转成 jpg，图片中可能加上了肉眼难以识别的水印，另外微博的图片鉴别服务也可能会随时删除你的图片。</p>
<p>相关链接：</p>
<ul>
<li><a href="http://weibo.com/minipublish" target="_blank" rel="noopener">微博图床上传地址</a>：从这里直接上传图片比较麻烦，你可以使用下面介绍的一些图床工具，上传起来更方便。</li>
<li><a href="http://picupload.service.weibo.com/interface/" target="_blank" rel="noopener">微博图床 API</a>：用浏览器当然是不能访问的，只提供图片上传。</li>
</ul>
<h3 id="Imgur-图床"><a href="#Imgur-图床" class="headerlink" title="Imgur 图床"></a>Imgur 图床</h3><p><img src="https://cdn.sspai.com/2017/08/21/7d56369618ca55b7788a1f2b2469e274.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img">Imgur API</p>
<p><a href="https://imgur.com/" target="_blank" rel="noopener">Imgur</a> 是一家国外老牌的图片存储服务商，国外速度很快，口碑不错，支持 HTTPS。但是国内速度很不稳定，所以追求国内速度的同学慎用。</p>
<p>相关链接：</p>
<ul>
<li><a href="https://apidocs.imgur.com/" target="_blank" rel="noopener">Imgur API</a></li>
</ul>
<h3 id="SM-MS-图床"><a href="#SM-MS-图床" class="headerlink" title="SM.MS 图床"></a>SM.MS 图床</h3><p><img src="https://cdn.sspai.com/2017/08/21/a78e40318ea02f94a0b9e2ea19d8b10e.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img"></p>
<p><a href="https://sm.ms/" target="_blank" rel="noopener">SM.MS</a> 是由 V2EX @<a href="https://www.v2ex.com/member/Showfom" target="_blank" rel="noopener">Showfom</a> 自建的，无外链限制，无流量限制的图床，支持 HTTPS，速度不错，已经运行两年多了。</p>
<p>相关链接：</p>
<ul>
<li><a href="https://sm.ms/doc/" target="_blank" rel="noopener">sm.ms API</a></li>
</ul>
<p>其它公共图床还有很多，一搜一大把，不过大部分规模都比较小，要不就是国内访问速度不理想，使用前最好先了解一下。</p>
<hr>
<p>目前自建图床方案有两种，一种是利用云服务商提供的存储服务来作为图床，通过 API 来管理图片，另一种是在 VPS 上安装开源的图片或文件管理程序，只要能提供外链，基本都可以作为图床来用。</p>
<h2 id="自建图床：云服务"><a href="#自建图床：云服务" class="headerlink" title="自建图床：云服务"></a>自建图床：云服务</h2><h3 id="七牛"><a href="#七牛" class="headerlink" title="七牛"></a>七牛</h3><p><img src="https://cdn.sspai.com/2017/08/21/2242e610efb14f6d63261547f3e90609.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img">七牛云</p>
<p><a href="https://portal.qiniu.com/signup?code=3lmd5t4axez4i" target="_blank" rel="noopener">七牛</a> 作为国内领先的云服务商，全网 CDN 加速，全国访问速度都不错，API 很详细，对开发者比较友好。免费用户提供 10GB 存储空间，国内和海外分别提供 10 GB 的 HTTP 免费流量，七牛的 HTTPS 流量是收费的，没有免费额度。此外，七牛还提供了针对图片的各种服务，包括图片裁剪，压缩，鉴黄等等衍生服务。如果你觉得图片尺寸太大，可以在外链后面添加参数，访问的时候七牛会自动根据你的参数对图片进行处理。</p>
<p>目前我的图片都存在七牛上，使用 HTTPS 外链，每个月支出也就几块钱，就为了博客上那个小绿锁 😆。</p>
<p>相关链接：</p>
<ul>
<li><a href="https://developer.qiniu.com/" target="_blank" rel="noopener">七牛云 API 文档</a></li>
<li><a href="https://www.qiniu.com/prices" target="_blank" rel="noopener">七牛价格</a></li>
</ul>
<h3 id="又拍云"><a href="#又拍云" class="headerlink" title="又拍云"></a>又拍云</h3><p><img src="https://cdn.sspai.com/2017/08/21/9f1b5842c3ab1b8bc29e5fdbce49a972.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img">又拍云</p>
<p><a href="https://www.upyun.com/" target="_blank" rel="noopener">又拍云</a> 也算是国内比较有名的云服务商了，国内拥有 200+ 的自建 CDN 节点，国内速度也不错，API 很详细，不过对于普通用户没有免费额度，目前实行的是「按照用户每日实际消耗的 CDN 流量，实行 1:1 的存储空间费免费使用」。</p>
<p>相关链接：</p>
<ul>
<li><a href="http://docs.upyun.com/guide/#api" target="_blank" rel="noopener">又拍云 API 文档</a></li>
<li><a href="https://www.upyun.com/pricing" target="_blank" rel="noopener">又拍云价格</a></li>
</ul>
<h3 id="阿里云-OSS"><a href="#阿里云-OSS" class="headerlink" title="阿里云 OSS"></a>阿里云 OSS</h3><p><img src="https://cdn.sspai.com/2017/08/21/dea389e72df9a46289eaa24b3d88aee4.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img">阿里云 OSS</p>
<p><a href="https://www.aliyun.com/price/product#/oss/detail" target="_blank" rel="noopener">阿里云 OSS</a>（Object Storage Service），即阿里云对象存储服务，也可以作为图床，速度国内国外都不错，SDK 和 API 都很完善，收费也不算太贵，就是计费方案太复杂，目前费用包括：存储费用+流量费用+接口调用费用+数据处理，而且还分时段，地区，阶梯计费。可以选择包年包月和按量付费，具体价格和文档可以查看下面的官网介绍。</p>
<p>相关链接：</p>
<ul>
<li><a href="https://promotion.aliyun.com/ntms/act/ossdoclist.html" target="_blank" rel="noopener">阿里云 OSS 文档</a></li>
<li><a href="https://www.aliyun.com/price/product#/oss/detail" target="_blank" rel="noopener">阿里云 OSS 价格</a></li>
</ul>
<h2 id="自建图床：开源方案"><a href="#自建图床：开源方案" class="headerlink" title="自建图床：开源方案"></a>自建图床：开源方案</h2><p>如果你有 VPS，并且网络速度 OK 的话，自建图床也是一个不错的选择。</p>
<h3 id="Lychee"><a href="#Lychee" class="headerlink" title="Lychee"></a>Lychee</h3><p><img src="https://cdn.sspai.com/2017/08/21/5d4f0efa178487d54309f3da47d75e6e.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img"></p>
<p><a href="https://github.com/electerious/Lychee" target="_blank" rel="noopener">Lychee</a> 是一个开源免费的基于 PHP 的图片管理系统，支持 Docker 部署，可以直接当做图床来用，Lychee 还支持很多扩展。</p>
<h3 id="树洞外链"><a href="#树洞外链" class="headerlink" title="树洞外链"></a>树洞外链</h3><p><img src="https://cdn.sspai.com/2017/08/21/d916ed36a802e3e878e95d556bd64ef3.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img">树洞外链</p>
<p><a href="https://yun.aoaoao.me/" target="_blank" rel="noopener">树洞外链</a> 是一款免费开源的 PHP 外链网盘系统，界面简洁友好，支持七牛、本地、远程、阿里云OSS、又拍云五种储存方式，支持多用户系统，多上传方案策略。</p>
<p>相关链接：</p>
<ul>
<li><a href="https://file.aoaoao.me/" target="_blank" rel="noopener">演示站点</a></li>
</ul>
<h2 id="上传工具"><a href="#上传工具" class="headerlink" title="上传工具"></a>上传工具</h2><p>对普通用户来说，直接使用图床 API 很麻烦，我们可以借助一些工具方便的上传图片，下面就根据 macOS、Windows、Web 分别推荐几款工具。</p>
<h3 id="iPic"><a href="#iPic" class="headerlink" title="iPic"></a>iPic</h3><p><a href="https://sspai.com/app/iPic" target="_blank" rel="noopener"><img src="https://cdn.sspai.com/attachment/origin/2016/07/04/336030.png?imageMogr2/quality/95/thumbnail/!100x100r/gravity/Center/crop/100x100/interlace/1" alt="img"></a><a href="https://sspai.com/app/iPic" target="_blank" rel="noopener">iPic</a><a href="https://sspai.com/app/iPic" target="_blank" rel="noopener">相关文章</a></p>
<p><a href="https://itunes.apple.com/cn/app/id1101244278?ls=1&mt=12" target="_blank" rel="noopener">iPic</a> 是 macOS 上口碑最好的图床工具，支持 微博图床、七牛、阿里云 OSS、又拍云、Imgur、Flickr 等常见图床，支持拖拽、快捷键、剪贴板上传，支持上传前压缩，上传完毕自动生成 Markdown 并拷贝到剪贴板。如果你想迁移图床，开发者 <a href="https://slarker.me/image-oss/toolinbox.net" target="_blank" rel="noopener">@jason</a> 还做了一款 <a href="https://toolinbox.net/iPic/iPicMover.html" target="_blank" rel="noopener">图床迁移工具 iPic Mover</a> 来帮助你。此外，简洁优雅的 Markdown 工具 <a href="https://typora.io/" target="_blank" rel="noopener">Typora</a>也内嵌了 iPic 的上传服务，如果你也使用 Typora 的话，能感觉到这俩工具简直是绝配。</p>
<h3 id="MWeb"><a href="#MWeb" class="headerlink" title="MWeb"></a>MWeb</h3><p><a href="https://sspai.com/app/MWeb" target="_blank" rel="noopener"><img src="https://cdn.sspai.com/attachment/origin/2017/01/23/364951.png?imageMogr2/quality/95/thumbnail/!100x100r/gravity/Center/crop/100x100/interlace/1" alt="img"></a><a href="https://sspai.com/app/MWeb" target="_blank" rel="noopener">MWeb</a><a href="https://sspai.com/app/MWeb" target="_blank" rel="noopener">相关文章</a></p>
<p><img src="https://cdn.sspai.com/2017/08/21/a2229ac36e94260816e5423f5ceeba09.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img">MWeb 中的图床支持</p>
<p>如果你只是码字的时候才用到图床，那可能 <a href="http://zh.mweb.im/" target="_blank" rel="noopener">MWeb</a> 也能满足你的需求，MWeb 支持七牛、imgur、Google Photos，还支持自定义图床，写作的时候只需要将图片拖进来，写作完成一键上传所有图片，也很方便。</p>
<h3 id="Dropzone-3"><a href="#Dropzone-3" class="headerlink" title="Dropzone 3"></a>Dropzone 3</h3><p>[<img src="https://cdn.sspai.com/attachment/origin/2015/12/14/298954.png?imageMogr2/quality/95/thumbnail/!100x100r/gravity/Center/crop/100x100/interlace/1" alt="img">](<a href="https://sspai.com/app/Dropzone" target="_blank" rel="noopener">https://sspai.com/app/Dropzone</a> 3)[Dropzone 3](<a href="https://sspai.com/app/Dropzone" target="_blank" rel="noopener">https://sspai.com/app/Dropzone</a> 3)[相关文章](<a href="https://sspai.com/app/Dropzone" target="_blank" rel="noopener">https://sspai.com/app/Dropzone</a> 3)</p>
<p><a href="https://itunes.apple.com/us/app/dropzone-3/id695406827?mt=12" target="_blank" rel="noopener">Dropzone 3</a> 也可以通过 <a href="https://kyleduo.com/" target="_blank" rel="noopener">七牛插件</a> 来支持上传图片，和 MWeb 类似，具体教程可以看 <a href="https://blog.kyleduo.com/2017/02/27/qiniu-upload-for-dropzone/#more" target="_blank" rel="noopener">这里</a>。</p>
<h3 id="MPic"><a href="#MPic" class="headerlink" title="MPic"></a>MPic</h3><p><img src="https://cdn.sspai.com/2017/08/21/ff144a6f126b6e608b93b5ba06013e14.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img">MPic</p>
<p><a href="http://mpic.lzhaofu.cn/" target="_blank" rel="noopener">MPic</a> 目测是 Windows 上唯一的图床工具了，目前只支持七牛，把图片拖拽到软件窗口中就能上传。</p>
<h3 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h3><p>使用 Web 技术开发的图床工具一抓一大把，大部分都基于七牛和微博图床 API，这里就介绍两个体验不错的吧：</p>
<ul>
<li><a href="http://yotuku.cn/" target="_blank" rel="noopener">极简图床</a>：默认公共图床使用 sm.ms、微博图床，可以自定义支持七牛，界面简洁美观，支持 <a href="https://chrome.google.com/webstore/detail/heebflcbemenefckkgfnnklbhdbdkagg" target="_blank" rel="noopener">Chrome 插件</a>，注册后还可以同步上传历史。</li>
<li><a href="https://chrome.google.com/webstore/detail/新浪微博图床/fdfdnfpdplfbbnemmmoklbfjbhecpnhf/reviews" target="_blank" rel="noopener">微博图床 Chroem 扩展</a>：开源的图床工具，只支持微博图床，使用起来也很方便，可以批量上传，管理上传历史。</li>
</ul>
<h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><p>如果你对上面推荐的产品不满意，并且你会折腾的话，可以使用这个脚本来完成图片上传：<a href="https://github.com/tiann/markdown-img-upload" target="_blank" rel="noopener">Markdown 图片实用工具</a></p>
<p>该脚本使用 Python 版的七牛 SDK 来实现上传功能，你可以按照相关介绍，搭配 Alfred 来快速完成图片上传。</p>
<hr>
<p>图床服务最重要的是稳定性，大厂的云服务也都比较有保障，大家只要考虑下价格和易用性就可以了。就我个人而言，我首先推荐七牛，它的价格比较厚道，免费用户也有一定额度，数据可以自己掌控，另外各大平台的图床工具也基本都支持，易用性很高。其次推荐微博图床，对于不是很重要的图片，都可以存到微博图床，毕竟流量存储都免费，速度也不错。至于图床工具，就看自己的喜好了，只要顺手就行。但是不论选择哪一个服务或者工具，我觉得首先要自己可以掌控数据。</p>
<p>总之，适合自己的才是最好的。如果你还有其它好用的工具或者图床服务，欢迎留言给我，我会补充进来。</p>
</font>]]></content>
      <categories>
        <category>分享</category>
      </categories>
      <tags>
        <tag>图床</tag>
      </tags>
  </entry>
  <entry>
    <title>搜索引擎的正确打开方式</title>
    <url>/2020/04/28/searchengine/</url>
    <content><![CDATA[<p><font size =4>搜索引擎的使用是上网冲浪的基本前提.<a id="more"></a><br>前几天，一篇题为《搜索引擎就是我的大学》一文在我的朋友圈流转，小婉姑娘讲述了自己初中肄业从一个月薪三百的乡郊饭店服务员，通过搜索引擎自我学习，一步一步步入城市，拿下人力资源管理，项目经理，营销策划，文案策划等多个有挑战职位的逆袭事迹。</p>
<p><strong>这无意给了很多“有电脑的人”一种天下我有的莫名冲动。虽然搜索引擎可以搜索到几乎任何你想学的知识，但终究扔停留在可能性阶段。真正高效地驾驭搜索引擎还是需要做些功课。</strong></p>
<p>作为一名野路子网络营销钻研狗，打算开个帖子给大家做个科普，同时奉上一系列压箱底的“秘技”，希望于各位看客老爷有所裨益。</p>
<blockquote>
<p>本帖分科普篇；实用技巧篇；资源篇三部分，略长但越往后越精彩。</p>
</blockquote>
<h2 id="科普篇"><a href="#科普篇" class="headerlink" title="科普篇"></a>科普篇</h2><h3 id="一、搜索引擎是个什么东西？"><a href="#一、搜索引擎是个什么东西？" class="headerlink" title="一、搜索引擎是个什么东西？"></a>一、搜索引擎是个什么东西？</h3><p>搜索引擎（Search Engine）是指根据一定的策略、运用特定的计算机程序从互联网上搜集信息，在对信息进行组织和处理后，为用户提供检索服务，将用户检索相关的信息展示给用户的系统。搜索引擎包括全文索引、目录索引、元搜索引擎、垂直搜索引擎、集合式搜索引擎、门户搜索引擎与免费链接列表等。</p>
<p><strong>这里的用户指的是有信息获取需求的普通用户，其实信息生产提交方（站长等）严格意义来讲也是“用户”，普通用户只需要掌握搜索引擎使用技巧，而站长们更多的是琢磨SEO（搜索引擎优化）。这个帖子这双边都会有所涉及。</strong></p>
<h3 id="二、搜索引擎工作原理"><a href="#二、搜索引擎工作原理" class="headerlink" title="二、搜索引擎工作原理"></a>二、搜索引擎工作原理</h3><p><img src="http://image.woshipm.com/wp-files/2016/02/640.webp-3.jpg" alt="640.webp (3)"></p>
<p>爬行抓取：搜索引擎蜘蛛跟踪链接，抓取页面html代码存入数据库，低权重复制内容过滤;</p>
<p>预处理：文字和相关标签抓取，中文分词，去掉无意义内容提炼页面主要关键词(对于蜘蛛没有意义：如：的、啊、从而等，广告、申明等)，去重(同一内容不同网站或同一网站不同网址);倒排索引：关键词到内容，链接投票，文件处理(目前只能根据标签和相关描述文字识别)，质量判断：搜索引擎算法;</p>
<p>排名：中文分词(排除无实际意义的词后对搜索词的拆分重组，百度快照可查询分词结果)，相关性计算：越常用的词对搜索词的意义贡献越小，词频，关键词位置形式距离(标题、H1、黑体等)，链接分析(锚文本、周边文字、原站本身主题)，排名过滤调整(百度第11位)。</p>
<p><strong>搜索引擎的工作原理使命就是确保用户发出搜索指令后展现在他们面前的是其所需要的优质内容。</strong></p>
<h3 id="三、目前主流的搜索引擎"><a href="#三、目前主流的搜索引擎" class="headerlink" title="三、目前主流的搜索引擎"></a>三、目前主流的搜索引擎</h3><p><img src="http://image.woshipm.com/wp-files/2016/02/QQ%E6%88%AA%E5%9B%BE20160220155519.png" alt="QQ截图20160220155519"></p>
<p>搜索引擎简史：1994年Yahoo!诞生，1998年Google诞生，2000年百度诞生，2012年360搜索(好搜)推出。</p>
<p><strong>百度</strong></p>
<p><img src="http://image.woshipm.com/wp-files/2016/02/640.webp-4.jpg" alt="640.webp (4)"></p>
<p>不管是PC端还是移动端百度市场份额都是绝对的国内第一，跟国内目前其他搜索引擎相比，不说矮子里面挑高个的难听话，也不提竞价广告的乱象丛生，但从信息获取效率以及用户体验来比，百度也是当之无愧的。</p>
<p>作为学习工具，百度搜索有这两个地方不错，<strong>一是百度网盘，二是百度文库。</strong></p>
<p><strong>搜狗</strong></p>
<p><img src="http://image.woshipm.com/wp-files/2016/02/QQ%E6%88%AA%E5%9B%BE20160220140425.png" alt="QQ截图20160220140425"></p>
<p>搜狗在近年来发展迅速，最具特色的点是可以搜索微信内容和知乎内容。这都仰赖于腾讯的买买买内容战略。</p>
<p><strong>360</strong></p>
<p><img src="http://image.woshipm.com/wp-files/2016/02/QQ%E6%88%AA%E5%9B%BE20160220140722-1024x773.png" alt="QQ截图20160220140722"></p>
<p><img src="http://image.woshipm.com/wp-files/2016/02/QQ%E6%88%AA%E5%9B%BE20160220140735-1024x628.png" alt="QQ截图20160220140735"></p>
<p>对于360，实话实说，广告不比百度少，搜索结果质量也不敢恭维。来个对比。更多例子各位自行捣鼓。</p>
<p><strong>必须掌握Google！</strong></p>
<p>Google上面才是互联网，其他国内的搜索引擎的触角都受限，只能叫局域网。除了信息全面，用户体验也是谁用谁知道。</p>
<h3 id="四、世界范围内各搜索引擎市场份额"><a href="#四、世界范围内各搜索引擎市场份额" class="headerlink" title="四、世界范围内各搜索引擎市场份额"></a>四、世界范围内各搜索引擎市场份额</h3><p>以2015年第三季度为例</p>
<p>谷歌以67.49%的份额雄居第一，Yahoo第二，Bing凭借10.67%占据第三，百度第四，份额8.13%。</p>
<h2 id="搜索引擎以及相关实用技巧"><a href="#搜索引擎以及相关实用技巧" class="headerlink" title="搜索引擎以及相关实用技巧"></a>搜索引擎以及相关实用技巧</h2><h3 id="一、高级搜索指令（了解多用几遍即可）"><a href="#一、高级搜索指令（了解多用几遍即可）" class="headerlink" title="一、高级搜索指令（了解多用几遍即可）"></a>一、高级搜索指令（了解多用几遍即可）</h3><p>这么理解：一般人不知道的，能够提高搜索效率以及精度的一些特殊指令。</p>
<p>普通用户常用的包括：</p>
<p><strong>双引号（搜索：“关键词”）</strong></p>
<p><img src="http://image.woshipm.com/wp-files/2016/02/258-1024x595.png" alt="2"></p>
<p>把搜索词汇放在双引号中，代表完全匹配搜索，也就是说搜索出来的结果页面都是保护双引号中所出现的所有词汇，连顺序也是完全匹配的。百度和Google都是支持这个指令的。</p>
<p>使用双引号搜索可以更准确的找到特定关键词，更容易找到自己想要的资源。</p>
<p><strong>减号（搜索：关键词  -不需要的关键词）</strong></p>
<p>减号代表搜索引擎显示不包括减号后面词汇的页面。使用这个指令时减号前面必须是空格，减号后面没有空格，要紧跟着需要排除的词。Google和百度都支持这个指令。</p>
<p>使用减号高级指令可以更加准确的找到需要的文件，尤其是某些词语有多重意义的时候。</p>
<p><strong>星号 （搜索：搜索*擎）</strong></p>
<p>星号是常用的通配符，也可以使用在搜索引擎中。百度不支持*号指令。</p>
<p>比如在Google中搜索“ 搜索<em>擎”，其中</em>代表任何文字、出现的结果就不仅仅是包含“搜索引擎”的页面了。</p>
<p><strong>inurl：（搜索：inurl：任意字符串）</strong></p>
<p>inurl：指令用于搜索查询词出现在URL中的页面，可以按英文字面意思理解。百度和Google都是支持inurl：指令的。inurl：指令不仅支持英文，还支持中文。</p>
<p>高级搜索指令inurl的语法格式为：inurl：xxx（xxx可以为任意字符串）。此命令是查找url中包含xxx的网页。</p>
<p>如果你是做SEO的，那么inurl：指令对你会很有用，因为你可以快速的找到竞争对手（因为关键词出现在URL中对排名有一定的影响）。</p>
<p><strong>intitle：返回的是页面title中包含关键词的页面</strong></p>
<p><img src="http://image.woshipm.com/wp-files/2016/02/640.webp-5.jpg" alt="640.webp (5)"></p>
<p>百度和谷歌都支持intitle。 title是目前页面优化最重要的因素。无论是什么网站，基本都会把关键词放入title中。</p>
<blockquote>
<p>详细用法：<a href="http://jingyan.baidu.com/article/3f16e003c21c162591c103a6.html" target="_blank" rel="noopener">http://jingyan.baidu.com/article/3f16e003c21c162591c103a6.html</a></p>
</blockquote>
<p><strong>filetype：搜索特定文件格式的时候使用。</strong></p>
<p>例如：filetype:pdf 视频教程，显示的是包含“视频教程”的所有PDF文件。filetype指令可以用来搜索特定的资源，比如PDF电子书、Word文件等。Google和百度都是支持filetype：指令的。</p>
<blockquote>
<p>详细用法：<a href="http://jingyan.baidu.com/article/73c3ce28f23d8de50343d9ac.html" target="_blank" rel="noopener">http://jingyan.baidu.com/article/73c3ce28f23d8de50343d9ac.html</a></p>
</blockquote>
<p><strong>site：这个高级搜索指令用来搜索某个域名下面的所有文件。</strong></p>
<p>比如搜索“site：<a href="http://www.zhihu.com”，出现的就是www.zhihu.com这个域名下面的所有页面，可以说这个高级指令是查询网站收入页面数量最直接的方法。site：指令也可以用于子域名。但site：并不准确，特别是在Google中，出现的收入页面经常有大幅度波动，只能用于参考，但不能完全相信。">www.zhihu.com”，出现的就是www.zhihu.com这个域名下面的所有页面，可以说这个高级指令是查询网站收入页面数量最直接的方法。site：指令也可以用于子域名。但site：并不准确，特别是在Google中，出现的收入页面经常有大幅度波动，只能用于参考，但不能完全相信。</a></p>
<p>之前有人用“site:yun.baidu.com ”资源关键词这个搜网盘里面的资源，现在貌似不大顶用了，等下给出替代方案。</p>
<p>高级搜索指令大全诸位可自行百度，补充一点是，这些指令很多都可以互相搭配使用影响最后的结果。可以有很复杂的组合结果，好消息是有人帮我们封装好做写成了特殊的搜索引擎供我们使用。</p>
<h3 id="二、特殊搜索引擎"><a href="#二、特殊搜索引擎" class="headerlink" title="二、特殊搜索引擎"></a>二、特殊搜索引擎</h3><blockquote>
<p>这有个知乎特殊搜索引擎汇总贴：<a href="https://www.zhihu.com/question/20251786" target="_blank" rel="noopener">https://www.zhihu.com/question/20251786</a></p>
</blockquote>
<p>大而全的东西意味着杂乱，外行很容易陷入选择困难症一脸茫然。我给大家重点勾勒几个点。</p>
<p>先顺逻辑：<strong>从学习的角度，我们搜索一个东西最浅显的需求就是了解知道，要想深入消化吸收往往意味着有必要触发资料收集下载这一动作。</strong></p>
<p>嗯，我就是要教大家怎么下载。<strong>一般的付费教程以及电子书资源，百度网盘的资源丰富度远远超过你想象，不过百度官方并不提供资源检索功能。借助工具就好了，用网盘搜索引擎即可。我公众号的菜单栏内置了一个，大家可以体验一下。</strong></p>
<p><img src="http://image.woshipm.com/wp-files/2016/02/webwxgetmsgimg-2-1024x560.png" alt="webwxgetmsgimg (2)"></p>
<p><strong>理论上，只要挂在网上，就算是付费的视频，文档也能抠下来。某宝上面固然有售，稍稍懂点搜索引擎的功能其实都能省去不少精力，虽然大伙儿都不差钱，哈哈。</strong></p>
<p><img src="http://image.woshipm.com/wp-files/2016/02/QQ%E6%88%AA%E5%9B%BE20160220162723-1024x307.png" alt="QQ截图20160220162723"></p>
<p>百度文库，豆丁等下载：<strong>冰点下载器</strong></p>
<p><img src="http://image.woshipm.com/wp-files/2016/02/QQ%E6%88%AA%E5%9B%BE20160220163011-1024x522.png" alt="QQ截图20160220163011"></p>
<p>YouTube视频下载：<strong>en.savefrom.net</strong></p>
<p><img src="http://image.woshipm.com/wp-files/2016/02/QQ%E6%88%AA%E5%9B%BE20160220163153-1024x331.png" alt="QQ截图20160220163153"></p>
<p>国内视频网站内容下载：<strong>硕鼠</strong></p>
<p>虎牙直播，斗鱼直播等在线直播视频下载：<strong>屏幕录制软件（CamtasiaStudio），我手上是自己写的软件。</strong></p>
<p>视频资源：用各种种子搜索引擎就好了。如：<strong>电驴，海盗，死去的btspread，以及不能说的其他站点。等下各位在评论区补充。</strong></p>
<p><img src="http://image.woshipm.com/wp-files/2016/02/QQ%E6%88%AA%E5%9B%BE20160220162854.png" alt="QQ截图20160220162854"></p>
<p>浏览国外资讯什么的，起码要会翻墙吧，建议用付费的vpn，速度有保障，最重要的是下东西飞快。俺用的一款之前叫greenvpn，现在叫绿豆加速器。红杏已挂。</p>
<p>省略一万种资源获取方式……</p>
<p>最后放个大招：自行百度<strong>吾爱破解，精易论坛</strong>，对绝大多数人来讲，那将是另外一片天堂。</p>
<p>各色工具资源站点我收藏夹都躺了几百个，一次抖不完。唠叨一个省事的终极思路——<strong>互联网的基础设施是IT们搭建起来的，其中有五颜六色的暗门，摸熟搜索引擎，就是拥有了打开这些暗门的钥匙。</strong></p>
<p>至于暗网什么的高级黑，下次八卦，写写我掌握的一些细节。</p>
<h3 id="三、关键词使用"><a href="#三、关键词使用" class="headerlink" title="三、关键词使用"></a>三、关键词使用</h3><p><img src="http://image.woshipm.com/wp-files/2016/02/QQ%E6%88%AA%E5%9B%BE20160220163514.png" alt="QQ截图20160220163514"></p>
<p><strong>使用搜索引擎的搜索功能最重要的是知道输入哪个关键词。</strong></p>
<p>搜索引擎就像一个搬运工，你想让他给你搬运啥东西，你起码得知道自己想要什么。例如你想学英语，你可能就会搜怎么学英语，英语培训教程。这种起码的素养，一般人初次接触搜索引擎就具备。这一阶段一般使用的往往是<strong>泛关键词</strong>。</p>
<p>学习是个循序渐进的过程，意味着你有深入挖掘细分领域的需求。这就引申出另外一个概念叫<strong>精准关键词（或长尾关键词）</strong>，不过多展开，需要强调的是，大家在使用搜索引擎的时候要有意识地去提炼自己的关键词，从不同的维度去获取你想要的信息。</p>
<p><strong>举个粗暴栗子，黄片又叫爱情动作片，此外番号，番号封面，女优这些关键词也指向你想要获取的资源，是不是很有趣。</strong></p>
<p><strong>互联网再繁杂，只要多记对象名词，熟悉事物关键节点，借助搜索引擎就能提纲挈领，手到擒来。到这个当口，才有天下为我所用的掌握感。</strong></p>
<h3 id="四、搭建网站门类的记忆宫殿"><a href="#四、搭建网站门类的记忆宫殿" class="headerlink" title="四、搭建网站门类的记忆宫殿"></a>四、搭建网站门类的记忆宫殿</h3><p>浸淫互联网许久，俺在说个有意思的点。<strong>导航网站相信大家都很熟悉，像hao123，金山毒霸导航，360导航。</strong></p>
<p><strong>我想给大伙说的是，这些导航网站的布局一般都别有用心（用来做淘宝客导购，软件注册推广，广告等），而且聚合的站点也很平庸，满足普罗大众日常的消遣尚可，但是想让搜索引擎成为你的大学，就远远不够了。</strong></p>
<p>你需要搭建属于自己的“网站导航”，在日常接触到的优秀网站，记得在浏览器点一下收藏，分门别类。经年累月的积累，这将是你电脑上最重要的一笔财富。我换电脑或装系统几乎东西不担心丢失，同步下收藏夹就好了。</p>
<p><img src="http://image.woshipm.com/wp-files/2016/02/%E6%94%B6%E8%97%8F%E5%A4%B9.png" alt="收藏夹"></p>
<p>分门别类的收藏夹是你搭建脑海记忆宫殿的基础，最终要达到有搜索需求的时，资源获取手到擒来。</p>
<blockquote>
<p>至于怎么管理你的收藏夹，适合你自己的姿势才是最好的，一些管理原则，放个帖子：<a href="https://www.zhihu.com/question/21537488" target="_blank" rel="noopener">https://www.zhihu.com/question/21537488</a></p>
</blockquote>
<h3 id="五、网感"><a href="#五、网感" class="headerlink" title="五、网感"></a>五、网感</h3><p>多泡网，见识各色各样的网站样式，在建立起自己的站点记忆宫殿之后，培养自己的网感，懂得各色资源的搭配调取应用。网感是个很大的命题，看似有些务虚，实则用处极大。此处提出这一概念，鉴于篇幅下次阐述。</p>
<h2 id="资源篇"><a href="#资源篇" class="headerlink" title="资源篇"></a>资源篇</h2><p>从学习获取资源的角度，看上面的东西就够用了。你要对搜索引擎真感兴趣，俺接着给大家推荐几本类似行业圣经的读物。</p>
<p><img src="http://image.woshipm.com/wp-files/2016/02/QQ%E6%88%AA%E5%9B%BE20160220155555.png" alt="QQ截图20160220155555"></p>
<p><strong>SEO艺术</strong></p>
<p>国外译著，享有盛誉</p>
<p><img src="http://image.woshipm.com/wp-files/2016/02/QQ%E6%88%AA%E5%9B%BE20160220155840.png" alt="QQ截图20160220155840"></p>
<p>《这就是搜索引擎:核心技术详解》</p>
<p>关于一些技术细节</p>
<p><img src="http://image.woshipm.com/wp-files/2016/02/QQ%E6%88%AA%E5%9B%BE20160220155728.png" alt="QQ截图20160220155728"></p>
<p><strong>《搜》</strong></p>
<p>搜索引擎的由来，了解历史，偏文化经济层次</p>
<p><img src="http://image.woshipm.com/wp-files/2016/02/QQ%E6%88%AA%E5%9B%BE20160220155810.png" alt="QQ截图20160220155810"></p>
<p><img src="http://image.woshipm.com/wp-files/2016/02/QQ%E6%88%AA%E5%9B%BE20160220164806.png" alt="QQ截图20160220164806"></p>
<p>《SEO深度解析》和《SEO实战密码:60天网站流量提高20倍(第3版)》都是站长SEO操作指南。</p>
</font>]]></content>
      <categories>
        <category>分享</category>
      </categories>
      <tags>
        <tag>搜索引擎</tag>
      </tags>
  </entry>
  <entry>
    <title>Python安装教程</title>
    <url>/2020/04/28/python-install/</url>
    <content><![CDATA[<p><font size=4>python是数据开发,科学计算,人工智能,机器学习等领域一门实用性很高的语言.<a id="more"></a></p>
<h1 id="一、安装python"><a href="#一、安装python" class="headerlink" title="一、安装python"></a>一、安装<code>python</code></h1><blockquote>
<p>这一文主要为了给更多想开始学<code>python</code>同学一个开端，八一为了更好地展示其下载与安装流程，我是将之前装好的<code>anaconda</code>给卸载.</p>
<ul>
<li>这里我推荐的下载软件为<code>迅雷</code>，速度惊人；</li>
<li>另一个便是卸载软件<code>Revo Uninstaller Pro</code>，几乎可以做到任何软件的完全卸载，尤其当你遇到流氓软件，它便是你的最佳选择。</li>
</ul>
</blockquote>
<ol>
<li><strong>下载</strong>：先进入官网 <code>https://www.python.org</code>，这两处均可以下载，首页菜单的<code>Dowmloads</code>是有历史版本下载资源，你可以自我选择，就以2020年2月25日<code>python官方</code>发布的最新版本<code>3.8.2</code>为例，而且会以2个月发布一个版本的频次来维护<code>python3.8系列</code>，所以<code>3.8.3</code>将在4月份发布。如果是<code>32</code>位的操作系统，可看图示.</li>
</ol>
<p><img src="https://imgkr.cn-bj.ufileos.com/dfec5537-c649-4e75-b774-c74a71a523d5.png" alt="img"></p>
<p><img src="https://imgkr.cn-bj.ufileos.com/36063637-e0cc-49f4-9e0e-fc3d87c2d762.png" alt="img"></p>
<p>由于我的笔记本是<code>64</code>位系统，所以采取第一张图下方的<code>Download</code>，点击Latest: <code>Python 3.8.2</code>，可看到如下图正确下载，便可得下载的文件名是<code>python-3.8.2-amd64.exe</code>.</p>
<p><img src="https://imgkr.cn-bj.ufileos.com/71d56964-c22b-4840-9fe8-7d86dc1734b1.png" alt="img"></p>
<p>鼠标右击<code>python-3.8.2-amd64.exe</code>以管理员身份运行，后勾选<code>Add Python 3.8 to PATH</code>并点击<code>Customize installation</code>（自定义安装），我选择的安装路径是在<code>D</code>盘，并建立<code>python38</code>文件夹.</p>
<p><img src="https://imgkr.cn-bj.ufileos.com/8b2e6144-6f5e-4785-ad87-dc051bce5c97.png" alt="添加环境变量并勾选自定义安装"></p>
<p><strong>添加环境变量并勾选自定义安装</strong></p>
<p><img src="https://imgkr.cn-bj.ufileos.com/b8af164f-5288-471a-b1f4-25a0500094fa.png" alt="点击`Next`"></p>
<p><strong>点击<code>Next</code></strong></p>
<p><img src="https://imgkr.cn-bj.ufileos.com/54473026-1094-467c-8810-3c95622eaf5f.png" alt="为所有用户安装且自定义安装路径"></p>
<p><strong>为所有用户安装且自定义安装路径</strong></p>
<p><img src="https://imgkr.cn-bj.ufileos.com/db06bdb2-6fb4-49f8-8b68-d49e6f025807.png" alt="安装中"></p>
<p><strong>安装中</strong></p>
<p><img src="https://imgkr.cn-bj.ufileos.com/89bc1740-eaa6-477d-9025-dc988734d762.png" alt="安装成功并点击close关闭窗口"></p>
<p><strong>安装成功并点击close关闭窗口</strong></p>
<ol>
<li><strong>查看<code>python</code>环境变量</strong>： 右击计算机属性，找到<code>高级系统设置</code>，点开环境变量，然后从系统变量中找到<code>path</code>，会出现如图示</li>
</ol>
<p><img src="https://imgkr.cn-bj.ufileos.com/74e18809-c341-4891-a663-667d87fd961b.png" alt="高级系统设置"></p>
<p><strong>高级系统设置</strong></p>
<p><img src="https://imgkr.cn-bj.ufileos.com/c99d3d9f-7a79-48fa-95db-47e7bb95dd0c.png" alt="环境变量"></p>
<p><strong>环境变量</strong></p>
<p><img src="https://imgkr.cn-bj.ufileos.com/c449cd42-88dd-4789-906a-a72524bfbc02.png" alt="img"></p>
<p>在之前的流程中，我已经勾选<code>Add Python 3.8 to PATH</code>，它也就已经在我们安装<code>python</code>时自动给你好了配置环境变量，包括<code>D:\Python38\Scripts\</code>和<code>D:\Python38\</code>，如果你当初没有勾选添加环境变量，自己手动编辑添加进去.</p>
<ol>
<li>检查<code>python</code>:这个我们快捷键<code>win+R</code>调用<code>cmd</code>，输入<code>python</code>回车，这时会出现<code>python</code>的版本信息如下图</li>
</ol>
<p><img src="https://imgkr.cn-bj.ufileos.com/0bbcfacb-08f9-4fb9-8278-196d70cded53.png" alt="image"></p>
<p><strong>image</strong></p>
<p>然后点击左下角搜索程序与文件，找到<code>IDLE (Python 3.8 64-bit)</code>，并双击打开运行，命令行输入<code>print (&quot;欢迎来到八一考研数学竞赛/机器学习与大数据建模&quot;)</code></p>
<p><img src="https://imgkr.cn-bj.ufileos.com/d9439732-baf6-414f-82ce-214797fa4ab2.png" alt="IDLE (Python 3.8 64-bit)"></p>
<p><strong>IDLE (Python 3.8 64-bit)</strong></p>
<p><img src="https://imgkr.cn-bj.ufileos.com/265fe3c0-a997-4678-8f37-97a85334b32d.png" alt="使用界面"></p>
<p><strong>使用界面</strong></p>
<h1 id="二、安装anaconda"><a href="#二、安装anaconda" class="headerlink" title="二、安装anaconda"></a>二、安装anaconda</h1><ol>
<li><strong>下载</strong> ：首先我们<code>google</code>搜索<code>anaconda</code>，第一个便是其官方网址：</li>
</ol>
<p><img src="https://imgkr.cn-bj.ufileos.com/3a3e7668-e938-472f-911f-e58008cba17b.png" alt="img"></p>
<p><img src="https://imgkr.cn-bj.ufileos.com/92239bef-9eb5-46c3-8996-2d7e01b4d4ea.png" alt="image"></p>
<p><strong>image</strong></p>
<p>但我一般不推荐去官网下载，速度慢，毕竟是外网，国内用户下载肯定慢，找到对应的版本，我是建议同学们去<code>清华大学开源软件镜像站</code>下载，地址贴下：</p>
<p><a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/</a></p>
<p><img src="https://imgkr.cn-bj.ufileos.com/aa9a0d3d-e567-4011-ad5c-feefe13f72ad.png" alt="版本、更新时间与系统"></p>
<p><strong>版本、更新时间与系统</strong></p>
<p>如果你的网络没问题的话<code>466.3 M</code>的文件下载不要几分钟，我把地址复制到<code>迅雷</code>一分钟就给我下载好了.</p>
<ol>
<li><strong>安装：</strong> 以管理员身份运行，右击<code>Anaconda3-5.3.1-Windows-x86_64.exe</code>，即出出现如下界面，按图示箭头所操作，这里安装路径我更改为<code>D</code>盘，并建立<code>Anaconda3</code>的文件夹，</li>
</ol>
<p><img src="https://imgkr.cn-bj.ufileos.com/3a41e643-7098-4c50-9d7d-d13f7db51420.png" alt="Next"></p>
<p><strong>Next</strong></p>
<p><img src="https://imgkr.cn-bj.ufileos.com/2247bb57-9ac2-4ff5-aa54-a21c522c703f.png" alt="欢迎界面，点I Agree"></p>
<p><strong>欢迎界面，点I Agree</strong></p>
<p><img src="https://imgkr.cn-bj.ufileos.com/8ec9f374-358a-43eb-a89f-4de6cf88d460.png" alt="img"></p>
<p><img src="https://imgkr.cn-bj.ufileos.com/d49429eb-2304-4b5c-9f56-c453984e07cd.png" alt="img"></p>
<p><img src="https://imgkr.cn-bj.ufileos.com/90491fd9-4666-41d8-bc8d-ca9b140f3e3b.png" alt="img"></p>
<p><img src="https://imgkr.cn-bj.ufileos.com/f1616492-ec3d-4ce2-8cb5-81a3f036a126.png" alt="img"></p>
<p><img src="https://imgkr.cn-bj.ufileos.com/0c9425e5-b16c-4558-ad79-83ca218381a3.png" alt="img"></p>
<ol>
<li>配置环境变量</li>
</ol>
<p>   ：需要在系统变量添加</p>
<p>   java</p>
<pre class=" language-java"><code class="language-java">   D<span class="token operator">:</span>\Anaconda3\Library\bin
   D<span class="token operator">:</span>\Anaconda3\Scripts\
   D<span class="token operator">:</span>\Anaconda3\</code></pre>
<p>   而</p>
<pre><code>   python37</code></pre><p>   和</p>
<pre><code>   anaconda</code></pre><p>   都是</p>
<pre><code>   python</code></pre><p>   环境，</p>
<p>   在系统环境变量中找到对应之前安装<code>Python38</code>以及上面的<code>python38</code>的路径并删除</p>
<p>   ，改为</p>
<pre><code>   anaconda</code></pre><p>   的环境变量，然后再检查下</p>
<pre><code>   anaconda</code></pre><p>   ，输入</p>
<pre><code>   conda --version</code></pre><p>   ，并输入</p>
<pre><code>   python</code></pre><p>   显现出了</p>
<pre><code>   anaconda</code></pre><p>   自带的</p>
<pre><code>   python</code></pre><p>   解释器的版本</p>
<pre><code>   3.7.0</code></pre><p><img src="https://imgkr.cn-bj.ufileos.com/31ab5fa9-de1c-4a62-af4d-4b519e50265e.png" alt="img"></p>
<p>这样可以确认其安装成功了，接下来将原来的<code>python3.8.2</code>加进<code>anaconda</code>中.</p>
<blockquote>
<p>注意：<code>anaconda</code>要在完成环境变量的配置后才能使用<code>conda命令</code></p>
</blockquote>
<p>使用<code>conda env list</code>查看<code>conda</code>的环境变量，可以看到只有一个<code>base</code>默认环境</p>
<p><img src="https://imgkr.cn-bj.ufileos.com/c51b678d-46e2-41e6-a1cb-5fc0a6df2d1c.png" alt="image"></p>
<p><strong>image</strong></p>
<p>所以尝试激活，输入<code>activate base</code>，这里你可以略写<code>activate</code>，是因为<code>base</code>为默认环境，关闭环境使用<code>deactivate</code>，然后我们尝试激活<code>base</code>环境的情况下使用<code>python</code>命令，运行<code>python3.7.0</code>，如图</p>
<p><img src="https://imgkr.cn-bj.ufileos.com/e2265dc8-661f-442f-9f93-d626a605dc85.png" alt="img"></p>
<p>这样我们可以看到<code>python3.7.0</code>解释器是在<code>base</code>环境中.</p>
<p>3.<strong>利用<code>conda</code>配置虚拟环境</strong>：先创建环境</p>
<p>java</p>
<pre class=" language-java"><code class="language-java">conda create <span class="token operator">-</span>n test python<span class="token operator">=</span><span class="token number">3.8</span></code></pre>
<p>其中<code>test</code>为环境名称，<code>3.8</code>为<code>python</code>版本，这个可以自己设置.</p>
<p><img src="https://imgkr.cn-bj.ufileos.com/b8721f17-8f0d-4d03-8da5-a386e46bb60c.png" alt="img"></p>
<p><img src="https://imgkr.cn-bj.ufileos.com/11c0bd65-d41a-47d5-8575-fed76869e4dc.png" alt="img"></p>
<p>然后开始激活环境<code>activate test</code>，再退出<code>deactivate</code>，再看<code>anaconda</code>里的环境，此时在<code>envs</code>中多出个<code>test</code>环境名，</p>
<p><img src="https://imgkr.cn-bj.ufileos.com/8c4ea0bb-78a9-4739-a2c7-fc8b82b253f1.png" alt="img"></p>
<p>接下来我们可以通过语句<code>activate test</code>来激活<code>test</code>这个环境，然后运行<code>python</code>来查看<code>test</code>里的解释器信息</p>
<p><img src="https://imgkr.cn-bj.ufileos.com/314f38d6-3c19-4792-ba8d-6bcfac4976c9.png" alt="img"></p>
<p>最后我们删除这个<code>test</code>环境，使用命令行</p>
<p>java</p>
<pre class=" language-java"><code class="language-java">conda remove <span class="token operator">-</span>n test <span class="token operator">--</span>all</code></pre>
<p><img src="https://imgkr.cn-bj.ufileos.com/4e27b8d9-84f3-4784-83d2-77e2a6a6bf95.png" alt="img"></p>
<p>这些只是为了给我们自己的<code>python3.8.2</code>先在<code>anaconda</code>里搭好一个适合<code>python38</code>，然后将我们之前安装好的<code>python38</code>复制粘贴到<code>anaconda</code>的<code>envs</code>文件夹</p>
<p><img src="https://imgkr.cn-bj.ufileos.com/a9dda805-d0e4-4d29-a934-9da8b33de5c7.png" alt="img"></p>
<p>这样就把我们的<code>python3.8.2</code>（2020年2月25号版本）加进<code>anaconda</code>里了，然后输入命令<code>activate python38</code>激活<code>python38</code>环境，再输入<code>python</code>查看并进入<code>python</code>解释器.</p>
<p><img src="https://imgkr.cn-bj.ufileos.com/eaa1ffd3-d73f-450e-8a5a-adf0a5d8b6f9.png" alt="img"></p>
<hr>
<p>要想将我们原来安装的<code>python3.7.0</code>装到<code>anaconda</code>中，先是创建一个环境，建立一个名称为<code>python37</code>的虚拟环境并指定<code>python</code>版本，然后激活该环境并查看<code>anaconda</code>里的环境.</p>
<pre><code>conda create -n python37 python=3.7</code></pre><p><img src="https://imgkr.cn-bj.ufileos.com/95068dc1-8d45-481d-af5a-276f63bd68e8.png" alt="img"></p>
<p><img src="https://imgkr.cn-bj.ufileos.com/1c647108-2ff0-497e-97a9-89daa65f9cae.png" alt="img"></p>
<p><img src="https://imgkr.cn-bj.ufileos.com/746b0ecc-e05f-4bdf-89dd-4639b572696d.png" alt="img"></p>
<blockquote>
<p>这里我将很早下载好的<code>python37</code>复制到粘贴到<code>anaconda</code>的<code>envs</code>文件夹</p>
</blockquote>
<p><img src="https://imgkr.cn-bj.ufileos.com/329748e0-6b83-4fce-b584-51b084e8bd23.png" alt="img"></p>
<p>然后输入命令<code>activate python37</code>激活<code>python37</code>环境，在输入<code>python</code>查看并进入<code>python</code>解释器.</p>
<blockquote>
<p>在<code>Anoconda</code>中用户以后安装的<code>python</code>会存放在<code>envs</code>中，如果在<code>cmd</code>中输入<code>conda info -e</code> 或<code>conda info --envs</code> 就可以得到你安装的<code>python</code>信息</p>
</blockquote>
</font>]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>基于hexo搭建博客教程</title>
    <url>/2020/04/27/built-blog-based-hexo/</url>
    <content><![CDATA[<p><font size=4>本文就详细介绍下如何使用 Hexo + GitHub 搭建免费个人博客网站的教程。<a id="more"></a></p>
<p>近些年来很多用户都喜欢使用 GitHub Pages 来搭建 Hexo 静态博客网站，其最吸引人的莫过于完全免费使用，并且非常稳定。</p>
<p>虽然搭建时比较麻烦，有点折腾，但是配置完成后，基本不需要操心维护的事，甚至放了几年都忘记了，打开来看文章依然还在。</p>
<hr>
<p>为了照顾小白用户（第一次使用 GitHub 和 Hexo），尽可能详细，包括常见的坑和问题都有提示说明。下面目录中<strong>第 3~5 步为最重要的步骤</strong>，其他内容如果已经会的可以选择性跳过。</p>
<p>看起来有点繁杂，捋顺了倒也简单，认真跟教程走，完整操作一遍大概需要 30 分钟。</p>
<p>o(￣▽￣)ｄ</p>
<p><strong>内容目录：</strong></p>
<ul>
<li>简介：GitHub Pages 和 Hexo &amp; 原理</li>
</ul>
<ol>
<li>准备：环境搭建<br>1.1. 注意事项<br>1.2. 环境搭建</li>
<li>连接 Github</li>
<li>创建 Github Pages 仓库</li>
<li>本地安装 Hexo 博客程序<br>4.1. 安装 Hexo<br>4.2. Hexo 初始化和本地预览</li>
<li>部署 Hexo 到 GitHub Pages</li>
<li>绑定域名（可选）</li>
<li>开始使用<br>7.1. 发布文章<br>7.2. 网站设置<br>7.3. 更换主题<br>7.4. 常用代码</li>
<li>常见问题</li>
</ol>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><h3 id="GitHub-Pages-是什么？"><a href="#GitHub-Pages-是什么？" class="headerlink" title="GitHub Pages 是什么？"></a>GitHub Pages 是什么？</h3><ul>
<li><a href="https://link.zhihu.com/?target=https%3A//help.github.com/en/articles/what-is-github-pages">What is GitHub Pages? - GitHub Help</a></li>
</ul>
<p>GitHub Pages 是由 GitHub 官方提供的一种免费的静态站点托管服务，让我们可以在 GitHub 仓库里托管和发布自己的静态网站页面。</p>
<h3 id="Hexo-是什么？"><a href="#Hexo-是什么？" class="headerlink" title="# Hexo 是什么？"></a><strong># Hexo 是什么？</strong></h3><ul>
<li>官网：<a href="https://link.zhihu.com/?target=https%3A//hexo.io/zh-cn/">hexo.io</a></li>
</ul>
<p>Hexo 是一个快速、简洁且高效的静态博客框架，它基于 Node.js 运行，可以将我们撰写的 Markdown 文档解析渲染成静态的 HTML 网页。</p>
<h3 id="Hexo-GitHub-文章发布原理"><a href="#Hexo-GitHub-文章发布原理" class="headerlink" title="# Hexo + GitHub 文章发布原理"></a><strong># Hexo + GitHub 文章发布原理</strong></h3><p>在本地撰写 Markdown 格式文章后，通过 Hexo 解析文档，渲染生成具有主题样式的 HTML 静态网页，再推送到 GitHub 上完成博文的发布。</p>
<p><img src="https://pic3.zhimg.com/80/v2-a193a47cf70fe6ecf156e5f3d34920ea_720w.jpg" alt="img"></p>
<h3 id="优点和不足"><a href="#优点和不足" class="headerlink" title="# 优点和不足"></a><strong># 优点和不足</strong></h3><p><strong>优点：</strong>完全免费；静态站点，轻量快速；可按需求自由定制改造；托管在 GitHub，安全省心；迁移方便……</p>
<p><strong>不足：</strong>发文不便，依赖于本地环境；更适合个人博客使用；GitHub 在国内访问速度有点不快。</p>
<h2 id="1-准备"><a href="#1-准备" class="headerlink" title="1. 准备"></a>1. 准备</h2><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="# 注意事项"></a><strong># 注意事项</strong></h3><ul>
<li>输入代码时，核对准确，最好切换成英文输入法；</li>
<li>将文中的 “用户名” 和 “邮箱” 替换为自己的 GitHub 账户名和绑定的邮箱；</li>
<li>统一使用 Git Bash 进行操作（支持 Win、Mac）；</li>
<li>小白请严格按步骤进行，不要跳！</li>
</ul>
<h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="# 环境搭建"></a><strong># 环境搭建</strong></h3><p>Hexo 基于 Node.js，搭建过程中还需要使用 npm（Node.js 已带） 和 git，因此先搭建本地操作环境，安装 Node.js 和 Git。</p>
<ul>
<li>Node.js：<a href="https://link.zhihu.com/?target=https%3A//nodejs.org/zh-cn">https://nodejs.org/zh-cn</a></li>
<li>Git：<a href="https://link.zhihu.com/?target=https%3A//git-scm.com/downloads">https://git-scm.com/downloads</a></li>
</ul>
<p>下载 Node.js 和 Git 程序并安装，一路点 “下一步” 按默认配置完成安装。</p>
<p>安装完成后，Win+R 输入 cmd 并打开，依次输入 <code>node -v</code>、<code>npm -v</code> 和 <code>git --version</code> 并回车，如下图出现程序版本号即可。</p>
<p><img src="https://pic1.zhimg.com/80/v2-27b47b5ae479ce7987851292a67774b0_720w.jpg" alt="img"></p>
<h2 id="2-连接-Github"><a href="#2-连接-Github" class="headerlink" title="2. 连接 Github"></a>2. 连接 Github</h2><p>使用邮箱注册 <a href="https://link.zhihu.com/?target=https%3A//github.com/">GitHub</a> 账户，选择免费账户（Free），并完成邮件验证。</p>
<p>右键 -&gt; Git Bash Here，<strong>设置用户名和邮箱</strong>：</p>
<pre class=" language-text"><code class="language-text">git config --global user.name "GitHub 用户名"
git config --global user.email "GitHub 邮箱"</code></pre>
<p><strong>创建 SSH 密匙</strong>：</p>
<p>输入 <code>ssh-keygen -t rsa -C &quot;GitHub 邮箱&quot;</code>，然后一路回车。</p>
<p><strong>添加密匙：</strong></p>
<p>进入 [C:\Users\用户名.ssh] 目录（要勾选显示“隐藏的项目”），用记事本打开公钥 id_rsa.pub 文件并复制里面的内容。</p>
<p>登陆 GitHub ，进入 Settings 页面，选择左边栏的 SSH and GPG keys，点击 New SSH key。</p>
<p>Title 随便取个名字，粘贴复制的 id_rsa.pub 内容到 Key 中，点击 Add SSH key 完成添加。</p>
<p><img src="https://pic1.zhimg.com/80/v2-9125065afd24332d7cd84feb6a350730_720w.jpg" alt="img"></p>
<p><strong>验证连接：</strong></p>
<p>打开 Git Bash，输入 <code>ssh -T git@github.com</code> 出现 “Are you sure……”，输入 yes 回车确认。</p>
<p><img src="https://pic3.zhimg.com/80/v2-b4c7524a2451f4ab42f9c22ea3c7b6be_720w.jpg" alt="img"></p>
<p>显示 “Hi xxx! You’ve successfully……” 即连接成功。</p>
<h2 id="3-创建-Github-Pages-仓库"><a href="#3-创建-Github-Pages-仓库" class="headerlink" title="3. 创建 Github Pages 仓库"></a>3. 创建 Github Pages 仓库</h2><p>GitHub 主页右上角加号 -&gt; New repository：</p>
<ul>
<li>Repository name 中输入 <code>用户名.github.io</code></li>
<li>勾选 “Initialize this repository with a README”</li>
<li>Description 选填</li>
</ul>
<p>填好后点击 Create repository 创建。</p>
<p><img src="https://pic2.zhimg.com/80/v2-67a8165154f4c5f4a6333e76e78ed815_720w.jpg" alt="img"></p>
<p>创建后默认自动启用 HTTPS，博客地址为：<code>https://用户名.github.io</code></p>
<h2 id="4-本地安装-Hexo-博客程序"><a href="#4-本地安装-Hexo-博客程序" class="headerlink" title="4. 本地安装 Hexo 博客程序"></a>4. 本地安装 Hexo 博客程序</h2><p>新建一个文件夹用来存放 Hexo 的程序文件，如 Hexo-Blog。打开该文件夹，右键 -&gt; Git Bash Here。</p>
<h3 id="4-1-安装-Hexo"><a href="#4-1-安装-Hexo" class="headerlink" title="# 4.1 安装 Hexo"></a><strong># 4.1 安装 Hexo</strong></h3><p>使用 npm 一键安装 Hexo 博客程序：</p>
<pre class=" language-text"><code class="language-text">npm install -g hexo-cli</code></pre>
<p>Mac 用户需要管理员权限（sudo），运行这条命令：</p>
<pre class=" language-text"><code class="language-text">sudo npm install -g hexo-cli</code></pre>
<p>安装时间有点久（真的很慢！），界面也没任何反应，<strong>耐心等待</strong>，安装完成后如下图。</p>
<p><img src="https://pic2.zhimg.com/80/v2-01e7fc8bb9280437deb437bf73a190a1_720w.jpg" alt="img"></p>
<h3 id="4-2-Hexo-初始化和本地预览"><a href="#4-2-Hexo-初始化和本地预览" class="headerlink" title="# 4.2 Hexo 初始化和本地预览"></a><strong># 4.2 Hexo 初始化和本地预览</strong></h3><p><strong>初始化并安装所需组件：</strong></p>
<pre class=" language-text"><code class="language-text">hexo init      # 初始化
npm install    # 安装组件</code></pre>
<p>完成后依次输入下面命令，<strong>启动本地服务器进行预览</strong>：</p>
<pre class=" language-text"><code class="language-text">hexo g   # 生成页面
hexo s   # 启动预览</code></pre>
<p><strong>访问</strong> <code>http://localhost:4000</code><strong>，出现 Hexo 默认页面，本地博客安装成功！</strong></p>
<p><img src="https://pic4.zhimg.com/80/v2-1c3baeecf1ef3bec5c8ef3f14639f68b_720w.jpg" alt="img"></p>
<p><strong>Tips：</strong>如果出现页面加载不出来，可能是端口被占用了。Ctrl+C 关闭服务器，运行 <code>hexo server -p 5000</code> 更改端口号后重试。</p>
<p>Hexo 博客文件夹目录结构如下：</p>
<p><img src="https://pic1.zhimg.com/80/v2-264c75c0e493ae8cc5f283567c64ff2c_720w.jpg" alt="img"></p>
<h2 id="5-部署-Hexo-到-GitHub-Pages"><a href="#5-部署-Hexo-到-GitHub-Pages" class="headerlink" title="5. 部署 Hexo 到 GitHub Pages"></a>5. 部署 Hexo 到 GitHub Pages</h2><p>本地博客测试成功后，就是上传到 GitHub 进行部署，使其能够在网络上访问。</p>
<p>首先<strong>安装 hexo-deployer-git</strong>：</p>
<pre class=" language-text"><code class="language-text">npm install hexo-deployer-git --save</code></pre>
<p>然后<strong>修改 _config.yml</strong> 文件末尾的 Deployment 部分，修改成如下：</p>
<pre class=" language-text"><code class="language-text">deploy:
  type: git
  repository: git@github.com:用户名/用户名.github.io.git
  branch: master</code></pre>
<p>完成后运行 <code>hexo d</code> 将网站上传部署到 GitHub Pages。</p>
<p>完成！这时访问我们的 GitHub 域名 <code>https://用户名.github.io</code> 就可以看到 Hexo 网站了。</p>
<h2 id="6-绑定域名（可选）"><a href="#6-绑定域名（可选）" class="headerlink" title="6. 绑定域名（可选）"></a>6. 绑定域名（可选）</h2><p>博客搭建完成使用的是 GitHub 的子域名（用户名.<a href="https://link.zhihu.com/?target=http%3A//github.io">http://github.io</a>），我们可以为 Hexo 博客绑定自己的域名替换 GitHub 域名，更加个性化和专业，也利于 SEO。</p>
<p>我们使用 <a href="https://link.zhihu.com/?target=https%3A//www.namesilo.com/%3Frid%3Dd27fa32do">Namesilo</a> 进行注册，便宜好用没啥套路，使用优惠码 <code>okoff</code> 优惠一美元，com 域名大概 50 块一年。</p>
<h3 id="6-1-域名注册和解析"><a href="#6-1-域名注册和解析" class="headerlink" title="# 6.1 域名注册和解析"></a><strong># 6.1 域名注册和解析</strong></h3><ul>
<li>域名注册和解析教程：<a href="https://zhuanlan.zhihu.com/p/33921436" target="_blank" rel="noopener">Namesilo 域名购买及使用教程</a></li>
</ul>
<p>按上面教程注册并解析域名，在 DNS 设置部分，删除自带的记录，然后添加 CNAME 记录将 www 域名解析指向 <code>用户名.github.io</code>。</p>
<p><img src="https://pic3.zhimg.com/80/v2-d5d37c8ad523d8ab5c7c200fabc9585e_720w.jpg" alt="img"></p>
<h3 id="6-2-绑定域名到-Hexo-博客"><a href="#6-2-绑定域名到-Hexo-博客" class="headerlink" title="# 6.2 绑定域名到 Hexo 博客"></a><strong># 6.2 绑定域名到 Hexo 博客</strong></h3><p>进入本地博客文件夹的 source 目录，打开记事本，里面输入自己的域名，如 <a href="http://www.example.com，保存名称为" target="_blank" rel="noopener">http://www.example.com，保存名称为</a> “CNAME”，格式为 “所有文件”（无 .txt 后缀）。</p>
<p>清除缓存等文件并重新发布网站：</p>
<pre class=" language-text"><code class="language-text">hexo clean   # 清除缓存文件等
hexo g       # 生成页面
hexo s       # 启动预览</code></pre>
<p>现在就可以使用自己的域名访问 Hexo 博客了。</p>
<h3 id="6-3-开启-HTTPS"><a href="#6-3-开启-HTTPS" class="headerlink" title="# 6.3 开启 HTTPS"></a><strong># 6.3 开启 HTTPS</strong></h3><p>配置自己的域名后，需要我们手动开启 HTTPS。打开博客所在 GitHub 仓库，Settings -&gt; 下拉找到 GitHub Pages -&gt; 勾选 Enforce HTTPS。</p>
<p><img src="https://pic4.zhimg.com/80/v2-54f8744afc9746884e6b3acecfc5f8cf_720w.jpg" alt="img"></p>
<p>HTTPS 证书部署成功需要一定时间，等大概几分钟再访问域名，就可以看到域名前面的小绿锁了，HTTPS 配置完成！</p>
<h2 id="7-开始使用"><a href="#7-开始使用" class="headerlink" title="7. 开始使用"></a>7. 开始使用</h2><h3 id="7-1-发布文章"><a href="#7-1-发布文章" class="headerlink" title="# 7.1 发布文章"></a><strong># 7.1 发布文章</strong></h3><p>进入博客所在目录，右键打开 Git Bash Here，创建博文：</p>
<pre class=" language-text"><code class="language-text">hexo new "My New Post"</code></pre>
<p>然后 source 文件夹中会出现一个 My New Post.md 文件，就可以使用 Markdown 编辑器在该文件中撰写文章了。</p>
<p>写完后运行下面代码将文章渲染并部署到 GitHub Pages 上完成发布。<strong>以后每次发布文章都是这两条命令。</strong></p>
<pre class=" language-text"><code class="language-text">hexo g   # 生成页面
hexo d   # 部署发布</code></pre>
<hr>
<p>也可以不使用命令自己创建 .md 文件，只需在文件开头手动加入如下格式 Front-matter 即可，写完后运行 <code>hexo g</code> 和 <code>hexo d</code> 发布。</p>
<pre class=" language-text"><code class="language-text">---
title: Hello World # 标题
date: 2019/3/26 hh:mm:ss # 时间
categories: # 分类
- Diary
tags: # 标签
- PS3
- Games
---

摘要
<!--more-->
正文</code></pre>
<h3 id="7-2-网站设置"><a href="#7-2-网站设置" class="headerlink" title="# 7.2 网站设置"></a><strong># 7.2 网站设置</strong></h3><p>包括网站名称、描述、作者、链接样式等，全部在网站目录下的 _config.yml 文件中，参考<a href="https://link.zhihu.com/?target=https%3A//hexo.io/zh-cn/docs/configuration">官方文档</a>按需要编辑。</p>
<p>注意：冒号后要加一个空格！</p>
<h3 id="7-3-更换主题"><a href="#7-3-更换主题" class="headerlink" title="# 7.3 更换主题"></a><strong># 7.3 更换主题</strong></h3><p>在 <a href="https://link.zhihu.com/?target=https%3A//hexo.io/themes/">Themes | Hexo</a> 选择一个喜欢的主题，比如 <a href="https://link.zhihu.com/?target=http%3A//theme-next.iissnan.com/getting-started.html">NexT</a>，进入网站目录打开 Git Bash Here 下载主题：</p>
<pre class=" language-text"><code class="language-text">git clone https://github.com/iissnan/hexo-theme-next themes/next</code></pre>
<p>然后修改 _config.yml 中的 theme 为新主题名称 next，发布。（有的主题需要将 _config.yml 替换为主题自带的，参考主题说明。）</p>
<h3 id="7-4-常用命令"><a href="#7-4-常用命令" class="headerlink" title="# 7.4 常用命令"></a><strong># 7.4 常用命令</strong></h3><pre class=" language-text"><code class="language-text">hexo new "name"       # 新建文章
hexo new page "name"  # 新建页面
hexo g                # 生成页面
hexo d                # 部署
hexo g -d             # 生成页面并部署
hexo s                # 本地预览
hexo clean            # 清除缓存和已生成的静态文件
hexo help             # 帮助</code></pre>
<h2 id="8-常见问题"><a href="#8-常见问题" class="headerlink" title="8 常见问题"></a>8 常见问题</h2><p><strong>1、Hexo 设置显示文章摘要，首页不显示全文</strong></p>
<p>Hexo 主页文章列表默认会显示文章全文，浏览时很不方便，可以在文章中插入 `` 进行分段。</p>
<p>该代码前面的内容会作为摘要显示，而后面的内容会替换为 “Read More” 隐藏起来。</p>
<p><img src="https://pic4.zhimg.com/80/v2-45701cf120ca77e6733ad30b40666f33_720w.jpg" alt="img"></p>
<p><strong>2、设置网站图标</strong></p>
<p>进入 themes/主题 文件夹，打开 _config.yml 配置文件，找到 favicon 修改，一般格式为：<code>favicon: 图标地址</code>。（不同主题可能略有差别）</p>
<p><strong>3、修改并部署后没有效果</strong></p>
<p>使用 <code>hexo clean</code> 清理后重新部署。</p>
<p><strong>4、开启 HTTPS 后访问网站显示连接不安全？</strong></p>
<p>证书还未部署生效，等待一会儿，清除浏览器缓存再试。</p>
<p><strong>5、Mac 安装 Hexo 报错无法安装</strong></p>
<p>Mac 用户需要管理员权限运行，使用 <code>sudo npm install -g hexo-cli</code> 命令安装。</p>
<p><strong>6、npm 下载速度慢，甚至完全没反应</strong></p>
<p>使用 npm 安装程序等待很久也没反应，或者下载速度很慢，可以更换 npm 源为国内 npm 镜像。</p>
<p>临时更换方法：在 npm 安装命令后面加上：</p>
<pre class=" language-text"><code class="language-text">--registry https://registry.npm.taobao.org </code></pre>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>Hexo 是一种纯静态的博客，我们必须要在本地完成文章的编辑再部署到 GitHub 上，依赖于本地环境。不能像 WordPress 或 Typecho 那样的动态博客一样能直接在浏览器中完成撰文和发布。</p>
<p>可以说是一种比较极客的写博客方式，但是优势也是明显的——免费稳定省心，比较适合爱折腾研究的用户，或者没有在线发文需求的朋友。</p>
<p>关于具体hexo博客的设置，这个博文讲的非常细，非常好。</p>
<p>地址：Hexo+Github博客搭建完全教程 | 洪卫の博客<br><a href="https://sunhwee.com/posts/6e8839eb.html" target="_blank" rel="noopener">https://sunhwee.com/posts/6e8839eb.html</a></p>
</font>]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>latex使用教程</title>
    <url>/2020/04/27/latex-shiyong/</url>
    <content><![CDATA[<h2 id="优雅的-LaTeX"><a href="#优雅的-LaTeX" class="headerlink" title="优雅的 LaTeX"></a><font size=4>优雅的 LaTeX</h2><p>学会latex,从此跟office say byebye!<a id="more"></a><br>有很多 Geeks 或者 LaTeX’s Fanatical Fans 过分地强调了 LaTeX 的一些并非重点的特性，以至于很多初学者会觉得 LaTeX 很神秘很复杂，从而引发了初学者的畏难情绪甚至是负面情绪。尽管这些 Fans 说得并没有错，我是说在事实上，但是他们的表达方式和内心态度却间接阻碍了 LaTeX 的发展，我想这也是和他们的初衷相悖的。</p>
<p>我曾经也受到过这些言论的影响，但幸运的事，至今为止我已经越过了这些障碍，并更加坚信了他们所言（LaTeX 的优点）的正确性。因此我想以我自己的方式，向更多的人介绍 LaTeX —— <strong>这个优雅，但有着自己高傲，却绝不复杂甚至神秘的东西</strong>。</p>
<h2 id="关于编辑器的简单介绍"><a href="#关于编辑器的简单介绍" class="headerlink" title="关于编辑器的简单介绍"></a>关于编辑器的简单介绍</h2><p>TeX 的源代码是后缀为 <code>.tex</code> 的纯文本文件。使用任意纯文本编辑器，都可以修改 <code>.tex</code> 文件：包括 Windows 自带的记事本程序，也包括专为 TeX 设计的编辑器（TeXworks, TeXmaker, TeXstudio, WinEdt 等），还包括一些通用的文本编辑器（Sublime Text, Atom, Visual Studio Code 等）。你可以在这些能够编辑纯文本文件的编辑器中任选其一作为你的 TeX 编辑器，也可以使用 TeX 发行自带的编辑器。最流行的两个 TeX 发行（TeX Live 和 MiKTeX）都带有 TeXworks 编辑器。</p>
<blockquote>
<p>所谓 TeX 发行，也叫 TeX 发行版、TeX 系统或者 TeX 套装，指的是包括 TeX 系统的各种可执行程序，以及他们执行时需要的一些辅助程序和宏包文档的集合。</p>
</blockquote>
<p>本文只介绍 TeXworks 的使用，原因有以下一些：</p>
<ul>
<li>TeXworks 是 TeX Live 自带的编辑器，而 TeX Live 是 TeX User Group 出品的跨平台发行版，各个操作系统都可以使用；</li>
<li>几乎所有 TeX 发行版都带有 TeXworks；</li>
<li>TeXworks 十分简洁，除了最基本的功能之外，没有其他复杂的东西，能使你将注意力集中在 TeX 的学习上。</li>
</ul>
<h3 id="启动-TeXworks"><a href="#启动-TeXworks" class="headerlink" title="启动 TeXworks"></a>启动 TeXworks</h3><p>启动 TeXworks 很简单，你可以在 Windows 启动对话框中输入 texworks 按回车。具体步骤是：</p>
<ul>
<li>按下键盘上的 Windows 徽标键，同时按下 R 键 —— <code>+ R</code>;</li>
<li>键入 <code>texworks</code>；</li>
<li>回车。</li>
</ul>
<p>如果这样打不开 TeXworks，你可能需要从开始菜单找到 TeXworks 图标以启动；或者进入 TeX 系统的安装目录找到 TeXworks。</p>
<p>启动之后，TeXworks 的界面，会默认占据你屏幕的左半边，右半边留空。效果如下图：</p>
<p><img src="https://liam.page/uploads/teaching/LaTeX/figures/818901c1jw1e44dgufrnpj20iy0kimxz.jpg" alt="img"></p>
<p>图中空白的部分，就是输入编辑文本的编辑框；在编辑框的右下角，显示有三个按钮，最左边的是换行符模式，中间是<em>编码模式</em> ，右边标示当前光标所在位置；编辑框的上方是工具栏，工具栏的右半部分使大家熟悉的功能（新建、打开、保存、撤消、恢复、剪切、复制、黏贴、查找、替换），工具栏的左边则是<em>编译按钮</em> （TeXworks 也称其为「排版工具」）；工具栏在往上，则是菜单栏，此处按下不表。</p>
<blockquote>
<p>Windows，Unix 等操作系统对待「换行符」是有不同的。索性 TeXworks 为我们做了足够的提示，方面我们的选择（点击一下那个按钮就知道了）。一般而言，保持默认即可。</p>
<p>字符（包括英文字符和中文字符）在计算机中，经过编码以二进制的形式存储在计算机中。如果编辑器编码和计算机内部编码不一致，则会导致所谓「乱码」的现象。TeXworks 默认使用 UTF8 编码，在我们的文档中不需要进行任何更改，而对于一些其他的文档可能需要按照要求更改编码。</p>
</blockquote>
<h3 id="排版工具"><a href="#排版工具" class="headerlink" title="排版工具"></a>排版工具</h3><p>TeXworks 为我们预设了若干排版工具（pdfTeX, pdfLaTeX, XeTeX, XeLaTeX 等），本文主要用到其中的 <strong><em>XeLaTeX\</em></strong>。关于这些排版工具的细节，讲解起来会有些复杂。当你对 TeX 系统相当熟悉之后，也可以不使用 TeXworks 预设的工具，自己配置排版工具。</p>
<p>TeXworks 默认的排版工具是 pdfLaTeX。如果你希望更改这个默认值，可以在<em>编辑 - 首选项 - 排版 - 处理工具 - 默认</em> 中修改。</p>
<h2 id="第一篇文档"><a href="#第一篇文档" class="headerlink" title="第一篇文档"></a>第一篇文档</h2><h3 id="Hello-world"><a href="#Hello-world" class="headerlink" title="Hello, world!"></a>Hello, world!</h3><p>在编辑框中，输入如下内容：</p>
<pre><code>helloworld.tex
\documentclass{article}
% 这里是导言区
\begin{document}
Hello, world!
\end{document}</code></pre><p>将文档保存在你希望的位置，然后在排版工具的下拉选框中选中 <strong>XeLaTeX</strong> 后，按下绿色的编译按钮。一会儿，如果没有意外，屏幕的右边就会出现编译之后结果。如下图：</p>
<p><img src="https://liam.page/uploads/teaching/LaTeX/figures/818901c1jw1e44e55rnkkj211y0kmwgi.jpg" alt="img"></p>
<blockquote>
<p>请注意，由于操作系统编码和 TeX 内部实现的限制，在 Windows 平台上，TeX 涉及到的文件（包括 <code>.tex</code>, <code>.jpg</code> 等各类文件）都不要包含中文名字。否则，在编译时可能会因为编码问题导致稀奇古怪的报错。</p>
</blockquote>
<p>很容易发现，输入进编辑框的五行文字，在最终输出的 pdf 档中只显示了 1 行。事实上，交付 TeX 处理的文档内容，并不会全部输出。</p>
<p>此处的第一行 <code>\documentclass{article}</code> 中包含了一个控制序列（或称命令/标记）。所谓控制序列，是以反斜杠 <code>\</code> 开头，以第一个<strong><em>空格或非字母\</em></strong> 的字符结束的一串文字。它们不被输出，但是他们会影响输出文档的效果。这里的控制序列是 <code>documentclass</code>，它后面紧跟着的 <code>{article}</code> 代表这个控制序列有一个必要的参数，该参数的值为 <code>article</code>。这个控制序列的作用，是调用名为 <code>article</code> 的文档类。</p>
<p><strong><em>请注意，TeX 对控制序列的大小写是敏感的\</em></strong>。</p>
<blockquote>
<p>部分控制序列还有被方括号 <code>[]</code> 包括的可选参数。</p>
<p>所谓文档类，即是 TeX 系统预设的（或是用户自定的）一些格式的集合。不同的文档类在输出效果上会有差别。</p>
</blockquote>
<p>此处的第二行以 <code>%</code> 开头。TeX 以百分号 <code>%</code> 作为注释标记。具体来说，TeX 会忽略从 <code>%</code> 开始到当前行末尾的所有内容。这些内容不会被输出，也不影响最终排版效果，只供人类阅读。若要输出 <code>%</code> 字符本身，则需要在 <code>%</code> 之前加上反斜杠 <code>\</code> 进行转义（escape）。例如：</p>
<pre><code>今年的净利润为 20\%，比去年高。</code></pre><p>此处 <code>%</code> 被当做正常的百分号处理，其后的文字也将被正常输出。</p>
<p>我们继续分析第一篇文档的内容。在注释行之后出现了控制序列 <code>begin</code>。这个控制序列总是与 <code>end</code> 成对出现。这两个控制序列以及他们中间的内容被称为「环境」；它们之后的第一个必要参数总是<strong>一致的</strong>，被称为环境名。</p>
<p>只有在 <code>document</code> 环境中的内容，才会被正常输出到文档中去或是作为控制序列对文档产生影响。也就是说，在 <code>\end{document}</code> 之后插入任何内容都是无效的。</p>
<p>从 <code>\documentclass{article}</code> 开始到 <code>\begin{document}</code> 之前的部分被称为导言区。你可以将导言区理解为是对整篇文档进行设置的区域——在导言区出现的控制序列，往往会影响整篇文档的格式。</p>
<blockquote>
<p>比如，我们通常在导言区设置页面大小、页眉页脚样式、章节标题样式等等。</p>
</blockquote>
<h3 id="实现中英文混排"><a href="#实现中英文混排" class="headerlink" title="实现中英文混排"></a>实现中英文混排</h3><blockquote>
<p>关于 LaTeX 的中文支持，首先要说的是：在现在，一切教你使用 <code>CJK</code> 宏包的模板、人、网页、书，都是糟糕的、有害的、恼人的、邪恶的和应该摒弃的。</p>
</blockquote>
<p>成功编译输出第一个文档之后，中国 TeX 用户面临的第二个普遍问题大概就是「实现中英文混排」了。众所周知，TeX 系统是高教授开发的。在 TeX 开发当初并没有考虑到亚洲文字的问题。因此早期的 TeX 系统并不能直接支持中文，必须要用其他工具先处理一下（或者是一些宏包之类的）。但是现在，XeTeX 原生支持 Unicode，并且可以方便地调用系统字体。可以说解决了困扰中国 TeX 使用者多年的大问题。至此，我们只需要使用几个简单的宏包，就能完成中文支持了。</p>
<p>所谓宏包，就是一系列控制序列的合集。这些控制序列太常用，以至于人们会觉得每次将他们写在导言区太过繁琐，于是将他们打包放在同一个文件中，成为所谓的宏包（台湾方面称之为「巨集套件」）。<code>\usepackage{}</code> 可以用来调用宏包。</p>
<p>除去中文支持，中文的版式处理和标点禁则也是不小的挑战。好在由吴凌云和江疆牵头，现在主要由刘海洋、李清和我维护的 <code>CTeX</code> 宏集一次性解决了这些问题。<code>CTeX</code> 宏集的优势在于，它能适配于多种编译方式；在内部处理好了中文和中文版式的支持，隐藏了这些细节；并且，提供了不少中文用户需要的功能接口。我们来看如何使用 <code>CTeX</code> 宏集来处理中英文混排的文档。</p>
<blockquote>
<p>请注意，<code>CTeX</code> 宏集和 <code>CTeX</code> 套装是两个不同的东西。<code>CTeX</code> 宏集本质是 LaTeX 宏的集合，包含若干文档类（<code>.cls</code> 文件）和宏包（<code>.sty</code> 文件）。<code>CTeX</code> 套装是一个<strong>过时的</strong> TeX 系统。</p>
<p>新版 <code>CTeX</code> 宏集的默认能够自动检测用户的操作系统，并为之配置合适的字库。对于 Windows 用户、Mac OS X 用户和 Linux 用户，都无需做任何配置，就能使用 <code>CTeX</code> 宏集来排版中文。[2015-05-20 更新]</p>
</blockquote>
<p>在 TeXworks 编辑框中输入以下内容，<strong>以 UTF-8 编码保存，使用 XeLaTeX 编译</strong>：</p>
<pre><code>EC-mix.tex
\documentclass[UTF8]{ctexart}
\begin{document}
你好，world!
\end{document}</code></pre><p>如果没有意外，你将会看到类似下图的输出结果。</p>
<p><img src="https://liam.page/uploads/teaching/LaTeX/figures/818901c1jw1e44g5azwaej20j00kimy3.jpg" alt="img"></p>
<p>相较于之前的例子，这份代码只有细微的差异：</p>
<ol>
<li>文档类从 <code>article</code> 变为 <code>ctexart</code>；</li>
<li>增加了文档类选项 <code>UTF8</code>。</li>
</ol>
<blockquote>
<p>你也可以直接使用 <code>xeCJK</code> 宏包来支持中英文混排。不过大多数情况是不推荐这样做的。因此，如果你能抑制住你小小的好奇心，可以暂时略过这一段，回头再看不迟。<code>:)</code></p>
<p>在 TeXworks 编辑框中输入以下内容，保存，使用 XeLaTeX 编译：</p>
<pre><code>xeCJK-demo.tex
\documentclass{article}
\usepackage{xeCJK} %调用 xeCJK 宏包
\setCJKmainfont{SimSun} %设置 CJK 主字体为 SimSun （宋体）
\begin{document}
你好，world!
\end{document}</code></pre></blockquote>
<blockquote>
<p>如果一切顺利，你将会在屏幕右边的窗口，看见类似下图的输出结果。<br><img src="https://liam.page/uploads/teaching/LaTeX/figures/818901c1jw1e44g5azwaej20j00kimy3.jpg" alt="img"></p>
<p>除了 “document” 环境中同时出现了中文和英文，和最原始的 Hello, world! 不同点在于，导言区中多出了两条控制序列。他们的作用我已经用注释标出了。</p>
<p><code>\setCJKmainfont{·}</code>是定义在 “xeCJK” 宏包中的控制序列，它可以用来设置 CJK 主字体。</p>
<p>如果你的 TeX 系统提示找不到字体，请按以下提示操作。</p>
<p>非 Mac OS X 用户请按照如下步骤打开系统命令行（*nix系统请打开终端）：</p>
<ul>
<li>按下<code>+ R</code>；</li>
<li>键入<code>cmd</code>, 回车。</li>
</ul>
<p>在系统命令行中输入如下命令：</p>
<pre><code>fc-list :lang=zh-cn &gt; C:\font_zh-cn.txt</code></pre><p>（相信使用 *nix 的你，一定知道如何修改上述命令达到你想要的效果）</p>
<p>打开 C 盘根目录下的 <code>C:\font_zh-cn.txt</code> 纯文本文档，里面的内容就是你当前系统可用的全部中文字体，形如：</p>
<p><img src="https://liam.page/uploads/teaching/LaTeX/figures/818901c1jw1e44gmvz7yuj20i40actcb.jpg" alt="img"></p>
<p>每一个小黑框之间的内容，就对应着一个可用的字体。这些小黑框实际上是换行符，但是由于 Windows 系统的原因，他们没有被正常显示。如果看着不爽，你可以尝试用 TeXworks 打开这个文件查看（放心，能够打开的）。以下是我用 gVim 打开的效果：</p>
<p><img src="https://liam.page/uploads/teaching/LaTeX/figures/818901c1jw1e44gpsi9fpj20km0f478v.jpg" alt="img"></p>
<p>其中的每一行，都代表着一个可用的字体。其形式如下：</p>
<pre><code>&lt;字体文件路径&gt;: &lt;字体标示名1&gt;, &lt;字体表示名2&gt;:Style=&lt;字体类型&gt;</code></pre><p>我们可以看到图中的倒数第四行</p>
<pre><code>C:/WINDOWS/fonts/simsun.ttc: 宋体,SimSun:style=Regular</code></pre><p>出现了之前文档里调用的字体<code>SimSun</code>，此处表明该字体有两个表示名：<code>宋体</code>和<code>SimSun</code>，我们在<code>\setCJKmainfont{·}</code>中填入任意一个都有同样的效果。</p>
<p>因此，如果之前的文档无法编译通过，请在你的操作系统字体中，选取一个自己喜欢的，将它的字体表示名填入到<code>\setCJKmainfont{·}</code>中去。</p>
</blockquote>
<h2 id="组织你的文章"><a href="#组织你的文章" class="headerlink" title="组织你的文章"></a>组织你的文章</h2><h3 id="作者、标题、日期"><a href="#作者、标题、日期" class="headerlink" title="作者、标题、日期"></a>作者、标题、日期</h3><p>保存并用 XeLaTeX 编译如下文档，查看效果：</p>
<pre><code>\documentclass[UTF8]{ctexart}
\title{你好，world!}
\author{Liam}
\date{\today}
\begin{document}
\maketitle
你好，world!
\end{document}</code></pre><p>导言区复杂了很多，但和之前的文档主要的区别只有一处：定义了标题、作者、日期。</p>
<p>在 <code>document</code> 环境中，除了原本的<code>你好，world!</code>，还多了一个控制序列 <code>maketitle</code>。这个控制序列能将在导言区中定义的标题、作者、日期按照预定的格式展现出来。</p>
<blockquote>
<p>使用<code>titling</code>宏包可以修改上述默认格式。参考<a href="http://texdoc.net/texmf-dist/doc/latex/titling/titling.pdf" target="_blank" rel="noopener">TeXdoc</a>。</p>
</blockquote>
<h3 id="章节和段落"><a href="#章节和段落" class="headerlink" title="章节和段落"></a>章节和段落</h3><p>保存并用 XeLaTeX 编译如下文档，查看效果：</p>
<pre><code>\documentclass[UTF8]{ctexart}
\title{你好，world!}
\author{Liam}
\date{\today}
\begin{document}
\maketitle
\section{你好中国}
中国在East Asia.
\subsection{Hello Beijing}
北京是capital of China.
\subsubsection{Hello Dongcheng District}
\paragraph{Tian&#39;anmen Square}
is in the center of Beijing
\subparagraph{Chairman Mao}
is in the center of 天安门广场。
\subsection{Hello 山东}
\paragraph{山东大学} is one of the best university in 山东。
\end{document}</code></pre><p>在文档类 <code>article</code>/<code>ctexart</code> 中，定义了五个控制序列来调整行文组织结构。他们分别是</p>
<ul>
<li><code>\section{·}</code></li>
<li><code>\subsection{·}</code></li>
<li><code>\subsubsection{·}</code></li>
<li><code>\paragraph{·}</code></li>
<li><code>\subparagraph{·}</code></li>
</ul>
<blockquote>
<p>在<code>report</code>/<code>ctexrep</code>中，还有<code>\chapter{·}</code>；在文档类<code>book</code>/<code>ctexbook</code>中，还定义了<code>\part{·}</code>。</p>
</blockquote>
<h3 id="插入目录"><a href="#插入目录" class="headerlink" title="插入目录"></a>插入目录</h3><p>在上一节的文档中，找到 <code>\maketitle</code>，在它的下面插入控制序列 <code>\tableofcontents</code>，保存并用 XeLaTeX 编译<strong>两次</strong>，观察效果：</p>
<pre><code>\documentclass[UTF8]{ctexart}
\title{你好，world!}
\author{Liam}
\date{\today}
\begin{document}
\maketitle
\tableofcontents
\section{你好中国}
中国在East Asia.
\subsection{Hello Beijing}
北京是capital of China.
\subsubsection{Hello Dongcheng District}
\paragraph{Tian&#39;anmen Square}
is in the center of Beijing
\subparagraph{Chairman Mao}
is in the center of 天安门广场。
\subsection{Hello 山东}
\paragraph{山东大学} is one of the best university in 山东。
\end{document}</code></pre><blockquote>
<p>试试交换 <code>\maketitle</code> 和 <code>\tableofcontents</code> 的顺序，看看会发生什么，想想为什么。</p>
</blockquote>
<p>请注意，在「你好中国」这一节中，两次「中国在East Asia.」中夹有一个空行，但输出却只有一个换行并没有空行。这是因为 LaTeX 将一个换行当做是一个简单的空格来处理，如果需要换行另起一段，则需要用两个换行（一个空行）来实现。</p>
<h2 id="插入数学公式"><a href="#插入数学公式" class="headerlink" title="插入数学公式"></a>插入数学公式</h2><p>首先恭喜你看到这里。如果前面的几个文档你都认真编译过了，那么你已经可以胜任许多文档的排版工作。下面我们进入 LaTeX 最为犀利的部分。</p>
<p>这部分的演示中，为了节省篇幅，将取消导言区中中文支持的部分。在实际使用中，你只需要将导言区中的相关部分加上，就可以同时使用中文和编写数学公式了。</p>
<p>为了使用 AMS-LaTeX 提供的数学功能，我们需要在导言区加载 <code>amsmath</code> 宏包：</p>
<pre><code>\usepackage{amsmath}</code></pre><h3 id="数学模式"><a href="#数学模式" class="headerlink" title="数学模式"></a>数学模式</h3><p>LaTeX 的数学模式有两种：行内模式 (inline) 和行间模式 (display)。前者在正文的行文中，插入数学公式；后者独立排列单独成行，并自动居中。</p>
<p>在行文中，使用 <code>$ ... $</code> 可以插入行内公式，使用 <code>\[ ... \]</code> 可以插入行间公式，如果需要对行间公式进行编号，则可以使用 <code>equation</code> 环境：</p>
<pre><code>\begin{equation}
...
\end{equation}</code></pre><blockquote>
<p>行内公式也可以使用 <code>\(...\)</code> 或者 <code>\begin{math} ... \end{math}</code> 来插入，但略显麻烦。<br>无编号的行间公式也可以使用 <code>\begin{displaymath} ... \end{displaymath}</code> 或者 <code>\begin{equation*} ... \end{equation*}</code> 来插入，但略显麻烦。（<code>equation*</code> 中的 <code>*</code> 表示环境不编号）<br>也有 plainTeX 风格的 <code>$$ ... $$</code> 来插入不编号的行间公式。但是在 LaTeX 中这样做会改变行文的默认行间距，不推荐。</p>
</blockquote>
<h3 id="上下标"><a href="#上下标" class="headerlink" title="上下标"></a>上下标</h3><p>示例代码（请保存后，使用 XeLaTeX 编译，查看效果）：</p>
<pre><code>\documentclass{article}
\usepackage{amsmath}
\begin{document}
Einstein &#39;s $E=mc^2$.

\[ E=mc^2. \]

\begin{equation}
E=mc^2.
\end{equation}
\end{document}</code></pre><p>在这里提一下关于公式标点使用的规范。行内公式和行间公式对标点的要求是不同的：行内公式的标点，应该放在数学模式的限定符之外，而行间公式则应该放在数学模式限定符之内。</p>
<p>在数学模式中，需要表示上标，可以使用 <code>^</code> 来实现（下标则是 <code>_</code>）。<strong>它默认只作用于之后的一个字符</strong>，如果想对连续的几个字符起作用，请将这些字符用花括号 <code>{}</code> 括起来，例如：</p>
<pre><code>\[ z = r\cdot e^{2\pi i}. \]</code></pre><h3 id="根式与分式"><a href="#根式与分式" class="headerlink" title="根式与分式"></a>根式与分式</h3><p>根式用 <code>\sqrt{·}</code> 来表示，分式用 <code>\frac{·}{·}</code> 来表示（第一个参数为分子，第二个为分母）。</p>
<p>示例代码（请保存后，使用 XeLaTeX 编译，查看效果）：</p>
<pre><code>\documentclass{article}
\usepackage{amsmath}
\begin{document}
$\sqrt{x}$, $\frac{1}{2}$.

\[ \sqrt{x}, \]

\[ \frac{1}{2}. \]
\end{document}</code></pre><p>可以发现，在行间公式和行内公式中，分式的输出效果是有差异的。如果要强制行内模式的分式显示为行间模式的大小，可以使用 <code>\dfrac</code>, 反之可以使用 <code>\tfrac</code>。</p>
<blockquote>
<p>在行内写分式，你可能会喜欢 <code>xfrac</code> 宏包提供的 <code>\sfrac</code> 命令的效果。</p>
</blockquote>
<blockquote>
<p>排版繁分式，你应该使用 <code>\cfrac</code> 命令。</p>
</blockquote>
<h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><p>一些小的运算符，可以在数学模式下直接输入；另一些需要用控制序列生成，如</p>
<pre><code>\[ \pm\; \times \; \div\; \cdot\; \cap\; \cup\;
\geq\; \leq\; \neq\; \approx \; \equiv \]</code></pre><p>连加、连乘、极限、积分等大型运算符分别用 <code>\sum</code>, <code>\prod</code>, <code>\lim</code>, <code>\int</code> 生成。他们的上下标在行内公式中被压缩，以适应行高。我们可以用 <code>\limits</code> 和 <code>\nolimits</code> 来强制显式地指定是否压缩这些上下标。例如：</p>
<pre><code>$ \sum_{i=1}^n i\quad \prod_{i=1}^n $
$ \sum\limits _{i=1}^n i\quad \prod\limits _{i=1}^n $
\[ \lim_{x\to0}x^2 \quad \int_a^b x^2 dx \]
\[ \lim\nolimits _{x\to0}x^2\quad \int\nolimits_a^b x^2 dx \]</code></pre><p>多重积分可以使用 <code>\iint</code>, <code>\iiint</code>, <code>\iiiint</code>, <code>\idotsint</code> 等命令输入。</p>
<pre><code>\[ \iint\quad \iiint\quad \iiiint\quad \idotsint \]</code></pre><h3 id="定界符（括号等）"><a href="#定界符（括号等）" class="headerlink" title="定界符（括号等）"></a>定界符（括号等）</h3><p>各种括号用 <code>()</code>, <code>[]</code>, <code>\{\}</code>, <code>\langle\rangle</code> 等命令表示；注意花括号通常用来输入命令和环境的参数，所以在数学公式中它们前面要加 <code>\</code>。因为 LaTeX 中 <code>|</code> 和 <code>\|</code> 的应用过于随意，amsmath 宏包推荐用 <code>\lvert\rvert</code> 和 <code>\lVert\rVert</code> 取而代之。</p>
<p>为了调整这些定界符的大小，amsmath 宏包推荐使用 <code>\big</code>, <code>\Big</code>, <code>\bigg</code>, <code>\Bigg</code> 等一系列命令放在上述括号前面调整大小。</p>
<blockquote>
<p>有时你可能会觉得 amsmath 宏包提供的定界符放大命令不太够用。通常这意味着你的公式太过复杂。此时你应当首先考虑将公式中的部分提出去，以字母符号代替以简化公式。</p>
</blockquote>
<pre><code>\[ \Biggl(\biggl(\Bigl(\bigl((x)\bigr)\Bigr)\biggr)\Biggr) \]
\[ \Biggl[\biggl[\Bigl[\bigl[[x]\bigr]\Bigr]\biggr]\Biggr] \]
\[ \Biggl \{\biggl \{\Bigl \{\bigl \{\{x\}\bigr \}\Bigr \}\biggr \}\Biggr\} \]
\[ \Biggl\langle\biggl\langle\Bigl\langle\bigl\langle\langle x
\rangle\bigr\rangle\Bigr\rangle\biggr\rangle\Biggr\rangle \]
\[ \Biggl\lvert\biggl\lvert\Bigl\lvert\bigl\lvert\lvert x
\rvert\bigr\rvert\Bigr\rvert\biggr\rvert\Biggr\rvert \]
\[ \Biggl\lVert\biggl\lVert\Bigl\lVert\bigl\lVert\lVert x
\rVert\bigr\rVert\Bigr\rVert\biggr\rVert\Biggr\rVert \]</code></pre><p><img src="https://liam.page/uploads/teaching/LaTeX/figures/818901c1jw1e44jk66wwfj204x0a4aa0.jpg" alt="img"></p>
<h3 id="省略号"><a href="#省略号" class="headerlink" title="省略号"></a>省略号</h3><p>省略号用 <code>\dots</code>, <code>\cdots</code>, <code>\vdots</code>, <code>\ddots</code> 等命令表示。<code>\dots</code> 和 <code>\cdots</code> 的纵向位置不同，前者一般用于有下标的序列。</p>
<pre><code>\[ x_1,x_2,\dots ,x_n\quad 1,2,\cdots ,n\quad
\vdots\quad \ddots \]</code></pre><h3 id="矩阵"><a href="#矩阵" class="headerlink" title="矩阵"></a>矩阵</h3><p><code>amsmath</code> 的 <code>pmatrix</code>, <code>bmatrix</code>, <code>Bmatrix</code>, <code>vmatrix</code>, <code>Vmatrix</code> 等环境可以在矩阵两边加上各种分隔符。</p>
<pre><code>\[ \begin{pmatrix} a&amp;b\\c&amp;d \end{pmatrix} \quad
\begin{bmatrix} a&amp;b\\c&amp;d \end{bmatrix} \quad
\begin{Bmatrix} a&amp;b\\c&amp;d \end{Bmatrix} \quad
\begin{vmatrix} a&amp;b\\c&amp;d \end{vmatrix} \quad
\begin{Vmatrix} a&amp;b\\c&amp;d \end{Vmatrix} \]</code></pre><p>效果图：</p>
<p><img src="https://liam.page/uploads/teaching/LaTeX/figures/818901c1jw1e44jpqbz2aj208k024744.jpg" alt="img"></p>
<p>使用 <code>smallmatrix</code> 环境，可以生成行内公式的小矩阵。</p>
<pre><code>Marry has a little matrix $ ( \begin{smallmatrix} a&amp;b\\c&amp;d \end{smallmatrix} ) $.</code></pre><p>效果图：</p>
<p><img src="https://liam.page/uploads/teaching/LaTeX/figures/818901c1jw1e44jsd9ldbj20680200si.jpg" alt="img"></p>
<h3 id="多行公式"><a href="#多行公式" class="headerlink" title="多行公式"></a>多行公式</h3><p>有的公式特别长，我们需要手动为他们换行；有几个公式是一组，我们需要将他们放在一起；还有些类似分段函数，我们需要给它加上一个左边的花括号。</p>
<h4 id="长公式"><a href="#长公式" class="headerlink" title="长公式"></a>长公式</h4><h5 id="不对齐"><a href="#不对齐" class="headerlink" title="不对齐"></a>不对齐</h5><p>无须对齐的长公式可以使用 <code>multline</code> 环境。</p>
<pre><code>\begin{multline}
x = a+b+c+{} \\
d+e+f+g
\end{multline}</code></pre><p>效果：</p>
<p><img src="https://liam.page/uploads/teaching/LaTeX/figures/818901c1jw1e44jzfychej20dv02sjr6.jpg" alt="img"></p>
<p>如果不需要编号，可以使用 <code>multline*</code> 环境代替。</p>
<h5 id="对齐"><a href="#对齐" class="headerlink" title="对齐"></a>对齐</h5><p>需要对齐的公式，可以使用 <code>aligned</code> <em>次环境</em>来实现，它必须包含在数学环境之内。</p>
<pre><code>\[\begin{aligned}
x ={}&amp; a+b+c+{} \\
&amp;d+e+f+g
\end{aligned}\]</code></pre><p>效果图：</p>
<p><img src="https://liam.page/uploads/teaching/LaTeX/figures/818901c1jw1e44k2acde4j205g02ft8h.jpg" alt="img"></p>
<h4 id="公式组"><a href="#公式组" class="headerlink" title="公式组"></a>公式组</h4><p>无需对齐的公式组可以使用 <code>gather</code> 环境，需要对齐的公式组可以使用 <code>align</code> 环境。他们都带有编号，如果不需要编号可以使用带星花的版本。</p>
<pre><code>\begin{gather}
a = b+c+d \\
x = y+z
\end{gather}
\begin{align}
a &amp;= b+c+d \\
x &amp;= y+z
\end{align}</code></pre><p>效果：</p>
<p><img src="https://liam.page/uploads/teaching/LaTeX/figures/818901c1jw1e44k5od3xaj209u04lweb.jpg" alt="img"></p>
<blockquote>
<p>请注意，不要使用 <code>eqnarray</code> 环境。原因可以参考：</p>
</blockquote>
<blockquote>
<ul>
<li><a href="http://www.math.uiuc.edu/~hildebr/tex/displays.html" target="_blank" rel="noopener"><code>eqnarray</code> 是糟糕的</a></li>
<li><a href="http://texblog.net/latex-archive/maths/eqnarray-align-environment/" target="_blank" rel="noopener"><code>eqnarray</code> 是有害的</a></li>
<li><a href="http://www.tex.ac.uk/cgi-bin/texfaq2html?label=eqnarray" target="_blank" rel="noopener"><code>eqnarray</code> 是恼人的</a></li>
<li><a href="http://www.tug.org/pracjourn/2006-4/madsen/" target="_blank" rel="noopener"><code>eqnarray</code> 是邪恶的</a></li>
</ul>
</blockquote>
<h4 id="分段函数"><a href="#分段函数" class="headerlink" title="分段函数"></a>分段函数</h4><p>分段函数可以用<code>cases</code>次环境来实现，它必须包含在数学环境之内。</p>
<pre><code>\[ y= \begin{cases}
-x,\quad x\leq 0 \\
x,\quad x&gt;0
\end{cases} \]</code></pre><p>效果图：</p>
<p><img src="https://liam.page/uploads/teaching/LaTeX/figures/818901c1jw1e44k7zto1wj205o01pt8i.jpg" alt="img"></p>
<h3 id="辅助工具"><a href="#辅助工具" class="headerlink" title="辅助工具"></a>辅助工具</h3><p>站在我个人的角度，我建议 LaTeX 用户应当尽可能避免使用辅助工具输入数学公式。但对于急用的初学者而言，适当地使用辅助工具（而不形成依赖）也是有一些收益的。因此这里介绍一些关于数学公式的辅助工具。</p>
<ul>
<li><a href="https://mathpix.com/" target="_blank" rel="noopener">https://mathpix.com/</a> 能够通过热键呼出截屏，而后将截屏中的公式转换成 LaTeX 数学公式的代码。</li>
<li><a href="http://detexify.kirelabs.org/classify.html" target="_blank" rel="noopener">http://detexify.kirelabs.org/classify.html</a> 允许用户用鼠标在输入区绘制单个数学符号的样式，系统会根据样式返回对应的 LaTeX 代码（和所需的宏包）。这在查询不熟悉的数学符号时特别有用。</li>
</ul>
<h2 id="插入图片和表格"><a href="#插入图片和表格" class="headerlink" title="插入图片和表格"></a>插入图片和表格</h2><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><p>关于 LaTeX 插图，首先要说的是：「LaTeX 只支持 <code>.eps</code> 格式的图档」这个说法是错误的。</p>
<p>在 LaTeX 中插入图片，有很多种方式。最好用的应当属利用 <code>graphicx</code> 宏包提供的 <code>\includegraphics</code> 命令。比如你在你的 TeX 源文件同目录下，有名为 <code>a.jpg</code> 的图片，你可以用这样的方式将它插入到输出文档中：</p>
<pre><code>\documentclass{article}
\usepackage{graphicx}
\begin{document}
\includegraphics{a.jpg}
\end{document}</code></pre><p>图片可能很大，超过了输出文件的纸张大小，或者干脆就是你自己觉得输出的效果不爽。这时候你可以用 <code>\includegraphics</code> 控制序列的可选参数来控制。比如</p>
<pre><code>\includegraphics[width = .8\textwidth]{a.jpg}</code></pre><p>这样图片的宽度会被缩放至页面宽度的百分之八十，图片的总高度会按比例缩放。</p>
<blockquote>
<p><code>\includegraphics</code> 控制序列还有若干其他的可选参数可供使用，一般并用不到。感兴趣的话，可以去查看<a href="http://texdoc.net/texmf-dist/doc/latex/graphics/graphicx.pdf" target="_blank" rel="noopener">该宏包的文档</a>。</p>
</blockquote>
<h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p><code>tabular</code> 环境提供了最简单的表格功能。它用 <code>\hline</code> 命令表示横线，在列格式中用 <code>|</code> 表示竖线；用 <code>&amp;</code> 来分列，用 <code>\\</code> 来换行；每列可以采用居左、居中、居右等横向对齐方式，分别用 <code>l</code>、<code>c</code>、<code>r</code> 来表示。</p>
<pre><code>\begin{tabular}{|l|c|r|}
 \hline
操作系统&amp; 发行版&amp; 编辑器\\
 \hline
Windows &amp; MikTeX &amp; TexMakerX \\
 \hline
Unix/Linux &amp; teTeX &amp; Kile \\
 \hline
Mac OS &amp; MacTeX &amp; TeXShop \\
 \hline
通用&amp; TeX Live &amp; TeXworks \\
 \hline
\end{tabular}</code></pre><p>效果：</p>
<p><img src="https://liam.page/uploads/teaching/LaTeX/figures/818901c1jw1e44ku9n696j20cj05haad.jpg" alt="img"></p>
<h3 id="浮动体"><a href="#浮动体" class="headerlink" title="浮动体"></a>浮动体</h3><p>插图和表格通常需要占据大块空间，所以在文字处理软件中我们经常需要调整他们的位置。<code>figure</code> 和 <code>table</code> 环境可以自动完成这样的任务；这种自动调整位置的环境称作浮动体(float)。我们以 <code>figure</code> 为例。</p>
<pre><code>\begin{figure}[htbp]
\centering
\includegraphics{a.jpg}
\caption{有图有真相}
\label{fig:myphoto}
\end{figure}</code></pre><p><code>htbp</code> 选项用来指定插图的理想位置，这几个字母分别代表 here, top, bottom, float page，也就是就这里、页顶、页尾、浮动页（专门放浮动体的单独页面或分栏）。<code>\centering</code> 用来使插图居中；<code>\caption</code> 命令设置插图标题，LaTeX 会自动给浮动体的标题加上编号。注意 <code>\label</code> 应该放在标题命令之后。</p>
<blockquote>
<p>图片和表格的各种特殊效果，限于篇幅此处无法详叙。请查看最后一章推荐的文档。</p>
<p>如果你困惑于「为什么图表会乱跑」或者「怎样让图表不乱跑」，请看<a href="https://www.zhihu.com/question/25082703/answer/30038248" target="_blank" rel="noopener">回答</a>。</p>
</blockquote>
<h2 id="版面设置"><a href="#版面设置" class="headerlink" title="版面设置"></a>版面设置</h2><h3 id="页边距"><a href="#页边距" class="headerlink" title="页边距"></a>页边距</h3><p>设置页边距，推荐使用 <code>geometry</code> 宏包。可以在<a href="http://texdoc.net/texmf-dist/doc/latex/geometry/geometry.pdf" target="_blank" rel="noopener">这里</a>查看它的说明文档。</p>
<p>比如我希望，将纸张的长度设置为 20cm、宽度设置为 15cm、左边距 1cm、右边距 2cm、上边距 3cm、下边距 4cm，可以在导言区加上这样几行：</p>
<pre><code>\usepackage{geometry}
\geometry{papersize={20cm,15cm}}
\geometry{left=1cm,right=2cm,top=3cm,bottom=4cm}</code></pre><h3 id="页眉页脚"><a href="#页眉页脚" class="headerlink" title="页眉页脚"></a>页眉页脚</h3><p>设置页眉页脚，推荐使用 <code>fancyhdr</code> 宏包。可以在<a href="http://texdoc.net/texmf-dist/doc/latex/fancyhdr/fancyhdr.pdf" target="_blank" rel="noopener">这里</a>查看它的说明文档。</p>
<p>比如我希望，在页眉左边写上我的名字，中间写上今天的日期，右边写上我的电话；页脚的正中写上页码；页眉和正文之间有一道宽为 0.4pt 的横线分割，可以在导言区加上如下几行：</p>
<pre><code>\usepackage{fancyhdr}
\pagestyle{fancy}
\lhead{\author}
\chead{\date}
\rhead{152xxxxxxxx}
\lfoot{}
\cfoot{\thepage}
\rfoot{}
\renewcommand{\headrulewidth}{0.4pt}
\renewcommand{\headwidth}{\textwidth}
\renewcommand{\footrulewidth}{0pt}</code></pre><h3 id="首行缩进"><a href="#首行缩进" class="headerlink" title="首行缩进"></a>首行缩进</h3><p>CTeX 宏集已经处理好了首行缩进的问题（自然段前空两格汉字宽度）。因此，使用 CTeX 宏集进行中西文混合排版时，我们不需要关注首行缩进的问题。</p>
<blockquote>
<p>如果你因为某些原因选择不适用 CTeX 宏集（不推荐）进行中文支持和版式设置，则你需要做额外的一些工作。</p>
<ul>
<li>调用 <code>indentfirst</code> 宏包。具体来说，中文习惯于每个自然段的段首都空出两个中文汉字的长度作为首行缩进，但西文行文习惯于不在逻辑节（<code>\section</code> 等）之后缩进。使用改宏包可使 LaTeX 在每个自然段都首行缩进。</li>
<li>设置首行缩进长度 <code>\setlength{\parindent}{2\ccwd}</code>。其中 <code>\ccwd</code> 是 <code>xeCJK</code> 定义的宏，它表示当前字号中一个中文汉字的宽度。</li>
</ul>
</blockquote>
<h3 id="行间距"><a href="#行间距" class="headerlink" title="行间距"></a>行间距</h3><p>我们可以通过 <code>setspace</code> 宏包提供的命令来调整行间距。比如在导言区添加如下内容，可以将行距设置为字号的 1.5 倍：</p>
<pre><code>\usepackage{setspace}
\onehalfspacing</code></pre><p>具体可以查看该宏包的<a href="http://texdoc.net/texmf-dist/doc/latex/setspace/README" target="_blank" rel="noopener">文档</a>。</p>
<blockquote>
<p>请注意用词的差别：</p>
<ul>
<li>行距是字号的 1.5 倍；</li>
<li>1.5 倍行距。</li>
</ul>
<p>事实上，这不是设置 1.5 倍行距的正确方法，请参考<a href="https://liam.page/2013/10/17/LaTeX-Linespace/" target="_blank" rel="noopener">这篇博文</a>。另外，<a href="https://github.com/RuixiZhang42" target="_blank" rel="noopener">RuixiZhang</a> 开发了 <a href="https://github.com/CTeX-org/ctex-kit/tree/master/zhlineskip" target="_blank" rel="noopener">zhlineskip</a> 宏包，提供了对中西文混排更细致的行距控制能力。</p>
</blockquote>
<h3 id="段间距"><a href="#段间距" class="headerlink" title="段间距"></a>段间距</h3><p>我们可以通过修改长度 <code>\parskip</code> 的值来调整段间距。例如在导言区添加以下内容</p>
<pre><code>\addtolength{\parskip}{.4em}</code></pre><p>则可以在原有的基础上，增加段间距 0.4em。如果需要减小段间距，只需将该数值改为负值即可。</p>
<h2 id="TeX-家族"><a href="#TeX-家族" class="headerlink" title="TeX 家族"></a>TeX 家族</h2><p>恭喜你终于看到了这里。如果你认真完成了上面所有的练习，并琢磨了其中的意义，相信你已经可以用 LaTeX 排版出漂亮的文档了。现在我们说一点历史，帮助你更好地理解 TeX 这个系统。</p>
<p>带有 TeX 的词，仅仅是本文就已经提到了 TeX, LaTeX, XeLaTeX。通常中国学生面对不了解意思的一群形近单词，都会有一种「本能的恐惧」（笑~）。因此，「大神们」在为新手介绍 TeX 的时候，如果互相争论 「XXTeX 比 YYTeX 好」或者是「XXTeX 的 YYTeX 如何如何」，往往会蹦出下面这些带有 TeX 的词汇：<br>TeX, pdfTeX, XeTeX, LuaTeX, LaTeX, pdfLaTeX, XeLaTeX …</p>
<p>事实上，这部分的内容太过复杂，我自己的了解也实在有限。所以下面这部分的内容也只能是对我了解到的知识的一个概括，甚至可能有些许谬误。所以大家只需要将这部分的内容当做是一个参考就可以了。</p>
<h3 id="TeX-LaTeX"><a href="#TeX-LaTeX" class="headerlink" title="TeX - LaTeX"></a>TeX - LaTeX</h3><p>TeX 是高德纳（Donald Ervin Knuth，1938年1月10日 –）教授<del>愤世嫉俗</del>追求完美做出来的排版引擎，同时也是该引擎使用的标记语言（Markup Language）的名称。这里所谓的引擎，是指能够实现断行、分页等操作的程序（请注意这并不是定义）；这里的标记语言，是指一种将控制命令和文本结合起来的格式，它的主体是其中的文本而控制命令则实现一些特殊效果（同样请注意这并不是定义）。</p>
<blockquote>
<p>你可以在<a href="http://en.wikipedia.org/wiki/TeX" target="_blank" rel="noopener">这里</a>找到关于 TeX 引擎的具体描述；</p>
<p>你可以在<a href="http://en.wikipedia.org/wiki/Markup_language" target="_blank" rel="noopener">这里</a>找到关于标记语言的具体描述。</p>
</blockquote>
<p>而 LaTeX 则是 L. Lamport （1941年2月7日 – ） 教授开发的基于 TeX 的排版系统。实际上 LaTeX 利用 TeX 的控制命令，定义了许多新的控制命令并封装成一个可执行文件。这个可执行文件会去解释 LaTeX 新定义的命令成为 TeX 的控制命令，并最终交由 TeX 引擎进行排版。</p>
<blockquote>
<p>实际上，LaTeX 是基于一个叫做 plain TeX 的格式的。plain TeX 是高德纳教授为了方便用户，自己基于原始的 TeX 定义的格式，但实际上 plain TeX 的命令仍然十分晦涩。至于原始的 TeX 直接使用的人就更少了，因此 plain TeX 格式逐渐就成为了 TeX 格式的同义词，尽管他们事实上是不同的。</p>
</blockquote>
<p>因此在 TeX - LaTeX 组合中，</p>
<ol>
<li>最终进行断行、分页等操作的，是 TeX 引擎；</li>
<li>LaTeX 实际上是一个工具，它将用户按照它的格式编写的文档解释成 TeX 引擎能理解的形式并交付给 TeX 引擎处理，再将最终结果返回给用户。</li>
</ol>
<h3 id="pdfTeX-pdfLaTeX"><a href="#pdfTeX-pdfLaTeX" class="headerlink" title="pdfTeX - pdfLaTeX"></a>pdfTeX - pdfLaTeX</h3><p>TeX 系统生成的文件是 <em>dvi</em> 格式，虽然可以用其他程序将其转换为例如 pdf 等更为常见的格式，但是毕竟不方便。</p>
<blockquote>
<p>dvi 格式是为了排版而产生的，它本身并不支持所谓的「交叉引用」，pdfTeX 直接输出 pdf 格式的文档，这也是 pdfTeX 相对 TeX 进步（易用性方面）的地方。</p>
</blockquote>
<p>为了解决这个问题，Hàn Thế Thành 博士在他的博士论文中提出了 pdfTeX 这个对 TeX 引擎的扩展。二者最主要的差别就是 pdfTeX 直接输出 pdf 格式文档，而 TeX 引擎则输出 dvi 格式的文档。</p>
<blockquote>
<p>pdfTeX 的信息可以查看<a href="http://en.wikipedia.org/wiki/PdfTeX" target="_blank" rel="noopener">wiki</a>.</p>
</blockquote>
<p>pdfLaTeX 这个程序的主要工作依旧是将 LaTeX 格式的文档进行解释，不过此次是将解释之后的结果交付给 pdfTeX 引擎处理。</p>
<h3 id="XeTeX-XeLaTeX"><a href="#XeTeX-XeLaTeX" class="headerlink" title="XeTeX - XeLaTeX"></a>XeTeX - XeLaTeX</h3><p>高德纳教授在实现 TeX 的当初并没有考虑到中日韩等字符的处理，而只支持 ASCII 字符。这并不是说中日韩字符就无法使用 TeX 引擎排版了，事实上 TeX 将每个字符用一个框包括起来（这被称为<strong>盒子</strong>）然后将一个个的盒子按照一定规则排列起来，因而 TeX 的算法理论上适用于任何字符。ASCII 字符简单理解，就是在半角模式下你的键盘能直接输出的字符。</p>
<p>在 XeTeX 出现之前，为了能让 TeX 系统排版中文，国人曾使用了 天元、CCT、<strong>CJK</strong> 等手段处理中文。其中 天元和CCT 现在已经基本不用，CJK 因为使用时间长且效果相对较好，现在还有人使用。</p>
<p>不同于 CJK 等方式使用 TeX 和 pdfTeX 这两个不直接支持 Unicode 字符的引擎，XeTeX 引擎直接支持 Unicode 字符。也就是说现在不使用 CJK 也能排版中日韩文的文档了，并且这种方式要比之前的方式更加优秀。</p>
<p>XeLaTeX 和 XeTeX 的关系与 pdfLaTeX 和 pdfTeX 的关系类似，这里不再赘述。</p>
<p>使用 XeTeX 引擎需要使用 UTF-8 编码。</p>
<blockquote>
<p>所谓编码就是字符在计算机储存时候的对应关系。例如，假设有一种编码，将汉字「你」对应为数字「1」；「好」对应为数字「2」，则含有「你好」的纯文本文件，在计算机中储存为「12」（读取文件的时候，将「12」再转换为「你好」显示在屏幕上或打印出来）。</p>
<p>UTF-8 编码是 Unicode 编码的一种，可以参考它的 <a href="http://en.wikipedia.org/wiki/UTF-8" target="_blank" rel="noopener">wiki</a>.</p>
</blockquote>
<h3 id="LuaTeX"><a href="#LuaTeX" class="headerlink" title="LuaTeX"></a>LuaTeX</h3><p>LuaTeX 是正在开发完善的一个 TeX 引擎，相对它的前辈们还相当的不完善，这里不赘述。</p>
<h3 id="CTeX-MiKTeX-TeX-Live"><a href="#CTeX-MiKTeX-TeX-Live" class="headerlink" title="CTeX - MiKTeX - TeX Live"></a>CTeX - MiKTeX - TeX Live</h3><p>之前介绍了 TeX, LaTeX, pdfTeX, pdfLaTeX, XeTeX, XeLaTeX, LuaTeX 等，他们都是 TeX 家族的一部分。但是作为一个能够使用的 TeX 系统，仅仅有他们还是不够的。CTeX, MiKTeX, TeX Live 都是被称为「发行」的软件合集。他们包括了上述各种引擎的可执行程序，以及一些文档类、模板、字体文件、辅助程序等等。其中 CTeX 是建立在 MiKTeX 的基础之上的。</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>TeX - pdfTeX - XeTeX - LuaTeX 都是排版引擎，按照先进程度递增（LuaTeX 尚未完善）。</p>
<p>LaTeX 是一种格式，基于 TeX 格式定义了很多更方便使用的控制命令。上述四个引擎都有对应的程序将 LaTeX 格式解释成引擎能处理的内容。</p>
<p>CTeX, MiKTeX, TeX Live 都是 TeX 的发行，他们是许许多多东西的集合。</p>
<h2 id="出现问题应当如何处理-怎样聪明地提出你的问题——怎样从这里毕业"><a href="#出现问题应当如何处理-怎样聪明地提出你的问题——怎样从这里毕业" class="headerlink" title="出现问题应当如何处理/怎样聪明地提出你的问题——怎样从这里毕业"></a>出现问题应当如何处理/怎样聪明地提出你的问题——怎样从这里毕业</h2><p>这篇文章原来的名字叫做<strong>慢慢爱上 LaTeX</strong>，后来行文的过程中发觉 LaTeX 实在是有太多的内容可以讲述，越发地没有把握让大家仅仅通过这一篇短小的文章就喜欢上 LaTeX，于是改成了现在这个名字。</p>
<p>限于篇幅，还有我的精力，这篇文章事实上还有许多的问题没有讲明白。它仅仅是提供了一些，在你学习使用 LaTeX 可能遇到的问题的解决方案，并不完全，而且没有教会你如何处理编译过程中可能遇到的形形色色的错误。<br>所以这最终只能是一篇小文，而不可能成为一篇正式的文档。</p>
<p>因此，如果通过我这篇小文，体验到了 LaTeX 带给你的一些乐趣，有了对 LaTeX 的兴趣（如果是这样，我就已经能够无比开心了~），请务必去阅读一些正式的 LaTeX 文档。</p>
<h3 id="去读文档"><a href="#去读文档" class="headerlink" title="去读文档"></a>去读文档</h3><p>关于 LaTeX 的文档有很多，其中有些内容过时地很快。所以有必要告诉大家，哪些文档应该看，那些文档不应该看。索性，这个问题，刘海洋(milksea)前辈已经叙述得很清楚了。前段时间，我和几个朋友，将现在看起来还未过时的文档打包上传到了我的博客。参考：<a href="https://liam.page/attachment/attachment/LaTeX-useful-tools/LaTeX_Docs_2014.zip" target="_blank" rel="noopener">ZIP 归档</a>。</p>
<h3 id="遇到问题怎么办"><a href="#遇到问题怎么办" class="headerlink" title="遇到问题怎么办"></a>遇到问题怎么办</h3><ol>
<li>绝对的新手，先读完一本入门读物，了解基本的知识；</li>
<li>无论如何，先读文档！绝大部分问题都是文档可以解决的；</li>
<li>利用 Google 搜索你的问题；</li>
<li>在各个论坛或者 LaTeX 交流群里聪明地提出你的问题。</li>
</ol>
<p>参考：<a href="https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/master/README-zh_CN.md" target="_blank" rel="noopener">https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/master/README-zh_CN.md</a></p>
 </font>]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>latex</tag>
      </tags>
  </entry>
  <entry>
    <title>Tex Live下载及安装说明</title>
    <url>/2020/04/27/tex-live-install/</url>
    <content><![CDATA[<p><font size =4>关于Tex live的基本使用<a id="more"></a></p>
<h2 id="关于-CTeX"><a href="#关于-CTeX" class="headerlink" title="关于 CTeX"></a>关于 CTeX</h2><h3 id="CTeX-套装"><a href="#CTeX-套装" class="headerlink" title="CTeX 套装"></a>CTeX 套装</h3><p>CTeX 套装是科学院吴凌云研究员的个人作品。在 CTeX 套装刚刚问世之时，因其解决了繁琐的中文字体安装工作，所以广受欢迎。但是，一方面 CTeX 套装已经很久不更新，内里的宏包、工具陈旧；另一方面，随着 XeLaTeX 的发展，以及 xeCJK 等技术的成熟，上述这些繁琐的工作已经没有必要而失去意义；因此，现在不推荐使用 CTeX 套装。</p>
<blockquote>
<p>不要安装和使用 CTeX 套装！</p>
</blockquote>
<h3 id="CTeX-宏集"><a href="#CTeX-宏集" class="headerlink" title="CTeX 宏集"></a>CTeX 宏集</h3><p>虽然它的名字也是「CTeX」，但是 CTeX 宏集和 CTeX 套装是两个不同的东西。CTeX 宏集是集成了中文支持、操作系统判定、字体选择、版式预设为一体的一组宏包和文档类的合集。我们推荐在任何情况下，优先使用 CTeX 宏集处理中文。</p>
<blockquote>
<p>请在任何情况下优先使用 CTeX 宏集在 LaTeX 中处理中文！</p>
</blockquote>
<h2 id="关于-TeX-Live"><a href="#关于-TeX-Live" class="headerlink" title="关于 TeX Live"></a>关于 TeX Live</h2><p>TeX Live 是 TUG (TeX User Group) 维护和发布的 TeX 系统，可说是「官方」的 TeX 系统。我们推荐任何阶段的 TeX 用户，都尽可能使用 TeX Live，以保持在跨操作系统平台、跨用户的一致性。TeX Live 的官方站点是 <a href="https://tug.org/texlive/。" target="_blank" rel="noopener">https://tug.org/texlive/。</a></p>
<h3 id="Mac-用户"><a href="#Mac-用户" class="headerlink" title="Mac 用户"></a>Mac 用户</h3><p>TeX Live 在 macOS/OS X 上的名字是 MacTeX，它的官方站点是 <a href="https://tug.org/mactex。你可以在这里下载" target="_blank" rel="noopener">https://tug.org/mactex。你可以在这里下载</a> MacTeX 的安装器，而后安装 MacTeX。</p>
<ul>
<li><a href="http://tug.org/cgi-bin/mactex-download/MacTeX.pkg" target="_blank" rel="noopener">http://tug.org/cgi-bin/mactex-download/MacTeX.pkg</a></li>
</ul>
<p>如果你身处中国大陆，发现下载速度很慢，可以尝试国内的镜像站。</p>
<ul>
<li>清华大学（北京）：<a href="https://mirrors.tuna.tsinghua.edu.cn/CTAN/systems/mac/mactex/MacTeX.pkg" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn/CTAN/systems/mac/mactex/MacTeX.pkg</a></li>
<li>北京交通大学（北京）：<a href="https://mirror.bjtu.edu.cn/ctan/systems/mac/mactex/MacTeX.pkg" target="_blank" rel="noopener">https://mirror.bjtu.edu.cn/ctan/systems/mac/mactex/MacTeX.pkg</a></li>
<li>上海交通大学（上海）：<a href="https://mirrors.sjtug.sjtu.edu.cn/ctan/systems/mac/mactex/MacTeX.pkg" target="_blank" rel="noopener">https://mirrors.sjtug.sjtu.edu.cn/ctan/systems/mac/mactex/MacTeX.pkg</a></li>
<li>中国科技大学（合肥）：<a href="https://mirrors.ustc.edu.cn/CTAN/systems/mac/mactex/MacTeX.pkg" target="_blank" rel="noopener">https://mirrors.ustc.edu.cn/CTAN/systems/mac/mactex/MacTeX.pkg</a></li>
<li>重庆大学（重庆）：<a href="https://mirrors.cqu.edu.cn/CTAN/systems/mac/mactex/MacTeX.pkg" target="_blank" rel="noopener">https://mirrors.cqu.edu.cn/CTAN/systems/mac/mactex/MacTeX.pkg</a></li>
<li>腾讯云：<a href="https://mirrors.cloud.tencent.com/CTAN/systems/mac/mactex/MacTeX.pkg" target="_blank" rel="noopener">https://mirrors.cloud.tencent.com/CTAN/systems/mac/mactex/MacTeX.pkg</a></li>
</ul>
<h3 id="Windows-和-nix-用户"><a href="#Windows-和-nix-用户" class="headerlink" title="Windows 和 *nix 用户"></a>Windows 和 *nix 用户</h3><p>TeX Live 的当前版本是 2020，你可以从官方站点下载它们的安装包。点击下列链接，将会「自动选择」距离你最近的镜像下载。</p>
<ul>
<li><a href="http://mirror.ctan.org/systems/texlive/Images/texlive2020.iso" target="_blank" rel="noopener">http://mirror.ctan.org/systems/texlive/Images/texlive2020.iso</a></li>
</ul>
<p>——当然，这个自动选择可能不太靠谱。如果你身处中国大陆，发现下载速度很慢，可以尝试国内的镜像站。</p>
<ul>
<li>清华大学（北京）：<a href="https://mirrors.tuna.tsinghua.edu.cn/CTAN/systems/texlive/Images/texlive2020.iso" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn/CTAN/systems/texlive/Images/texlive2020.iso</a></li>
<li>北京交通大学（北京）：<a href="https://mirror.bjtu.edu.cn/ctan/systems/texlive/Images/texlive2020.iso" target="_blank" rel="noopener">https://mirror.bjtu.edu.cn/ctan/systems/texlive/Images/texlive2020.iso</a></li>
<li>上海交通大学（上海）：<a href="https://mirrors.sjtug.sjtu.edu.cn/ctan/systems/texlive/Images/texlive2020.iso" target="_blank" rel="noopener">https://mirrors.sjtug.sjtu.edu.cn/ctan/systems/texlive/Images/texlive2020.iso</a></li>
<li>中国科技大学（合肥）：<a href="https://mirrors.ustc.edu.cn/CTAN/systems/texlive/Images/texlive2020.iso" target="_blank" rel="noopener">https://mirrors.ustc.edu.cn/CTAN/systems/texlive/Images/texlive2020.iso</a></li>
<li>重庆大学（重庆）：<a href="https://mirrors.cqu.edu.cn/CTAN/systems/texlive/Images/texlive2020.iso" target="_blank" rel="noopener">https://mirrors.cqu.edu.cn/CTAN/systems/texlive/Images/texlive2020.iso</a></li>
<li>腾讯云：<a href="https://mirrors.cloud.tencent.com/CTAN/systems/texlive/Images/texlive2020.iso" target="_blank" rel="noopener">https://mirrors.cloud.tencent.com/CTAN/systems/texlive/Images/texlive2020.iso</a></li>
</ul>
<p>你需要使用<a href="http://wincdemu.sysprogs.org/download/" target="_blank" rel="noopener">虚拟光驱软件</a>（对于 Windows 8 及更高版本的微软用户，可以直接加载），加载下载得到的光盘镜像。而后，执行安装脚本，将 TeX Live 安装在你的系统中。</p>
<ul>
<li>Windows 用户右键单击 <code>install-tl-advanced.bat</code>，以管理员权限执行；</li>
<li>*nix 用户执行 <code>install-tl</code>。</li>
</ul>
</font>]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>latex</tag>
      </tags>
  </entry>
</search>
